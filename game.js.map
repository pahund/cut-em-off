{"version":3,"sources":["../src/pubsub/pubsub.js","../src/pubsub/constants.js","../vendor/sfxr.js","../src/audio/ArcadeAudio.js","../src/audio/sounds.js","../src/audio/index.js","../src/directions/constants.js","../src/utils/calculateCameraCoordinates.js","../src/utils/degreesToRadians.js","../src/utils/getRandomInt.js","../src/utils/multiCollides.js","../src/utils/collides.js","../src/utils/isValidTile.js","../src/directions/directionIsAllowed.js","../src/directions/switchDirection.js","../src/directions/directionSwitchMap.js","../src/directions/isIntersection.js","../src/directions/getNextTile.js","../src/config.js","../src/bomb/createBomb.js","../src/bomb/constants.js","../src/bomb/drawBomb.js","../src/bomb/drawBombWithFuse.js","../src/messageBox/messageBox.js","../src/server/Servers.js","../src/server/createServer.js","../src/map/tilesheet/utils/krakel.js","../src/server/drawServer.js","../src/bomb/updateBomb.js","../src/bomb/createShrapnel.js","../src/bomb/drawShrapnel.js","../src/bomb/Bombs.js","../src/loop/utils/moveCamera.js","../src/loop/createLoop.js","../src/map/mapData.js","../src/map/tilesheet/drawCurve.js","../src/map/tilesheet/drawStraight.js","../src/map/tilesheet/drawTSection.js","../src/map/tilesheet/drawCrossing.js","../src/map/tilesheet/drawTerminus.js","../src/tileEngine/createTileEngine.js","../src/map/createMap.js","../src/map/utils/addPadding.js","../src/map/tilesheet/createTilesheet.js","../src/player/createPlayer.js","../src/player/drawPlayer.js","../src/utils/calculateRotation.js","../src/player/updatePlayer.js","../src/player/utils/getKey.js","../src/player/utils/isInTheMiddle.js","../src/pathfinder/utils/extractShortest.js","../src/pathfinder/utils/findShortestPath.js","../src/pathfinder/utils/findPaths.js","../src/pathfinder/utils/convertMapToGraph.js","../src/pathfinder/utils/getNodeByCoords.js","../src/pathfinder/utils/initGraphAndAllowed.js","../src/pathfinder/pathfinder.js","../src/pathfinder/initPathfinder.js","../src/user/Users.js","../src/user/createUser.js","../src/user/constants.js","../src/user/drawUser.js","../src/virus/createVirus.js","../src/virus/Blips.js","../src/virus/updateVirus.js","../src/virus/utils/moveVirus.js","../src/virus/utils/isInTheMiddle.js","../src/virus/utils/getBestDirections.js","../src/directions/getOppositeDirection.js","../src/virus/drawVirus.js","../src/virus/createBlip.js","../src/virus/drawBlip.js","../src/canvas/createCanvas.js","../src/gameManager/gameManager.js","../src/index.js"],"names":["pubsub","[object Object]","this","subscribers","message","callback","push","incomingMessage","payload","forEach","GAME_OVER","DROP_BOMB","BOMB_EXPLODES","INFECTED","DROP_SHIP","USERS_POSSIBLY_OFFLINE","synth","_envelopeLength0","_envelopeLength1","_envelopeLength2","_period","_maxPeriod","_slide","_deltaSlide","_changeAmount","_changeTime","_changeLimit","_squareDuty","_dutySweep","_params","setSettings","values","i","String","fromCharCode","c","totalTime","b","e","multiplier","reset","p","f","g","h","a","n","o","l","m","totalReset","synthWave","buffer","length","_filters","s","v","_hpFilterCutoff","_hpFilterDeltaCutoff","w","_lpFilterCutoff","_lpFilterDeltaCutoff","t","_lpFilterOn","_masterVolume","x","_minFreqency","_phaser","q","r","_phaserDeltaOffset","_phaserOffset","_repeatLimit","_sustainPunch","d","_vibratoAmplitude","j","_vibratoSpeed","k","_waveType","_envelopeLength","_envelopeOverLength0","_envelopeOverLength1","_envelopeOverLength2","_lpFilterDamping","u","_lpFilterOldPos","_periodTemp","_phaserInt","_pos","_finished","_envelopeStage","_envelopeTime","_envelopeVolume","_hpFilterPos","_lpFilterDeltaPos","_lpFilterPos","_phase","_phaserPos","_repeatTime","_sample","_superSample","_vibratoPhase","_phaserBuffer","Array","_noiseBuffer","Math","random","sin","abs","jsfxr","settings","envelopeFullLength","data","Uint8Array","used","Uint16Array","dv","Uint32Array","base64Characters","output","slice","ArcadeAudio","aa","sounds","add","prototype","key","count","elem","index","tick","pool","audio","Audio","src","play","sound","soundData","floor","N","E","S","W","calculateCameraCoordinates","col","row","sx","tileWidth","canvasWidth","sy","tileHeight","canvasHeight","deg2rad","degrees","PI","ri","min","max","multiCollides","arr1","arr2","collisions","i1","sprite1","i2","sprite2","collides","dx","dy","y","sqrt","collisionRadius","isValidTile","tile","directionIsAllowed","map","direction","tileAtLayer","directionSwitchMap","allowed","includes","nextTile","getNextTile","switchDirection","curr","Error","nextDirection","change","otherDirections","filter","dir","getRandomInt","1","2","3","4","5","6","9","10","11","12","13","17","18","19","20","intersectionTiles","Object","entries","Number","virusBlipInterval","lightGreen","createBomb","getXAndY","context","kontra","fuseLength","status","FUSE_BURNING","shrapnel","explosionDuration","mapX","mapY","updateBomb","drawBomb","EXPLODED","sprite","drawBombWithFuse","render","ctx","save","translate","rotate","lineWidth","strokeStyle","fillStyle","beginPath","moveTo","lineTo","arc","fill","stroke","fuseDeg","sparkCX","cos","sparkCY","sparkX","sparkY","fillRect","restore","messageBox","timeoutHandler","div","document","createElement","style","cssText","getElementById","appendChild","clearTimeout","transition","innerHTML","opacity","setTimeout","servers","nextServerPointer","serverCoordinates","createServer","server","update","find","broken","virus","availableServers","getAvailableServers","serverVirusCollisions","console","log","infected","flash","isNextPointerInRange","drawServer","krakel","draw","publish","createShrapnel","destroy","changeTile","speed","rotation","rotationDir","closePath","drawShrapnel","Bombs","bombs","subscribe","mapCoords","dropBomb","bomb","createLoop","player","users","shipMoving","gameLoop","infect","teleport","moveCamera","mapData","calculatePointOnArc","deg","drawCurve","drawStraight","drawTSection","drawCrossing","drawTerminus","createTileEngine","properties","width","height","mapWidth","mapHeight","canvas","offscreenCanvas","offscreenContext","getContext","sxMax","syMax","_sx","_sy","layerOrder","tileEngine","tilesets","layers","addTilesets","concat","tileset","tilesetImage","image","firstGrid","lastTileset","tiles","Infinity","path","lastIndexOf","substr","assets","images","numTiles","lastGrid","sort","addLayers","layer","value","undefined","isArray","name","zIndex","prop","hasOwnProperty","JSON","parse","layerIndex","dataIndex","len","renderTile","preRenderImage","layerId","position","getIndex","drawImage","renderLayer","getRow","getCol","startX","startY","viewWidth","ceil","tileOffset","getTileset","currTile","clear","clearRect","createMap","async","paddedMap","arr","pad","retVal","idx","addPadding","Image","toDataURL","Promise","resolve","createTilesheet","createPlayer","gameOver","scale","dropping","bombCoolingDown","teleportToServer","teleportCoolingDown","updatePlayer","drawPlayer","show","nextServer","getNext","degreesToRadians","calculateRotation","keys","pressed","getKey","isInTheMiddle","getRowAndCol","extractShortest","predecessors","end","nodes","get","reverse","findShortestPath","graph","start","shift","shortest","findPaths","apply","costs","Map","open","addToOpen","cost","vertex","vertices","set","size","currentCost","from","bucket","node","adjacentNodes","delete","totalCost","vertexCost","convertMapToGraph","initGraphAndAllowed","adjacent","currAllowed","target","getNodeByCoords","layerData","pathfinder","coords","args","findShortestPathByCoords","initPathfinder","setDataFromMap","changedMap","Users","createUser","viruses","virusesWithRowAndCol","goneOffline","user","ONLINE","isReachable","OFFLINE","online","offline","getStats","reduce","acc","userVirusCollisions","drawUser","INFECTED_EVENT","spriteMapping","fg","bg","createVirus","blips","setInterval","createBlip","blip","ttl","updateVirus","drawVirus","visits","moveVirus","isIntersection","bestDirections","viable","minVis","MAX_SAFE_INTEGER","vis","getBestDirection","getOppositeDirection","radius","drawBlip","createCanvas","gameManager","init","updateOnlineStatus","loop","addEventListener","startLevel","enableControls","once","showStartScreen"],"mappings":"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AAI,EAAI,EAAG,GAAK,EAAI,EAC7E,GAAK,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAG,GAAI,GAAK,EAAI,EAAG,GAAI,GAAK,EAAI,EAC5E,EAAI,EAAG,GAAI,GAAK,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAC5E,EAAI,EAAI,EAAG,GAAK,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EAAG,GAAI,GAAK,EAAI,EAC5E,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAC3E,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EAAG,GAAK,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAC5E,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAC5E,EAAI,EAAG,GAAK,EAAI,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAC5E,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAG,GAC3E,EAAI,EAAG,GAAK,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAK,EAAI,EAAI,EAC5E,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAC3E,EAAI,EAAG,GAAK,EAAI,EAAG,GAAI,GAAK,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAK,EAAG,GAAK,EAAI,EAAI,EAAI,EAC5E,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAG,GAAI,GAAI,GAAI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","sourcesContent":["// exported for testing\nexport class Pubsub {\n    constructor() {\n        this.subscribers = [];\n    }\n    subscribe(message, callback) {\n        this.subscribers.push({ message, callback });\n    }\n    publish(incomingMessage, payload) {\n        this.subscribers.forEach(({ message, callback }) => message === incomingMessage && callback(payload));\n    }\n}\n\nexport default new Pubsub();\n","export const GAME_OVER = 0;\nexport const DROP_BOMB = 1;\nexport const BOMB_EXPLODES = 6;\nexport const INFECTED = 7;\nexport const DROP_SHIP = 2;\nexport const MAP_CHANGED = 3;\nexport const USERS_POSSIBLY_OFFLINE = 4;\n","/**\n * SfxrParams\n *\n * Copyright 2010 Thomas Vian\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @author Thomas Vian\n */\nfunction SfxrParams() {\n    //--------------------------------------------------------------------------\n    //\n    //  Settings String Methods\n    //\n    //--------------------------------------------------------------------------\n\n    /**\n     * Parses a settings array into the parameters\n     * @param array Array of the settings values, where elements 0 - 23 are\n     *                a: waveType\n     *                b: attackTime\n     *                c: sustainTime\n     *                d: sustainPunch\n     *                e: decayTime\n     *                f: startFrequency\n     *                g: minFrequency\n     *                h: slide\n     *                i: deltaSlide\n     *                j: vibratoDepth\n     *                k: vibratoSpeed\n     *                l: changeAmount\n     *                m: changeSpeed\n     *                n: squareDuty\n     *                o: dutySweep\n     *                p: repeatSpeed\n     *                q: phaserOffset\n     *                r: phaserSweep\n     *                s: lpFilterCutoff\n     *                t: lpFilterCutoffSweep\n     *                u: lpFilterResonance\n     *                v: hpFilterCutoff\n     *                w: hpFilterCutoffSweep\n     *                x: masterVolume\n     * @return If the string successfully parsed\n     */\n    this.setSettings = function(values) {\n        for (let i = 0; i < 24; i++) {\n            this[String.fromCharCode(97 + i)] = values[i] || 0;\n        }\n\n        // I moved this here from the reset(true) function\n        if (this.c < 0.01) {\n            this.c = 0.01;\n        }\n\n        const totalTime = this.b + this.c + this.e;\n        if (totalTime < 0.18) {\n            const multiplier = 0.18 / totalTime;\n            this.b *= multiplier;\n            this.c *= multiplier;\n            this.e *= multiplier;\n        }\n    };\n}\n\n/**\n * SfxrSynth\n *\n * Copyright 2010 Thomas Vian\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @author Thomas Vian\n */\nfunction SfxrSynth() {\n    // All variables are kept alive through function closures\n\n    //--------------------------------------------------------------------------\n    //\n    //  Sound Parameters\n    //\n    //--------------------------------------------------------------------------\n\n    this._params = new SfxrParams(); // Params instance\n\n    //--------------------------------------------------------------------------\n    //\n    //  Synth Variables\n    //\n    //--------------------------------------------------------------------------\n\n    let _envelopeLength0, // Length of the attack stage\n        _envelopeLength1, // Length of the sustain stage\n        _envelopeLength2, // Length of the decay stage\n        _period, // Period of the wave\n        _maxPeriod, // Maximum period before sound stops (from minFrequency)\n        _slide, // Note slide\n        _deltaSlide, // Change in slide\n        _changeAmount, // Amount to change the note by\n        _changeTime, // Counter for the note change\n        _changeLimit, // Once the time reaches this limit, the note changes\n        _squareDuty, // Offset of center switching point in the square wave\n        _dutySweep; // Amount to change the duty by\n\n    //--------------------------------------------------------------------------\n    //\n    //  Synth Methods\n    //\n    //--------------------------------------------------------------------------\n\n    /**\n     * Resets the runing variables from the params\n     * Used once at the start (total reset) and for the repeat effect (partial reset)\n     */\n    this.reset = function() {\n        // Shorter reference\n        const p = this._params;\n\n        _period = 100 / (p.f * p.f + 0.001);\n        _maxPeriod = 100 / (p.g * p.g + 0.001);\n\n        _slide = 1 - p.h * p.h * p.h * 0.01;\n        _deltaSlide = -p.i * p.i * p.i * 0.000001;\n\n        if (!p.a) {\n            _squareDuty = 0.5 - p.n / 2;\n            _dutySweep = -p.o * 0.00005;\n        }\n\n        _changeAmount = p.l > 0 ? 1 - p.l * p.l * 0.9 : 1 + p.l * p.l * 10;\n        _changeTime = 0;\n        _changeLimit = p.m == 1 ? 0 : (1 - p.m) * (1 - p.m) * 20000 + 32;\n    };\n\n    // I split the reset() function into two functions for better readability\n    this.totalReset = function() {\n        this.reset();\n\n        // Shorter reference\n        const p = this._params;\n\n        // Calculating the length is all that remained here, everything else moved somewhere\n        _envelopeLength0 = p.b * p.b * 100000;\n        _envelopeLength1 = p.c * p.c * 100000;\n        _envelopeLength2 = p.e * p.e * 100000 + 10;\n        // Full length of the volume envelop (and therefore sound)\n        return (_envelopeLength0 + _envelopeLength1 + _envelopeLength2) | 0;\n    };\n\n    /**\n     * Writes the wave to the supplied buffer ByteArray\n     * @param buffer A ByteArray to write the wave to\n     * @return If the wave is finished\n     */\n    this.synthWave = function(buffer, length) {\n        // Shorter reference\n        const p = this._params;\n\n        // If the filters are active\n        const _filters = p.s != 1 || p.v;\n\n        // Cutoff multiplier which adjusts the amount the wave position can move\n\n        let _hpFilterCutoff = p.v * p.v * 0.1;\n\n        // Speed of the high-pass cutoff multiplier\n\n        const _hpFilterDeltaCutoff = 1 + p.w * 0.0003;\n\n        // Cutoff multiplier which adjusts the amount the wave position can move\n\n        let _lpFilterCutoff = p.s * p.s * p.s * 0.1;\n\n        // Speed of the low-pass cutoff multiplier\n\n        const _lpFilterDeltaCutoff = 1 + p.t * 0.0001;\n\n        // If the low pass filter is active\n\n        const _lpFilterOn = p.s != 1;\n\n        // masterVolume * masterVolume (for quick calculations)\n\n        const _masterVolume = p.x * p.x;\n\n        // Minimum frequency before stopping\n\n        const _minFreqency = p.g;\n\n        // If the phaser is active\n\n        const _phaser = p.q || p.r;\n\n        // Change in phase offset\n\n        const _phaserDeltaOffset = p.r * p.r * p.r * 0.2;\n\n        // Phase offset for phaser effect\n\n        let _phaserOffset = p.q * p.q * (p.q < 0 ? -1020 : 1020);\n\n        // Once the time reaches this limit, some of the    iables are reset\n\n        const _repeatLimit = p.p ? (((1 - p.p) * (1 - p.p) * 20000) | 0) + 32 : 0;\n\n        // The punch factor (louder at begining of sustain)\n\n        const _sustainPunch = p.d;\n\n        // Amount to change the period of the wave by at the peak of the vibrato wave\n\n        const _vibratoAmplitude = p.j / 2;\n\n        // Speed at which the vibrato phase moves\n\n        const _vibratoSpeed = p.k * p.k * 0.01;\n\n        // The type of wave to generate\n\n        const _waveType = p.a;\n\n        let _envelopeLength = _envelopeLength0;\n        // Length of the current envelope stage\n\n        const _envelopeOverLength0 = 1 / _envelopeLength0;\n        // (for quick calculations)\n\n        const _envelopeOverLength1 = 1 / _envelopeLength1;\n        // (for quick calculations)\n\n        const _envelopeOverLength2 = 1 / _envelopeLength2; // (for quick calculations)\n\n        // Damping muliplier which restricts how fast the wave position can move\n        let _lpFilterDamping = (5 / (1 + p.u * p.u * 20)) * (0.01 + _lpFilterCutoff);\n        if (_lpFilterDamping > 0.8) {\n            _lpFilterDamping = 0.8;\n        }\n        _lpFilterDamping = 1 - _lpFilterDamping;\n\n        let _finished = false;\n        // If the sound has finished\n\n        let _envelopeStage = 0;\n        // Current stage of the envelope (attack, sustain, decay, end)\n\n        let _envelopeTime = 0;\n        // Current time through current enelope stage\n\n        let _envelopeVolume = 0;\n        // Current volume of the envelope\n\n        let _hpFilterPos = 0;\n        // Adjusted wave position after high-pass filter\n\n        let _lpFilterDeltaPos = 0;\n        // Change in low-pass wave position, as allowed by the cutoff and damping\n\n        let _lpFilterOldPos,\n\n\n        // Previous low-pass wave position\n\n         \n _lpFilterPos = 0;\n\n\n\n        // Adjusted wave position after low-pass filter\n\n         \n \nlet _periodTemp,\n\n\n        // Period modified by vibrato\n\n         _phase = 0;\n\n\n        // Phase through the wave\n\n         \nlet _phaserInt;\n\n        // Integer phaser offset, for bit maths\n\n        let _phaserPos = 0;\n\n        // Position through the phaser buffer\n\n        let _pos,\n\n\n\n        // Phase expresed as a Number from 0-1, used for fast sin approx\n\n         \n \n \n _repeatTime = 0;\n\n\n\n\n // Counter for the repeats\n            \n \n \n \n \nvar _sample;\n\n\n\n\n // Sub-sample calculated 8 times per actual sample, averaged out to get the super sample\n            \n \n \n \n \nvar _superSample;\n        // Actual sample writen to the wave\n\n        let _vibratoPhase = 0; // Phase through the vibrato sine wave\n\n        // Buffer of wave values used to create the out of phase second wave\n        const _phaserBuffer = new Array(1024);\n\n        // Buffer of random values used to generate noise\n\n        const _noiseBuffer = new Array(32);\n        for (var i = _phaserBuffer.length; i--; ) {\n            _phaserBuffer[i] = 0;\n        }\n        for (var i = _noiseBuffer.length; i--; ) {\n            _noiseBuffer[i] = Math.random() * 2 - 1;\n        }\n\n        for (var i = 0; i < length; i++) {\n            if (_finished) {\n                return i;\n            }\n\n            // Repeats every _repeatLimit times, partially resetting the sound parameters\n            if (_repeatLimit) {\n                if (++_repeatTime >= _repeatLimit) {\n                    _repeatTime = 0;\n                    this.reset();\n                }\n            }\n\n            // If _changeLimit is reached, shifts the pitch\n            if (_changeLimit) {\n                if (++_changeTime >= _changeLimit) {\n                    _changeLimit = 0;\n                    _period *= _changeAmount;\n                }\n            }\n\n            // Acccelerate and apply slide\n            _slide += _deltaSlide;\n            _period *= _slide;\n\n            // Checks for frequency getting too low, and stops the sound if a minFrequency was set\n            if (_period > _maxPeriod) {\n                _period = _maxPeriod;\n                if (_minFreqency > 0) {\n                    _finished = true;\n                }\n            }\n\n            _periodTemp = _period;\n\n            // Applies the vibrato effect\n            if (_vibratoAmplitude > 0) {\n                _vibratoPhase += _vibratoSpeed;\n                _periodTemp *= 1 + Math.sin(_vibratoPhase) * _vibratoAmplitude;\n            }\n\n            _periodTemp |= 0;\n            if (_periodTemp < 8) {\n                _periodTemp = 8;\n            }\n\n            // Sweeps the square duty\n            if (!_waveType) {\n                _squareDuty += _dutySweep;\n                if (_squareDuty < 0) {\n                    _squareDuty = 0;\n                } else if (_squareDuty > 0.5) {\n                    _squareDuty = 0.5;\n                }\n            }\n\n            // Moves through the different stages of the volume envelope\n            if (++_envelopeTime > _envelopeLength) {\n                _envelopeTime = 0;\n\n                switch (++_envelopeStage) {\n                    case 1:\n                        _envelopeLength = _envelopeLength1;\n                        break;\n                    case 2:\n                        _envelopeLength = _envelopeLength2;\n                }\n            }\n\n            // Sets the volume based on the position in the envelope\n            switch (_envelopeStage) {\n                case 0:\n                    _envelopeVolume = _envelopeTime * _envelopeOverLength0;\n                    break;\n                case 1:\n                    _envelopeVolume = 1 + (1 - _envelopeTime * _envelopeOverLength1) * 2 * _sustainPunch;\n                    break;\n                case 2:\n                    _envelopeVolume = 1 - _envelopeTime * _envelopeOverLength2;\n                    break;\n                case 3:\n                    _envelopeVolume = 0;\n                    _finished = true;\n            }\n\n            // Moves the phaser offset\n            if (_phaser) {\n                _phaserOffset += _phaserDeltaOffset;\n                _phaserInt = _phaserOffset | 0;\n                if (_phaserInt < 0) {\n                    _phaserInt = -_phaserInt;\n                } else if (_phaserInt > 1023) {\n                    _phaserInt = 1023;\n                }\n            }\n\n            // Moves the high-pass filter cutoff\n            if (_filters && _hpFilterDeltaCutoff) {\n                _hpFilterCutoff *= _hpFilterDeltaCutoff;\n                if (_hpFilterCutoff < 0.00001) {\n                    _hpFilterCutoff = 0.00001;\n                } else if (_hpFilterCutoff > 0.1) {\n                    _hpFilterCutoff = 0.1;\n                }\n            }\n\n            _superSample = 0;\n            for (let j = 8; j--; ) {\n                // Cycles through the period\n                _phase++;\n                if (_phase >= _periodTemp) {\n                    _phase %= _periodTemp;\n\n                    // Generates new random noise for this period\n                    if (_waveType == 3) {\n                        for (let n = _noiseBuffer.length; n--; ) {\n                            _noiseBuffer[n] = Math.random() * 2 - 1;\n                        }\n                    }\n                }\n\n                // Gets the sample from the oscillator\n                switch (_waveType) {\n                    case 0: // Square wave\n                        _sample = _phase / _periodTemp < _squareDuty ? 0.5 : -0.5;\n                        break;\n                    case 1: // Saw wave\n                        _sample = 1 - (_phase / _periodTemp) * 2;\n                        break;\n                    case 2: // Sine wave (fast and accurate approx)\n                        _pos = _phase / _periodTemp;\n                        _pos = _pos > 0.5 ? (_pos - 1) * 6.28318531 : _pos * 6.28318531;\n                        _sample =\n                            _pos < 0\n                                ? 1.27323954 * _pos + 0.405284735 * _pos * _pos\n                                : 1.27323954 * _pos - 0.405284735 * _pos * _pos;\n                        _sample =\n                            _sample < 0\n                                ? 0.225 * (_sample * -_sample - _sample) + _sample\n                                : 0.225 * (_sample * _sample - _sample) + _sample;\n                        break;\n                    case 3: // Noise\n                        _sample = _noiseBuffer[Math.abs(((_phase * 32) / _periodTemp) | 0)];\n                }\n\n                // Applies the low and high pass filters\n                if (_filters) {\n                    _lpFilterOldPos = _lpFilterPos;\n                    _lpFilterCutoff *= _lpFilterDeltaCutoff;\n                    if (_lpFilterCutoff < 0) {\n                        _lpFilterCutoff = 0;\n                    } else if (_lpFilterCutoff > 0.1) {\n                        _lpFilterCutoff = 0.1;\n                    }\n\n                    if (_lpFilterOn) {\n                        _lpFilterDeltaPos += (_sample - _lpFilterPos) * _lpFilterCutoff;\n                        _lpFilterDeltaPos *= _lpFilterDamping;\n                    } else {\n                        _lpFilterPos = _sample;\n                        _lpFilterDeltaPos = 0;\n                    }\n\n                    _lpFilterPos += _lpFilterDeltaPos;\n\n                    _hpFilterPos += _lpFilterPos - _lpFilterOldPos;\n                    _hpFilterPos *= 1 - _hpFilterCutoff;\n                    _sample = _hpFilterPos;\n                }\n\n                // Applies the phaser effect\n                if (_phaser) {\n                    _phaserBuffer[_phaserPos % 1024] = _sample;\n                    _sample += _phaserBuffer[(_phaserPos - _phaserInt + 1024) % 1024];\n                    _phaserPos++;\n                }\n\n                _superSample += _sample;\n            }\n\n            // Averages out the super samples and applies volumes\n            _superSample *= 0.125 * _envelopeVolume * _masterVolume;\n\n            // Clipping if too loud\n            buffer[i] = _superSample >= 1 ? 32767 : _superSample <= -1 ? -32768 : (_superSample * 32767) | 0;\n        }\n\n        return length;\n    };\n}\n\n// Adapted from http://codebase.es/riffwave/\nconst synth = new SfxrSynth();\n// Export for the Closure Compiler\nexport default function(settings) {\n    // Initialize SfxrParams\n    synth._params.setSettings(settings);\n    // Synthesize Wave\n    const envelopeFullLength = synth.totalReset();\n    const data = new Uint8Array((((envelopeFullLength + 1) / 2) | 0) * 4 + 44);\n    let used = synth.synthWave(new Uint16Array(data.buffer, 44), envelopeFullLength) * 2;\n    const dv = new Uint32Array(data.buffer, 0, 44);\n    // Initialize header\n    dv[0] = 0x46464952; // \"RIFF\"\n    dv[1] = used + 36; // put total size here\n    dv[2] = 0x45564157; // \"WAVE\"\n    dv[3] = 0x20746d66; // \"fmt \"\n    dv[4] = 0x00000010; // size of the following\n    dv[5] = 0x00010001; // Mono: 1 channel, PCM format\n    dv[6] = 0x0000ac44; // 44,100 samples per second\n    dv[7] = 0x00015888; // byte rate: two bytes per sample\n    dv[8] = 0x00100002; // 16 bits per sample, aligned on every two bytes\n    dv[9] = 0x61746164; // \"data\"\n    dv[10] = used; // put number of samples here\n\n    // Base64 encoding written by me, @maettig\n    used += 44;\n    let i = 0;\n\n    const base64Characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n    let output = 'data:audio/wav;base64,';\n    for (; i < used; i += 3) {\n        const a = (data[i] << 16) | (data[i + 1] << 8) | data[i + 2];\n        output +=\n            base64Characters[a >> 18] +\n            base64Characters[(a >> 12) & 63] +\n            base64Characters[(a >> 6) & 63] +\n            base64Characters[a & 63];\n    }\n    i -= used;\n    return output.slice(0, output.length - i) + '=='.slice(0, i);\n}\n","import jsfxr from '../../vendor/sfxr.js';\nimport generateSounds from './sounds.js';\n\nexport default function ArcadeAudio() {\n    this.sounds = {};\n    generateSounds(this);\n}\n\nArcadeAudio.prototype.add = function(key, count, settings) {\n    this.sounds[key] = [];\n    settings.forEach(function(elem, index) {\n        this.sounds[key].push({\n            tick: 0,\n            count,\n            pool: []\n        });\n        for (let i = 0; i < count; i++) {\n            const audio = new Audio();\n            audio.src = jsfxr(elem);\n            this.sounds[key][index].pool.push(audio);\n        }\n    }, this);\n};\n\nArcadeAudio.prototype.play = function(key) {\n    const sound = this.sounds[key];\n    const soundData = sound.length > 1 ? sound[Math.floor(Math.random() * sound.length)] : sound[0];\n    soundData.pool[soundData.tick].play();\n    if (soundData.tick < soundData.count - 1) {\n        soundData.tick++;\n    } else {\n        soundData.tick = 0;\n    }\n};\n","/* eslint-disable no-sparse-arrays */\nexport default function generateSounds(aa) {\n    aa.add('infected', 3, [\n        [2, , 0.2916, , 0.2587, 0.9356, 0.3909, -0.2493, , , , , , 0.3583, 0.1617, , , , 1, , , 0.1217, , 0.5]\n    ]);\n\n    aa.add('drop-bomb', 3, [[0, , 0.0641, 0.5296, 0.1228, 0.4195, , , , , , 0.3029, 0.6261, , , , , , 1, , , , , 0.5]]);\n\n    aa.add('drop-ship', 1, [\n        [0, , 0.57, , 0.1398, 0.61, , -0.26, 0.1, , , 0.02, , 0.3325, , , , , 0.9793, , , , , 0.5]\n    ]);\n\n    aa.add('explode', 3, [\n        [3, , 0.1606, 0.5988, 0.2957, 0.1157, , -0.3921, , , , , , , , , 0.3225, -0.2522, 1, , , , , 0.25]\n    ]);\n}\n/* eslint-enable no-alert, no-console */\n","import { pubsub, DROP_BOMB, BOMB_EXPLODES, INFECTED, DROP_SHIP } from '../pubsub/index.js';\nimport ArcadeAudio from './ArcadeAudio.js';\n\nconst aa = new ArcadeAudio();\n\nexport function initAudio() {\n    pubsub.subscribe(DROP_BOMB, () => aa.play('drop-bomb'));\n    pubsub.subscribe(BOMB_EXPLODES, () => aa.play('explode'));\n    pubsub.subscribe(INFECTED, () => aa.play('infected'));\n    pubsub.subscribe(DROP_SHIP, () => aa.play('drop-ship'));\n\n    /*\n   * GENERATE NEW SOUNDS ON http://www.superflashbros.net/as3sfxr/\n   * CMD + C copies the values\n   *\n   * */\n}\n","export const N = 'N';\nexport const E = 'E';\nexport const S = 'S';\nexport const W = 'W';\n","import { tileHeight, tileWidth, canvasWidth, canvasHeight } from '../config.js';\n\nexport default ({ col, row }) => ({\n    sx: col * tileWidth - canvasWidth / 2 + tileWidth / 2,\n    sy: row * tileHeight - canvasHeight / 2 + tileHeight / 2\n});\n","export default degrees => (degrees * Math.PI) / 180;\n","export default (a, b) => {\n    const min = Math.min(a, b);\n    const max = Math.max(a, b);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n","import { collides } from './index.js';\n\nexport default (arr1, arr2) => {\n    const collisions = [];\n    for (let i1 = 0; i1 < arr1.length; i1++) {\n        const sprite1 = arr1[i1];\n        for (let i2 = 0; i2 < arr2.length; i2++) {\n            const sprite2 = arr2[i2];\n            if (collides(sprite1, sprite2)) {\n                collisions.push([sprite1, sprite2]);\n            }\n        }\n    }\n    return collisions;\n};\n","export default (sprite1, sprite2) => {\n    const dx = sprite1.x - sprite2.x;\n    const dy = sprite1.y - sprite2.y;\n    return Math.sqrt(dx * dx + dy * dy) < sprite1.collisionRadius + sprite2.collisionRadius;\n};\n","export default tile => (tile > 0 && tile < 25) || (tile > 30 && tile < 33) || (tile > 37 && tile < 41) || tile > 44;\n","import { directionSwitchMap, getNextTile } from './index.js';\nimport { isValidTile } from '../utils/index.js';\n\nexport default (map, { x, y }, direction) => {\n    const tile = map.tileAtLayer('main', { x, y });\n    if (!isValidTile(tile) || !directionSwitchMap[tile].allowed.includes(direction)) {\n        return false;\n    }\n    const nextTile = getNextTile(map, { x, y }, direction);\n    return isValidTile(nextTile);\n};\n","import { directionSwitchMap, directionIsAllowed } from './index.js';\nimport { isValidTile, getRandomInt } from '../utils/index.js';\n\nexport default (map, { x, y }, curr) => {\n    const tile = map.tileAtLayer('main', { x, y });\n    /* player accidentally stepped onto a broken conduit tile */\n    if (!isValidTile(tile)) {\n        throw new Error('dropped');\n    }\n    const nextDirection = directionSwitchMap[tile].change[curr] || curr;\n    if (directionIsAllowed(map, { x, y }, nextDirection)) {\n        return nextDirection;\n    }\n    const otherDirections = directionSwitchMap[tile].allowed.filter(dir => directionIsAllowed(map, { x, y }, dir));\n    switch (otherDirections.length) {\n        case 0:\n            /* oh no, player locked themselves in! */\n            throw new Error('locked in');\n        case 1:\n            return otherDirections[0];\n        default:\n            return otherDirections[getRandomInt(0, otherDirections.length - 1)];\n    }\n};\n","import { N, E, S, W } from './index.js';\n\nexport default {\n    // curve from S to E\n    1: {\n        allowed: [S, E],\n        change: {\n            [N]: E,\n            [W]: S\n        }\n    },\n    // curve from W to S\n    2: {\n        allowed: [W, S],\n        change: {\n            [N]: W,\n            [E]: S\n        }\n    },\n    // straight from N to S\n    3: {\n        allowed: [N, S],\n        change: {}\n    },\n    // T section W, N, E\n    4: {\n        allowed: [W, N, E],\n        change: {\n            [S]: N\n        }\n    },\n    // T section N, E, S\n    5: {\n        allowed: [N, E, S],\n        change: {\n            [W]: E\n        }\n    },\n    // T section W, E, S\n    6: {\n        allowed: [W, E, S],\n        change: {\n            [N]: S\n        }\n    },\n    // curve from N to E\n    9: {\n        allowed: [N, E],\n        change: {\n            [S]: E,\n            [W]: N\n        }\n    },\n    // curve from W to N\n    10: {\n        allowed: [W, N],\n        change: {\n            [E]: N,\n            [S]: W\n        }\n    },\n    // straight from W to E\n    11: {\n        allowed: [W, E],\n        change: {}\n    },\n    // crossing\n    12: {\n        allowed: [N, E, S, W],\n        change: {}\n    },\n    // T section N, S, W\n    13: {\n        allowed: [N, S, W],\n        change: {\n            [E]: W\n        }\n    },\n    // terminus S\n    17: {\n        allowed: [S],\n        change: {\n            [N]: S\n        }\n    },\n    // terminus W\n    18: {\n        allowed: [W],\n        change: {\n            [E]: W\n        }\n    },\n    // terminus N\n    19: {\n        allowed: [N],\n        change: {\n            [S]: N\n        }\n    },\n    // terminus E\n    20: {\n        allowed: [E],\n        change: {\n            [W]: E\n        }\n    }\n};\n","import { directionSwitchMap } from './index.js';\n\nconst intersectionTiles = [];\nfor (const [tile, { allowed }] of Object.entries(directionSwitchMap)) {\n    if (allowed.length > 2) {\n        intersectionTiles.push(Number(tile));\n    }\n}\n\nexport default tile => intersectionTiles.includes(tile);\n","import { N, E, S, W } from './index.js';\nimport { tileHeight, tileWidth } from '../config.js';\n\nexport default (map, { x, y }, direction) =>\n    map.tileAtLayer('main', {\n        x: direction === E ? x + tileWidth : direction === W ? x - tileWidth : x,\n        y: direction === N ? y - tileHeight : direction === S ? y + tileHeight : y\n    });\n","import { S } from './directions/index.js';\n\nexport const canvasWidth = 800;\nexport const canvasHeight = 600;\n\n/* map */\nexport const tileWidth = 100;\nexport const tileHeight = 100;\nexport const mapWidth = 20;\nexport const mapHeight = 20;\nexport const mapPadding = 4;\n\n/* player */\nexport const playerStartCol = 8;\nexport const playerStartRow = 9;\nexport const playerStartDirection = S;\nexport const playerSpeed = 5;\n\n/* virus */\nexport const virusStartCol = 8;\nexport const virusStartRow = 7;\nexport const virusStartDirection = S;\nexport const virusSpeed = 2.5;\nexport const virusBlipInterval = 1000;\nexport const virusBlipTtl = 180;\n\n/* colors */\nexport const lightGreen = '#75a042';\nexport const darkGreen = '#365b1d';\nexport const lightBlue = '#52638a';\nexport const darkBlue = '#2b3653';\nexport const lightRed = '#cd3926';\nexport const darkRed = '#7a2431';\n\nexport const collisionRadius = 30;\nexport const bombCooldown = 100;\nexport const teleportCooldownTimeout = 600;\n","/* global kontra */\n\nimport { collisionRadius, tileHeight, tileWidth } from '../config.js';\nimport { drawBomb, updateBomb } from './index.js';\nimport { FUSE_BURNING } from './index.js';\n\nexport default (map, { row, col }) => {\n    const { x, y } = map.getXAndY({ row, col });\n    return {\n        context: kontra.context,\n        x,\n        y,\n        collisionRadius,\n        fuseLength: 100,\n        status: FUSE_BURNING,\n        shrapnel: [],\n        explosionDuration: 0,\n        map,\n        mapX: col * tileWidth,\n        mapY: row * tileHeight,\n        row,\n        col,\n        update() {\n            ({\n                status: this.status,\n                fuseLength: this.fuseLength,\n                explosionDuration: this.explosionDuration,\n                x: this.x,\n                y: this.y\n            } = updateBomb(this));\n        },\n        render() {\n            drawBomb(this);\n        }\n    };\n};\n","export const FUSE_BURNING = 0;\nexport const EXPLODING = 1;\nexport const EXPLODED = 2;\n","import { EXPLODING, FUSE_BURNING } from './constants.js';\nimport { drawBombWithFuse } from './index.js';\n\nexport default sprite => {\n    const { status, shrapnel } = sprite;\n    switch (status) {\n        case FUSE_BURNING:\n            drawBombWithFuse(sprite);\n            break;\n        case EXPLODING:\n            shrapnel.forEach(s => s.render());\n            break;\n        default:\n    }\n};\n","import { lightRed, lightBlue, darkBlue } from '../config.js';\nimport { getRandomInt as ri } from '../utils/index.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, fuseLength } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(deg2rad(-45));\n\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.fillStyle = darkBlue;\n\n    /* bomb */\n    ctx.beginPath();\n    ctx.moveTo(23, -10);\n    ctx.lineTo(40, -10);\n    ctx.lineTo(40, 10);\n    ctx.lineTo(23, 10);\n    ctx.arc(0, 0, 25, deg2rad(19), deg2rad(341));\n    ctx.fill();\n    ctx.stroke();\n\n    /* fuse */\n    const fuseRad = 25; // radius of the fuse arc\n    const fuseDeg = (fuseLength / 100) * 90; // length of the fuse arc in degrees\n    ctx.beginPath();\n    ctx.moveTo(40, 0);\n    ctx.arc(40, 25, fuseRad, deg2rad(270), deg2rad(270 + fuseDeg));\n    ctx.stroke();\n\n    /* sparks */\n    const sparkCX = Math.cos(deg2rad(fuseDeg - 90)) * fuseRad + 40; // X-coord of sparks center\n    const sparkCY = Math.sin(deg2rad(fuseDeg - 90)) * fuseRad + 25; // Y-coord of sparks centers\n    const sparkRad = 15; // radius of the sparks circle\n    ctx.fillStyle = lightRed;\n    for (let i = 0; i < 10; i++) {\n        const sparkX = Math.cos(deg2rad(ri(0, 360))) * ri(0, sparkRad) + sparkCX;\n        const sparkY = Math.sin(deg2rad(ri(0, 360))) * ri(0, sparkRad) + sparkCY;\n        ctx.fillRect(sparkX - 1, sparkY - 1, 3, 3);\n    }\n\n    ctx.restore();\n};\n","class MessageBox {\n    constructor() {\n        this.timeoutHandler = null;\n        this.div = document.createElement('div');\n        this.div.style.cssText = `\nbackground-color: rgba(0,0,0,0.3);\nfont-size: 3em;\nfont-weight: bold;\nalign-items: center;\njustify-content: center;\ndisplay: flex;\ncolor: white;\nopacity: 0;\nposition: absolute;\ntop: 0;\nleft:0;\nwidth: 100vw;\nheight: 100vh;\ntext-align: center;\npointer-events: none;\ntransition: background-color 3s ease-out, color 3s ease-out;\ntext-transform: uppercase;\nfont-family: monospace;\n    `;\n        const wrapper = document.getElementById('wrapper');\n        wrapper.appendChild(this.div);\n    }\n\n    show(message) {\n        clearTimeout(this.timeoutHandler);\n        this.div.style.transition = '3s';\n        this.div.innerHTML = `<div>${message}</div>`;\n        this.div.style.opacity = 1;\n    }\n\n    flash(message) {\n        clearTimeout(this.timeoutHandler);\n        this.div.style.transition = '0.5s';\n        this.div.innerHTML = `<div>${message}</div>`;\n        this.div.style.opacity = 1;\n        this.timeoutHandler = setTimeout(() => (this.div.style.opacity = 0), 500);\n    }\n\n    clear() {\n        clearTimeout(this.timeoutHandler);\n        this.div.style.transition = '0.5s';\n        this.div.style.opacity = 0;\n    }\n}\nexport default new MessageBox();\n","import { createServer } from './index.js';\nimport { multiCollides } from '../utils/index.js';\nimport { messageBox } from '../messageBox/index.js';\n\nclass Servers {\n    constructor() {\n        this.servers = [];\n        this.nextServerPointer = 0;\n    }\n    init(map, serverCoordinates = []) {\n        this.map = map;\n        serverCoordinates.forEach(({ col, row }) => this.servers.push(createServer({ map, row, col })));\n        return this;\n    }\n    update() {\n        this.servers.forEach(server => server.update());\n    }\n    render() {\n        this.servers.forEach(server => server.render());\n    }\n    destroy({ col, row }) {\n        const server = this.find({ col, row });\n        if (server) {\n            server.broken = true;\n        }\n    }\n    infect(virus) {\n        const availableServers = this.getAvailableServers();\n        const serverVirusCollisions = multiCollides(availableServers, [virus]);\n\n        console.log(serverVirusCollisions);\n\n        if (serverVirusCollisions.length === 0) {\n            return;\n        }\n\n        serverVirusCollisions.forEach(([server]) => {\n            server.infected = true;\n        });\n\n        if (this.getAvailableServers().length === 0) {\n            messageBox.flash('all servers destroyed or infected – be careful');\n            return;\n        }\n\n        messageBox.flash('server infected!');\n    }\n    find({ col, row }) {\n        return this.servers.find(server => server.col === col && server.row === row);\n    }\n    getAvailableServers() {\n        return this.servers.filter(server => !server.broken || !server.infected);\n    }\n    getRandom() {\n        const availableServers = this.getAvailableServers();\n        return availableServers[Math.floor(Math.random() * availableServers.length)];\n    }\n    getNext() {\n        const availableServers = this.getAvailableServers();\n        const isNextPointerInRange = this.nextServerPointer + 1 < availableServers.length;\n        this.nextServerPointer = isNextPointerInRange ? this.nextServerPointer + 1 : 0;\n        return availableServers[this.nextServerPointer];\n    }\n}\n\nexport default new Servers();\n","/* global kontra */\n\nimport { drawServer } from './index.js';\nimport { tileWidth, tileHeight, collisionRadius } from '../config.js';\n\nexport default ({ map, row, col }) => {\n    const { x, y } = map.getXAndY({ row, col });\n    return {\n        context: kontra.context,\n        x,\n        y,\n        row,\n        col,\n        map,\n        mapX: col * tileWidth,\n        mapY: row * tileHeight,\n        broken: false,\n        infected: false,\n        collisionRadius,\n        update() {\n            ({ x: this.x, y: this.y } = map.getXAndY({ mapX: this.mapX, mapY: this.mapY }));\n        },\n        render() {\n            drawServer(this);\n        }\n    };\n};\n","/* creates canvas moveTo and lineTo commands from arrays; doing this mostly to save a couple of bytes */\nexport default (ctx, data) => data.forEach(([draw, x, y]) => ctx[draw ? 'lineTo' : 'moveTo'](x, y));\n","/* eslint-disable no-param-reassign */\nimport { darkBlue, lightBlue, darkRed, lightRed } from '../config.js';\nimport { krakel } from '../map/tilesheet/utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, broken, infected } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = infected ? lightRed : lightBlue;\n    ctx.fillStyle = infected ? darkRed : darkBlue;\n    ctx.beginPath();\n    krakel(ctx, [\n        [0, 30, -48],\n        [1, 48, -30],\n        [1, 48, 30],\n        [1, 30, 48],\n        [1, -30, 48],\n        [1, -48, 30],\n        [1, -48, -30],\n        [1, -30, -48],\n        [1, 30, -48]\n    ]);\n    ctx.fill();\n    ctx.stroke();\n    if (broken) {\n        ctx.lineWidth = 2;\n        krakel(ctx, [\n            [0, 10, -48],\n            [1, 0, -40],\n            [0, 24, -48],\n            [1, 20, -30],\n            [0, 48, -27],\n            [1, 20, -20],\n            [0, -10, -30],\n            [1, 10, -30],\n            [1, 30, -10],\n            [1, 20, 0],\n            [1, 10, 0],\n            [0, 48, 7],\n            [1, 30, 10],\n            [0, 20, 0],\n            [1, 30, 10],\n            [1, 10, 20],\n            [0, 30, 48],\n            [1, 30, 30],\n            [1, 10, 30],\n            [0, 20, 20],\n            [1, 20, 30],\n            [0, -10, 48],\n            [1, -10, 20],\n            [1, 0, 10],\n            [0, -20, 0],\n            [1, -20, 20],\n            [1, -10, 30],\n            [0, -30, 48],\n            [1, -20, 40],\n            [1, -20, 30],\n            [0, -30, 30],\n            [1, -20, 40],\n            [0, -48, 20],\n            [1, -30, 20],\n            [0, -40, 20],\n            [1, -40, 10],\n            [0, -48, 0],\n            [1, -30, 0],\n            [1, -20, -10],\n            [0, -40, 0],\n            [1, -30, 10],\n            [0, -48, -17],\n            [1, -40, -30],\n            [1, -30, -20],\n            [0, -30, -48],\n            [1, -10, -20],\n            [1, -10, -10],\n            [0, -20, -30],\n            [1, -20, -20],\n            [1, -30, -10]\n        ]);\n        ctx.stroke();\n    }\n    ctx.restore();\n};\n","/* global kontra */\n\nimport { FUSE_BURNING, EXPLODING, EXPLODED } from './index.js';\nimport { createShrapnel } from './index.js';\nimport { pubsub, MAP_CHANGED, USERS_POSSIBLY_OFFLINE, BOMB_EXPLODES } from '../pubsub/index.js';\nimport { servers } from '../server/index.js';\n\nexport default sprite => {\n    let { status, fuseLength, explosionDuration, x, y } = sprite;\n    const { shrapnel, map, mapX, mapY, row, col } = sprite;\n\n    ({ x, y } = map.getXAndY({ mapX, mapY }));\n    switch (status) {\n        case FUSE_BURNING:\n            fuseLength -= 1;\n            if (fuseLength < 0) {\n                status = EXPLODING;\n                pubsub.publish(BOMB_EXPLODES);\n                for (let i = 0; i < 50; i++) {\n                    shrapnel.push(createShrapnel({ x, y }));\n                }\n                if (servers.find({ row, col })) {\n                    servers.destroy({ row, col });\n                } else {\n                    const tile = map.tileAtLayer('main', { row, col });\n                    map.changeTile('main', { row, col }, tile + 24);\n                    pubsub.publish(MAP_CHANGED, map);\n                    pubsub.publish(USERS_POSSIBLY_OFFLINE);\n                }\n            }\n            break;\n        case EXPLODING:\n            shrapnel.forEach(s => s.update());\n            explosionDuration++;\n            if (explosionDuration === 200) {\n                status = EXPLODED;\n            }\n            break;\n        default:\n    }\n    return {\n        status,\n        fuseLength,\n        explosionDuration,\n        x,\n        y\n    };\n};\n","/* global kontra */\nimport { getRandomInt as ri } from '../utils/index.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\nimport { drawShrapnel } from './index.js';\n\nexport default ({ x, y }) => {\n    const dir = ri(0, 360);\n    const speed = ri(5, 15);\n    return {\n        context: kontra.context,\n        x,\n        y,\n        dx: Math.cos(deg2rad(dir)) * speed,\n        dy: Math.sin(deg2rad(dir)) * speed,\n        rotation: ri(0, 360),\n        rotationDir: [ri(-10, -1), ri(1, 10)][ri(0, 1)],\n        update() {\n            this.x += this.dx;\n            this.y += this.dy;\n            this.rotation += this.rotationDir;\n        },\n        render() {\n            drawShrapnel(this);\n        }\n    };\n};\n","import { lightBlue, darkBlue } from '../config.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, rotation } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(deg2rad(rotation));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.fillStyle = darkBlue;\n    ctx.beginPath();\n    ctx.moveTo(0, -10);\n    ctx.lineTo(10, 5);\n    ctx.lineTo(-10, 5);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n};\n","import { pubsub, DROP_BOMB, BOMB_EXPLODES } from '../pubsub/index.js';\nimport { EXPLODED } from './constants.js';\nimport { createBomb } from './index.js';\n\nexport default class {\n    constructor(map) {\n        this.map = map;\n        this.bombs = [];\n        pubsub.subscribe(DROP_BOMB, mapCoords => this.dropBomb(mapCoords));\n    }\n    dropBomb(mapCoords) {\n        if (\n            this.bombs.length > 0 &&\n            this.bombs.find(({ col, row }) => col === mapCoords.col && row === mapCoords.row)\n        ) {\n            // don't drop a bomb where there already is one waiting to explode\n            return;\n        }\n        this.bombs.push(createBomb(this.map, mapCoords));\n    }\n    update() {\n        this.bombs = this.bombs.filter(bomb => {\n            bomb.update();\n            return bomb.status !== EXPLODED;\n        });\n    }\n    render() {\n        this.bombs.forEach(bomb => bomb.render());\n    }\n}\n","import { playerSpeed } from '../../config.js';\nimport { N, E, S, W } from '../../directions/index.js';\n\nexport default (map, direction) => {\n    switch (direction) {\n        case N:\n            // eslint-disable-next-line no-param-reassign\n            map.sy -= playerSpeed;\n            break;\n        case E:\n            // eslint-disable-next-line no-param-reassign\n            map.sx += playerSpeed;\n            break;\n        case S:\n            // eslint-disable-next-line no-param-reassign\n            map.sy += playerSpeed;\n            break;\n        case W:\n            // eslint-disable-next-line no-param-reassign\n            map.sx -= playerSpeed;\n            break;\n        default:\n    }\n};\n","/* global kontra */\n\nimport { moveCamera } from './utils/index.js';\nimport { pubsub, DROP_SHIP } from '../pubsub/index.js';\nimport { servers } from '../server/index.js';\n\nexport default ({ map, player, virus, users, bombs }) => {\n    const times = [];\n    let fps;\n    let shipMoving = true;\n    pubsub.subscribe(DROP_SHIP, () => (shipMoving = false));\n\n    return kontra.gameLoop({\n        update() {\n            virus.update();\n            player.update();\n            player.infect(virus);\n            player.teleport();\n            if (shipMoving) {\n                moveCamera(map, player.direction);\n            }\n            users.update();\n            users.infect(virus);\n            bombs.update();\n            servers.update();\n            servers.infect(virus);\n        },\n        render() {\n            map.render();\n            users.render();\n            servers.render();\n            bombs.render();\n            player.render();\n            virus.render();\n            if (process.env.NODE_ENV === 'development') {\n                const now = performance.now();\n                while (times.length > 0 && times[0] <= now - 1000) {\n                    times.shift();\n                }\n                times.push(now);\n                fps = times.length;\n                const { row, col } = map.getRowAndCol({ x: 400, y: 300 });\n\n                // eslint-disable-next-line no-param-reassign\n                window.devbox.innerHTML = `${fps} fps – sx=${map.sx}, sy=${map.sy}, row=${row}, col=${col}`;\n            }\n        }\n    });\n};\n","// prettier-ignore\nexport default [\n    0, 17,  0,  0,  0, 17,  0,  0,  0, 17,  0,  0,  0, 17,  0,  0,  0, 17,  0,  0,\n   20,  4, 11,  2,  1,  4,  2,  0,  0,  5, 11,  6, 11, 13,  0,  1, 11, 12,  2,  0,\n    0,  1, 11, 10,  9, 11, 13,  0,  0,  3,  0,  3,  0,  5, 11, 13,  0,  3,  3,  0,\n    0,  3,  1, 11,  6, 11, 10,  0,  1,  4,  2,  9, 11, 13,  0,  9, 11, 10,  3,  0,\n    0,  3,  3,  0,  3,  0,  0,  0,  3,  1, 13,  0,  0,  3,  0,  0,  0,  0,  5, 18,\n    0,  3,  3,  0,  3,  0,  1, 11, 10,  3,  9, 11,  6,  4, 11,  6,  2,  0,  3,  0,\n    0,  3,  3,  0,  3,  0,  3,  0,  0,  3,  0,  0,  3,  0,  0,  3,  3,  0,  3,  0,\n    0,  9, 13,  0,  5, 11, 10,  0,  0,  3,  1, 11, 10,  0,  0,  3,  3,  0,  3,  0,\n    0,  0,  3,  0,  3,  0,  0,  0,  1,  4, 10,  0,  0,  0,  0,  3,  5, 11,  4, 18,\n    0,  1, 13,  0,  5, 11,  2,  0,  3,  0,  1, 11, 11, 11, 11, 12, 10,  0,  0,  0,\n    0,  3,  3,  0,  3,  0,  5, 11, 13,  0,  9, 11,  2,  0,  0,  3,  0,  0,  1, 18,\n    0,  9, 10,  0,  5, 11, 10,  0,  9, 11, 11, 11, 12, 11,  6, 10,  0,  0,  3,  0,\n    0,  0,  0,  0,  3,  1, 11,  2,  1, 11, 11, 11, 10,  0,  3,  0,  1, 11,  4, 18,\n   20,  6,  6, 11, 10,  3,  0,  3,  3,  0,  0,  0,  1,  2,  9, 11, 12, 11,  2,  0,\n    0,  3,  3,  0,  0,  3,  0,  3,  3,  1, 11,  2,  3,  3,  0,  0,  3,  0,  3,  0,\n    0,  5,  4,  2,  0,  5, 11, 10,  3,  3,  0,  5, 12,  4, 11, 11, 13,  0,  5, 18,\n    0,  3,  0,  5, 11, 12, 11,  6, 10,  9,  6, 10,  3,  0,  0,  0,  9, 11, 10,  0,\n   20,  4, 11, 13,  0,  3,  0,  9, 11, 11, 13,  0,  9, 11,  6, 11,  6,  6, 11, 18,\n    0,  0,  0,  3,  0,  3,  0,  0,  0,  0,  5, 11, 11,  2,  3,  0,  3,  3,  0,  0,\n    0,  0,  0, 19,  0, 19,  0,  0,  0,  0, 19,  0,  0, 19,  9, 11, 10, 19,  0,  0\n];\n","/* eslint-disable no-param-reassign */\nimport { degreesToRadians as deg2rad } from '../../utils/index.js';\nimport { tileHeight, tileWidth, lightBlue } from '../../config.js';\n\nfunction calculatePointOnArc(deg, r) {\n    return [Math.cos(deg2rad(deg)) * r + 50, Math.sin(deg2rad(deg)) * r + 50];\n}\n\nexport default ({ ctx, row, col, deg, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.rotate(deg2rad(deg));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        ctx.moveTo(20, 50);\n        ctx.arc(50, 50, 30, deg2rad(180), deg2rad(190));\n        ctx.moveTo(...calculatePointOnArc(190, 30));\n        ctx.lineTo(10, 45);\n        ctx.lineTo(10, 35);\n        ctx.lineTo(-10, 40);\n        ctx.lineTo(...calculatePointOnArc(190, 70));\n        ctx.arc(50, 50, 70, deg2rad(190), deg2rad(180), true);\n        ctx.moveTo(50, 20);\n        ctx.arc(50, 50, 30, deg2rad(270), deg2rad(260), true);\n        ctx.moveTo(...calculatePointOnArc(260, 30));\n        ctx.lineTo(40, 10);\n        ctx.lineTo(45, 0);\n        ctx.lineTo(35, 0);\n        ctx.lineTo(...calculatePointOnArc(260, 70));\n        ctx.arc(50, 50, 70, deg2rad(260), deg2rad(270));\n    } else {\n        ctx.moveTo(20, 50);\n        ctx.arc(50, 50, 30, deg2rad(180), deg2rad(270));\n        ctx.moveTo(-20, 50);\n        ctx.arc(50, 50, 70, deg2rad(180), deg2rad(270));\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* eslint-disable no-param-reassign */\nimport { tileWidth, tileHeight, lightBlue } from '../../config.js';\nimport { degreesToRadians as deg2rad } from '../../utils/index.js';\nimport { krakel } from './utils/index.js';\n\nexport default ({ ctx, row, col, deg, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.rotate(deg2rad(deg));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        krakel(ctx, [\n            [0, -20, 50],\n            [1, -20, 30],\n            [1, -10, 40],\n            [1, 0, 25],\n            [1, 10, 35],\n            [1, 20, 30],\n            [1, 20, 50],\n            [0, -20, -50],\n            [1, -20, -40],\n            [1, -10, -25],\n            [1, 0, -35],\n            [1, 10, -30],\n            [1, 20, -40],\n            [1, 20, -50]\n        ]);\n    } else {\n        krakel(ctx, [[0, -20, -50], [1, -20, 50], [0, 20, -50], [1, 20, 50]]);\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* eslint-disable no-param-reassign */\nimport { tileWidth, tileHeight, lightBlue } from '../../config.js';\nimport { degreesToRadians as deg2rad } from '../../utils/index.js';\nimport { krakel } from './utils/index.js';\n\nexport default ({ ctx, row, col, deg, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.rotate(deg2rad(deg));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        krakel(ctx, [\n            [0, 50, 20],\n            [1, 40, 20],\n            [1, 45, 10],\n            [1, 40, -10],\n            [1, 45, -20],\n            [1, 50, -20],\n            [0, 20, -50],\n            [1, 20, -35],\n            [1, 10, -40],\n            [1, 0, -30],\n            [1, -10, -40],\n            [1, -20, -35],\n            [1, -20, -50],\n            [0, -50, -20],\n            [1, -40, -20],\n            [1, -35, -10],\n            [1, -45, 0],\n            [1, -30, 10],\n            [1, -35, 20],\n            [1, -50, 20]\n        ]);\n    } else {\n        krakel(ctx, [\n            [0, -20, -50],\n            [1, -20, -20],\n            [1, -50, -20],\n            [0, 20, -50],\n            [1, 20, -20],\n            [1, 50, -20],\n            [0, -50, 20],\n            [1, 50, 20]\n        ]);\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* eslint-disable no-param-reassign */\nimport { tileWidth, tileHeight, lightBlue } from '../../config.js';\nimport { krakel } from './utils/index.js';\n\nexport default ({ ctx, row, col, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        krakel(ctx, [\n            [0, -20, 50],\n            [1, -20, 45],\n            [1, -10, 40],\n            [1, 0, 45],\n            [1, 10, 35],\n            [1, 20, 40],\n            [1, 20, 50],\n            [0, 50, 20],\n            [1, 40, 20],\n            [1, 45, 10],\n            [1, 40, -10],\n            [1, 45, -20],\n            [1, 50, -20],\n            [0, 20, -50],\n            [1, 20, -35],\n            [1, 10, -40],\n            [1, 0, -30],\n            [1, -10, -40],\n            [1, -20, -35],\n            [1, -20, -50],\n            [0, -50, -20],\n            [1, -40, -20],\n            [1, -35, -10],\n            [1, -45, 0],\n            [1, -30, 10],\n            [1, -35, 20],\n            [1, -50, 20]\n        ]);\n    } else {\n        krakel(ctx, [\n            [0, -20, -50],\n            [1, -20, -20],\n            [1, -50, -20],\n            [0, 20, -50],\n            [1, 20, -20],\n            [1, 50, -20],\n            [0, -50, 20],\n            [1, -20, 20],\n            [1, -20, 50],\n            [0, 50, 20],\n            [1, 20, 20],\n            [1, 20, 50]\n        ]);\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* eslint-disable no-param-reassign */\nimport { tileWidth, tileHeight, lightBlue } from '../../config.js';\nimport { degreesToRadians as deg2rad } from '../../utils/index.js';\nimport { krakel } from './utils/index.js';\n\nexport default ({ ctx, row, col, deg, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.rotate(deg2rad(deg));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        krakel(ctx, [[0, -20, 50], [1, -20, 40], [1, -10, 45], [1, 0, 35], [1, 10, 45], [1, 20, 40], [1, 20, 50]]);\n    } else {\n        krakel(ctx, [[0, -20, 50], [1, -20, 0], [1, 20, 0], [1, 20, 50]]);\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* global kontra */\n\n/**\n * A tile engine for rendering tilesets. Works well with the tile engine program Tiled.\n * @memberof kontra\n *\n * @param {object} properties - Properties of the tile engine.\n * @param {number} [properties.tileWidth=32] - Width of a tile.\n * @param {number} [properties.tileHeight=32] - Height of a tile.\n * @param {number} properties.width - Width of the map (in tiles).\n * @param {number} properties.height - Height of the map (in tiles).\n * @param {number} [properties.x=0] - X position to draw.\n * @param {number} [properties.y=0] - Y position to draw.\n * @param {number} [properties.sx=0] - X position to clip the tileset.\n * @param {number} [properties.sy=0] - Y position to clip the tileset.\n * @param {Context} [properties.context=kontra.context] - Provide a context for the tile engine to draw on.\n */\nexport default (properties = {}) => {\n    if (process.env.NODE_ENV === 'development' && (!properties.width || !properties.height)) {\n        throw Error('You must provide width and height properties');\n    }\n\n    const width = properties.width;\n    const height = properties.height;\n\n    // size of the tiles. Most common tile size on opengameart.org seems to be 32x32,\n    // followed by 16x16\n    // Tiled names the property tilewidth and tileheight\n    const tileWidth = properties.tileWidth || 32;\n    const tileHeight = properties.tileHeight || 32;\n\n    const mapWidth = width * tileWidth;\n    const mapHeight = height * tileHeight;\n\n    const context = properties.context || kontra.context;\n    const canvasWidth = context.canvas.width;\n    const canvasHeight = context.canvas.height;\n\n    // create an off-screen canvas for pre-rendering the map\n    // @see http://jsperf.com/render-vs-prerender\n    const offscreenCanvas = document.createElement('canvas');\n    const offscreenContext = offscreenCanvas.getContext('2d');\n\n    // when clipping an image, sx and sy must within the image region, otherwise\n    // Firefox and Safari won't draw it.\n    // @see http://stackoverflow.com/questions/19338032/canvas-indexsizeerror-index-or-size-is-negative-or-greater-than-the-allowed-a\n    const sxMax = Math.max(0, mapWidth - canvasWidth);\n    const syMax = Math.max(0, mapHeight - canvasHeight);\n\n    let _sx, _sy;\n\n    // draw order of layers (by name)\n    const layerOrder = [];\n\n    const tileEngine = {\n        width,\n        height,\n\n        tileWidth,\n        tileHeight,\n\n        mapWidth,\n        mapHeight,\n\n        context,\n\n        x: properties.x || 0,\n        y: properties.y || 0,\n\n        tilesets: [],\n        layers: {},\n\n        /**\n         * Add an tileset for the tile engine to use.\n         * @memberof kontra.tileEngine\n         */\n        addTilesets: function addTilesets(tilesets) {\n            [].concat(tilesets).forEach(tileset => {\n                const tilesetImage = tileset.image;\n                let image, firstGrid, lastTileset, tiles;\n\n                // @see https://github.com/jed/140bytes/wiki/Byte-saving-techniques#coercion-to-test-for-types\n                if (`${tilesetImage}` === tilesetImage) {\n                    let i = Infinity;\n\n                    while (i >= 0) {\n                        i = tilesetImage.lastIndexOf('/', i);\n                        const path = i < 0 ? tilesetImage : tilesetImage.substr(i);\n\n                        if (kontra.assets.images[path]) {\n                            image = kontra.assets.images[path];\n                            break;\n                        }\n\n                        i--;\n                    }\n                } else {\n                    image = tilesetImage;\n                }\n\n                firstGrid = tileset.firstGrid;\n\n                // if the width or height of the provided image is smaller than the tile size,\n                // default calculation to 1\n                const numTiles = ((image.width / tileWidth) | 0 || 1) * ((image.height / tileHeight) | 0 || 1);\n\n                if (!firstGrid) {\n                    // only calculate the first grid if the tile map has a tileset already\n                    if (tileEngine.tilesets.length > 0) {\n                        lastTileset = tileEngine.tilesets[tileEngine.tilesets.length - 1];\n                        tiles =\n                            ((lastTileset.image.width / tileWidth) | 0) * ((lastTileset.image.height / tileHeight) | 0);\n\n                        firstGrid = lastTileset.firstGrid + tiles;\n                    }\n                    // otherwise this is the first tile added to the tile map\n                    else {\n                        firstGrid = 1;\n                    }\n                }\n\n                tileEngine.tilesets.push({\n                    firstGrid,\n                    lastGrid: firstGrid + numTiles - 1,\n                    image\n                });\n\n                // sort the tile map so we can perform a binary search when drawing\n                tileEngine.tilesets.sort((a, b) => a.firstGrid - b.firstGrid);\n            });\n        },\n\n        /**\n         * Add a layer to the tile engine.\n         * @memberof kontra.tileEngine\n         */\n        addLayers: function addLayers(layers) {\n            [].concat(layers).forEach(layer => {\n                // eslint-disable-next-line no-param-reassign\n                layer.render = layer.render === undefined ? true : layer.render;\n\n                let data, row, c, value;\n\n                // flatten a 2D array into a single array\n                if (Array.isArray(layer.data[0])) {\n                    data = [];\n\n                    // eslint-disable-next-line no-cond-assign\n                    for (let r = 0; (row = layer.data[r]); r++) {\n                        for (c = 0; c < width; c++) {\n                            data.push(row[c] || 0);\n                        }\n                    }\n                } else {\n                    data = layer.data;\n                }\n\n                tileEngine.layers[layer.name] = {\n                    data,\n                    zIndex: layer.zIndex || 0,\n                    render: layer.render\n                };\n\n                // merge properties of layer onto layer object\n                for (const prop in layer.properties) {\n                    if (layer.properties.hasOwnProperty(prop)) {\n                        value = layer.properties[prop];\n\n                        try {\n                            value = JSON.parse(value);\n                        } catch (e) {\n                            /* intentionally empty */\n                        }\n\n                        tileEngine.layers[layer.name][prop] = value;\n                    }\n                }\n\n                // only add the layer to the layer order if it should be drawn\n                if (tileEngine.layers[layer.name].render) {\n                    layerOrder.push(layer.name);\n\n                    layerOrder.sort((a, b) => tileEngine.layers[a].zIndex - tileEngine.layers[b].zIndex);\n                }\n            });\n\n            preRenderImage();\n        },\n\n        changeTile(layerId, position, tile) {\n            const dataIndex = getIndex(position);\n            const layer = tileEngine.layers[layerId];\n            layer.data[dataIndex] = tile;\n            renderTile(layer, dataIndex, true);\n        },\n\n        /**\n         * Get the tile from the specified layer at x, y or row, col.\n         * @memberof kontra.tileEngine\n         *\n         * @param {string} name - Name of the layer.\n         * @param {object} position - Position of the tile in either x, y or row, col.\n         * @param {number} position.x - X coordinate of the tile.\n         * @param {number} position.y - Y coordinate of the tile.\n         * @param {number} position.row - Row of the tile.\n         * @param {number} position.col - Col of the tile.\n         *\n         * @returns {number}\n         */\n        tileAtLayer(name, position) {\n            const index = getIndex(position);\n\n            if (index >= 0) {\n                return tileEngine.layers[name].data[index];\n            }\n            return undefined;\n        },\n\n        /**\n         * Render the pre-rendered canvas.\n         * @memberof kontra.tileEngine\n         */\n        render() {\n            tileEngine.context.drawImage(\n                offscreenCanvas,\n                tileEngine.sx,\n                tileEngine.sy,\n                canvasWidth,\n                canvasHeight,\n                tileEngine.x,\n                tileEngine.y,\n                canvasWidth,\n                canvasHeight\n            );\n        },\n\n        /**\n         * Render a specific layer.\n         * @memberof kontra.tileEngine\n         *\n         * @param {string} name - Name of the layer to render.\n         */\n        renderLayer: function renderLayer(name) {\n            const layer = tileEngine.layers[name];\n\n            // calculate the starting tile\n            let row = tileEngine.getRow();\n            const col = tileEngine.getCol();\n            let index = getIndex({ row, col });\n\n            // calculate where to start drawing the tile relative to the drawing canvas\n            const startX = col * tileWidth - tileEngine.sx;\n            const startY = row * tileHeight - tileEngine.sy;\n\n            // calculate how many tiles the drawing canvas can hold\n            const viewWidth = Math.min(Math.ceil(canvasWidth / tileWidth) + 1, width);\n            const viewHeight = Math.min(Math.ceil(canvasHeight / tileHeight) + 1, height);\n            const numTiles = viewWidth * viewHeight;\n\n            let count = 0;\n            let x, y, tile, tileset, image, tileOffset, w, sx, sy;\n\n            // draw just enough of the layer to fit inside the drawing canvas\n            while (count < numTiles) {\n                tile = layer.data[index];\n\n                if (tile) {\n                    tileset = getTileset(tile);\n                    image = tileset.image;\n\n                    x = startX + (count % viewWidth) * tileWidth;\n                    y = startY + ((count / viewWidth) | 0) * tileHeight;\n\n                    tileOffset = tile - tileset.firstGrid;\n                    w = image.width / tileWidth;\n\n                    sx = (tileOffset % w) * tileWidth;\n                    sy = ((tileOffset / w) | 0) * tileHeight;\n\n                    tileEngine.context.drawImage(image, sx, sy, tileWidth, tileHeight, x, y, tileWidth, tileHeight);\n                }\n\n                if (++count % viewWidth === 0) {\n                    index = col + ++row * width;\n                } else {\n                    index++;\n                }\n            }\n        },\n\n        getRowAndCol({ x, y }) {\n            return {\n                row: this.getRow(y),\n                col: this.getCol(x)\n            };\n        },\n\n        getXAndY({ row, col, mapX, mapY }) {\n            return {\n                x: (col ? col * tileWidth : mapX) - tileEngine.sx + tileWidth / 2,\n                y: (row ? row * tileHeight : mapY) - tileEngine.sy + tileHeight / 2\n            };\n        },\n\n        /**\n         * Get the row from the y coordinate.\n         * @memberof kontra.tileEngine\n         *\n         * @param {number} y - Y coordinate.\n         *\n         * @return {number}\n         */\n        getRow(y = 0) {\n            return ((tileEngine.sy + y) / tileHeight) | 0;\n        },\n\n        /**\n         * Get the col from the x coordinate.\n         * @memberof kontra.tileEngine\n         *\n         * @param {number} x - X coordinate.\n         *\n         * @return {number}\n         */\n        getCol(x = 0) {\n            return ((tileEngine.sx + x) / tileWidth) | 0;\n        },\n\n        get sx() {\n            return _sx;\n        },\n\n        get sy() {\n            return _sy;\n        },\n\n        // ensure sx and sy are within the image region\n        set sx(value) {\n            _sx = Math.min(Math.max(0, value), sxMax);\n        },\n\n        set sy(value) {\n            _sy = Math.min(Math.max(0, value), syMax);\n        }\n    };\n\n    // set here so we use setter function\n    tileEngine.sx = properties.sx || 0;\n    tileEngine.sy = properties.sy || 0;\n\n    // make the off-screen canvas the full size of the map\n    offscreenCanvas.width = mapWidth;\n    offscreenCanvas.height = mapHeight;\n\n    // merge properties of the tile engine onto the tile engine itself\n    for (const prop in properties.properties) {\n        if (properties.properties.hasOwnProperty(prop)) {\n            let value = properties.properties[prop];\n\n            try {\n                value = JSON.parse(value);\n            } catch (e) {\n                /* intentionally empty */\n            }\n\n            // passed in properties override properties.properties\n            tileEngine[prop] = tileEngine[prop] || value;\n        }\n    }\n\n    if (properties.tilesets) {\n        tileEngine.addTilesets(properties.tilesets);\n    }\n\n    if (properties.layers) {\n        tileEngine.addLayers(properties.layers);\n    }\n\n    /**\n     * Get the index of the x, y or row, col.\n     * @memberof kontra.tileEngine\n     * @private\n     *\n     * @param {number} position.x - X coordinate of the tile.\n     * @param {number} position.y - Y coordinate of the tile.\n     * @param {number} position.row - Row of the tile.\n     * @param {number} position.col - Col of the tile.\n     *\n     * @return {number} Returns the tile index or -1 if the x, y or row,\n     *         col is outside the dimensions of the tile engine.\n     */\n    function getIndex(position) {\n        let row, col;\n\n        if (typeof position.x !== 'undefined' && typeof position.y !== 'undefined') {\n            row = tileEngine.getRow(position.y);\n            col = tileEngine.getCol(position.x);\n        } else {\n            row = position.row;\n            col = position.col;\n        }\n\n        // don't calculate out of bound numbers\n        if (row < 0 || col < 0 || row >= height || col >= width) {\n            return -1;\n        }\n\n        return col + row * width;\n    }\n\n    /**\n     * Modified binary search that will return the tileset associated with the tile\n     * @memberof kontra.tileEngine\n     * @private\n     *\n     * @param {number} tile - Tile grid.\n     *\n     * @return {object}\n     */\n    function getTileset(tile) {\n        let min = 0;\n        let max = tileEngine.tilesets.length - 1;\n        let index, currTile;\n\n        while (min <= max) {\n            index = ((min + max) / 2) | 0;\n            currTile = tileEngine.tilesets[index];\n\n            if (tile >= currTile.firstGrid && tile <= currTile.lastGrid) {\n                return currTile;\n            } else if (currTile.lastGrid < tile) {\n                min = index + 1;\n            } else {\n                max = index - 1;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Pre-render the tiles to make drawing fast.\n     * @memberof kontra.tileEngine\n     * @private\n     */\n    function preRenderImage() {\n        // draw each layer in order\n        // eslint-disable-next-line no-cond-assign\n        for (let layerIndex = 0, layer; (layer = tileEngine.layers[layerOrder[layerIndex]]); layerIndex++) {\n            for (let dataIndex = 0, len = layer.data.length; dataIndex < len; dataIndex++) {\n                renderTile(layer, dataIndex);\n            }\n        }\n    }\n\n    function renderTile(layer, dataIndex, clear = false) {\n        const tile = layer.data[dataIndex];\n\n        // skip empty tiles (0)\n        if (!tile) {\n            return;\n        }\n\n        const tileset = getTileset(tile);\n        const image = tileset.image;\n\n        const x = (dataIndex % width) * tileWidth;\n        const y = ((dataIndex / width) | 0) * tileHeight;\n\n        const tileOffset = tile - tileset.firstGrid;\n        const w = image.width / tileWidth;\n\n        const sx = (tileOffset % w) * tileWidth;\n        const sy = ((tileOffset / w) | 0) * tileHeight;\n\n        if (clear) {\n            offscreenContext.clearRect(x, y, tileWidth, tileHeight);\n        }\n        offscreenContext.drawImage(image, sx, sy, tileWidth, tileHeight, x, y, tileWidth, tileHeight);\n    }\n\n    return tileEngine;\n};\n","/* global kontra */\n\nimport {\n    tileHeight,\n    tileWidth,\n    mapHeight as height,\n    mapWidth as width,\n    mapPadding,\n    playerStartCol,\n    playerStartRow\n} from '../config.js';\nimport { calculateCameraCoordinates } from '../utils/index.js';\nimport mapData from './mapData.js';\nimport { addPadding } from './utils/index.js';\nimport { createTilesheet } from './tilesheet/index.js';\nimport { createTileEngine } from '../tileEngine/index.js';\n\nexport default async () => {\n    const { sx, sy } = calculateCameraCoordinates({ col: playerStartCol, row: playerStartRow });\n    const map = createTileEngine({\n        // tile size\n        tileWidth,\n        tileHeight,\n\n        // map size in tiles\n        width: width + mapPadding * 2,\n        height: height + mapPadding * 2,\n\n        sx,\n        sy\n    });\n\n    const paddedMap = addPadding(mapData, width, height, mapPadding);\n    const image = await createTilesheet();\n    map.addTilesets({ image });\n    // map.addTilesets({ image: kontra.assets.images.tilesheet });\n    map.addLayers([\n        {\n            name: 'main',\n            data: paddedMap\n        }\n        // {\n        //     name: 'debug',\n        //     data: new Array(paddedMap.length).fill(0)\n        // }\n        // {\n        //     name: 'grid',\n        //     data: new Array(paddedMap.length).fill(8)\n        // }\n    ]);\n    return map;\n};\n","export default (arr, w, h, pad) => {\n    const retVal = [];\n    let idx = 0;\n    for (let row = 0; row < h + pad * 2; row++) {\n        for (let col = 0; col < w + pad * 2; col++) {\n            if (row < pad || row >= pad + h || col < pad || col >= pad + w) {\n                retVal.push(0);\n                continue;\n            }\n            retVal.push(arr[idx++]);\n        }\n    }\n    return retVal;\n};\n","import { tileHeight, tileWidth } from '../../config.js';\nimport { drawCurve, drawStraight, drawTSection, drawCrossing, drawTerminus } from './index.js';\n\n// will be removed by tree shaking\nimport drawDebugGrid from './drawDebugGrid.js';\n\nexport default () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 8 * tileWidth;\n    canvas.height = 8 * tileHeight;\n    const ctx = canvas.getContext('2d');\n    drawCurve({ ctx, row: 1, col: 1, deg: 0 });\n    drawCurve({ ctx, row: 1, col: 2, deg: 90 });\n    drawCurve({ ctx, row: 2, col: 1, deg: 270 });\n    drawCurve({ ctx, row: 2, col: 2, deg: 180 });\n    drawStraight({ ctx, row: 1, col: 3, deg: 0 });\n    drawStraight({ ctx, row: 2, col: 3, deg: 90 });\n    drawTSection({ ctx, row: 1, col: 4, deg: 0 });\n    drawTSection({ ctx, row: 1, col: 5, deg: 90 });\n    drawTSection({ ctx, row: 1, col: 6, deg: 180 });\n    drawTSection({ ctx, row: 2, col: 5, deg: 270 });\n    drawCrossing({ ctx, row: 2, col: 4 });\n    drawTerminus({ ctx, row: 3, col: 1, deg: 0 });\n    drawTerminus({ ctx, row: 3, col: 2, deg: 90 });\n    drawTerminus({ ctx, row: 3, col: 3, deg: 180 });\n    drawTerminus({ ctx, row: 3, col: 4, deg: 270 });\n    drawCurve({ ctx, row: 4, col: 1, deg: 0, broken: true });\n    drawCurve({ ctx, row: 4, col: 2, deg: 90, broken: true });\n    drawCurve({ ctx, row: 5, col: 1, deg: 270, broken: true });\n    drawCurve({ ctx, row: 5, col: 2, deg: 180, broken: true });\n    drawStraight({ ctx, row: 4, col: 3, deg: 0, broken: true });\n    drawStraight({ ctx, row: 5, col: 3, deg: 90, broken: true });\n    drawTSection({ ctx, row: 4, col: 4, deg: 0, broken: true });\n    drawTSection({ ctx, row: 4, col: 5, deg: 90, broken: true });\n    drawTSection({ ctx, row: 4, col: 6, deg: 180, broken: true });\n    drawTSection({ ctx, row: 5, col: 5, deg: 270, broken: true });\n    drawCrossing({ ctx, row: 5, col: 4, broken: true });\n    drawTerminus({ ctx, row: 6, col: 1, deg: 0, broken: true });\n    drawTerminus({ ctx, row: 6, col: 2, deg: 90, broken: true });\n    drawTerminus({ ctx, row: 6, col: 3, deg: 180, broken: true });\n    drawTerminus({ ctx, row: 6, col: 4, deg: 270, broken: true });\n\n    if (process.env.NODE_ENV === 'development') {\n        drawDebugGrid({ ctx, row: 1, col: 8 });\n    }\n\n    const image = new Image();\n    image.src = canvas.toDataURL('image/png');\n    // document.getElementById('wrapper').appendChild(image);\n    return new Promise(resolve => setTimeout(() => resolve(image), 100));\n};\n","/* global kontra */\n\nimport { drawPlayer, updatePlayer } from './index.js';\nimport {\n    canvasHeight,\n    canvasWidth,\n    playerStartDirection,\n    collisionRadius,\n    teleportCooldownTimeout\n} from '../config.js';\nimport { pubsub, GAME_OVER, DROP_SHIP } from '../pubsub/index.js';\nimport { collides } from '../utils/index.js';\nimport { messageBox } from '../messageBox/index.js';\nimport { calculateCameraCoordinates } from '../utils/index.js';\nimport { directionIsAllowed, switchDirection } from '../directions/index.js';\nimport { servers } from '../server/index.js';\n\nexport default map => {\n    const player = {\n        context: kontra.context,\n        x: canvasWidth / 2,\n        y: canvasHeight / 2,\n        collisionRadius,\n        map,\n        infected: false,\n        gameOver: true,\n        direction: playerStartDirection,\n        nextDirection: null,\n        dropBomb: false,\n        scale: 1,\n        dropping: false,\n        bombCoolingDown: false,\n        teleportToServer: false,\n        teleportCoolingDown: false,\n\n        update() {\n            ({\n                nextDirection: this.nextDirection,\n                direction: this.direction,\n                dropBomb: this.dropBomb,\n                scale: this.scale,\n                bombCoolingDown: this.bombCoolingDown,\n                teleportToServer: this.teleportToServer\n            } = updatePlayer(this, pubsub, messageBox));\n        },\n\n        render() {\n            drawPlayer(this);\n        },\n\n        infect(virus) {\n            if (collides(virus, this)) {\n                // eslint-disable-next-line no-param-reassign\n                this.infected = true;\n                if (!this.gameOver) {\n                    messageBox.show('player infected<br>game over');\n                    pubsub.publish(GAME_OVER);\n                }\n            }\n        },\n\n        teleport() {\n            if (this.teleportToServer && !this.teleportCoolingDown) {\n                this.teleportCoolingDown = true;\n\n                const nextServer = servers.getNext();\n                if (nextServer) {\n                    ({ sx: this.map.sx, sy: this.map.sy } = calculateCameraCoordinates(nextServer));\n                    if (!directionIsAllowed(this.map, { x: this.x, y: this.y }, this.direction)) {\n                        this.direction = switchDirection(this.map, { x: this.x, y: this.y }, this.direction);\n                    }\n                } else {\n                    messageBox.flash('all servers are destroyed or infected');\n                }\n\n                setTimeout(() => {\n                    this.teleportCoolingDown = false;\n                }, teleportCooldownTimeout);\n            }\n            this.teleportToServer = false;\n        },\n\n        enableControls() {\n            this.gameOver = false;\n        }\n    };\n\n    pubsub.subscribe(GAME_OVER, () => (player.gameOver = true));\n    pubsub.subscribe(DROP_SHIP, () => (player.dropping = true));\n\n    return player;\n};\n","import { lightGreen, darkGreen, lightRed, darkRed } from '../config.js';\nimport { calculateRotation } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, direction, infected, scale } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.scale(scale, scale);\n    ctx.rotate(calculateRotation(direction));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = infected ? lightRed : lightGreen;\n    ctx.fillStyle = infected ? darkRed : darkGreen;\n    ctx.beginPath();\n    ctx.moveTo(-15, 25);\n    ctx.lineTo(0, -25);\n    ctx.lineTo(15, 25);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n};\n","import { degreesToRadians } from './index.js';\nimport { N, E, S, W } from '../directions/index.js';\n\nexport default direction => {\n    switch (direction) {\n        case N:\n            return degreesToRadians(0);\n        case E:\n            return degreesToRadians(90);\n        case S:\n            return degreesToRadians(180);\n        case W:\n            return degreesToRadians(270);\n        default:\n            return null;\n    }\n};\n","import { directionIsAllowed, switchDirection } from '../directions/index.js';\nimport { pubsub, DROP_BOMB, DROP_SHIP, GAME_OVER } from '../pubsub/index.js';\nimport { getKey, isInTheMiddle } from './utils/index.js';\nimport { messageBox } from '../messageBox/index.js';\nimport { bombCooldown } from '../config.js';\n\nexport default sprite => {\n    let { nextDirection, direction, dropBomb, scale, bombCoolingDown, teleportToServer } = sprite;\n    const { dropping, map, gameOver, x, y } = sprite;\n    if (dropping) {\n        if (scale > 0) {\n            scale -= 0.01;\n        } else {\n            messageBox.show('You fell into the abyss<br>Game over');\n            pubsub.publish(GAME_OVER);\n        }\n        return { direction, nextDirection, dropBomb, scale, bombCoolingDown, teleportToServer };\n    }\n    if (!gameOver) {\n        ({ nextDirection, dropBomb, teleportToServer } = getKey(sprite));\n        if (bombCoolingDown) {\n            dropBomb = false;\n        }\n    }\n    if (!isInTheMiddle({ x: map.sx, y: map.sy })) {\n        return { direction, nextDirection, dropBomb, scale, bombCoolingDown, teleportToServer };\n    }\n    if (nextDirection && directionIsAllowed(map, { x, y }, nextDirection)) {\n        direction = nextDirection;\n        nextDirection = null;\n    } else {\n        try {\n            direction = switchDirection(map, { x, y }, direction);\n        } catch ({ message }) {\n            if (message === 'dropped') {\n                pubsub.publish(DROP_SHIP);\n            }\n        }\n    }\n    if (dropBomb) {\n        pubsub.publish(DROP_BOMB, map.getRowAndCol({ x, y }));\n        dropBomb = false;\n        bombCoolingDown = true;\n        setTimeout(() => {\n            // eslint-disable-next-line no-param-reassign\n            sprite.bombCoolingDown = false;\n        }, bombCooldown);\n    }\n    return { direction, nextDirection, dropBomb, scale, bombCoolingDown, teleportToServer };\n};\n","/* global kontra */\n\nimport { N, E, S, W } from '../../directions/index.js';\n\nexport default sprite => {\n    let { nextDirection, dropBomb, teleportToServer } = sprite;\n    if (kontra.keys.pressed('right')) {\n        nextDirection = E;\n    }\n    if (kontra.keys.pressed('left')) {\n        nextDirection = W;\n    }\n    if (kontra.keys.pressed('up')) {\n        nextDirection = N;\n    }\n    if (kontra.keys.pressed('down')) {\n        nextDirection = S;\n    }\n    if (kontra.keys.pressed('space')) {\n        dropBomb = true;\n    }\n    if (kontra.keys.pressed('enter')) {\n        teleportToServer = true;\n    }\n\n    return { nextDirection, dropBomb, teleportToServer };\n};\n","import { tileHeight, tileWidth } from '../../config.js';\n\nexport default ({ x, y }) => (x - tileWidth / 2) % tileWidth === 0 && (y - tileHeight / 2) % tileHeight === 0;\n","export default (predecessors, end) => {\n    const nodes = [];\n    let u = end;\n\n    while (u !== undefined) {\n        nodes.push(u);\n        u = predecessors.get(u);\n    }\n\n    nodes.reverse();\n    return nodes;\n};\n","import { findPaths, extractShortest } from './index.js';\n\nexport default (graph, nodes) => {\n    let start = nodes.shift();\n    const path = [];\n    let end, predecessors, shortest;\n\n    while (nodes.length) {\n        end = nodes.shift();\n        predecessors = findPaths(graph, start, end);\n\n        if (predecessors) {\n            shortest = extractShortest(predecessors, end);\n            if (nodes.length) {\n                path.push.apply(path, shortest.slice(0, -1));\n            } else {\n                return path.concat(shortest);\n            }\n        } else {\n            return null;\n        }\n\n        start = end;\n    }\n    return null;\n};\n","export default (data, start, end) => {\n    const costs = new Map([[start, 0]]);\n    const open = new Map([[0, [start]]]);\n    const predecessors = new Map();\n\n    function addToOpen(cost, vertex) {\n        let vertices = open.get(cost);\n        if (!vertices) {\n            vertices = [];\n            open.set(cost, vertices);\n        }\n        vertices.push(vertex);\n    }\n\n    while (open.size > 0) {\n        const currentCost = Array.from(open.keys()).sort((a, b) => a - b)[0];\n\n        const bucket = open.get(currentCost);\n        const node = bucket.shift();\n        const adjacentNodes = data.get(node) || new Map();\n\n        if (bucket.length === 0) {\n            open.delete(currentCost);\n        }\n\n        for (const [vertex, cost] of adjacentNodes) {\n            const totalCost = cost + currentCost;\n            const vertexCost = costs.get(vertex);\n\n            if (vertexCost === undefined || vertexCost > totalCost) {\n                costs.set(vertex, totalCost);\n                addToOpen(totalCost, vertex);\n                predecessors.set(vertex, node);\n            }\n        }\n    }\n\n    return costs.get(end) === undefined ? null : predecessors;\n};\n","import { getNodeByCoords, initGraphAndAllowed } from './index.js';\nimport { N, S, W, E } from '../../directions/index.js';\n\nexport default ({ width, layers }, layer) => {\n    const { graph, allowed } = initGraphAndAllowed(layers[layer].data, width);\n    for (const [node, adjacent] of graph) {\n        const currAllowed = allowed.get(node);\n        const { row, col } = node;\n        let target;\n        for (const dir of currAllowed) {\n            switch (dir) {\n                case N:\n                    target = getNodeByCoords(graph, { row: row - 1, col });\n                    if (target) {\n                        adjacent.set(target, 1);\n                    }\n                    break;\n                case E:\n                    target = getNodeByCoords(graph, { row, col: col + 1 });\n                    if (target) {\n                        adjacent.set(target, 1);\n                    }\n                    break;\n                case S:\n                    target = getNodeByCoords(graph, { row: row + 1, col });\n                    if (target) {\n                        adjacent.set(target, 1);\n                    }\n                    break;\n                case W:\n                    target = getNodeByCoords(graph, { row, col: col - 1 });\n                    if (target) {\n                        adjacent.set(target, 1);\n                    }\n                    break;\n                default:\n            }\n        }\n    }\n    return graph;\n};\n","export default (graph, { row, col }) => {\n    for (const [node] of graph) {\n        if (row === node.row && col === node.col) {\n            return node;\n        }\n    }\n    return null;\n};\n","import { directionSwitchMap } from '../../directions/index.js';\nimport { isValidTile } from '../../utils/index.js';\n\nexport default (layerData, width) => {\n    const graph = new Map();\n    const allowed = new Map();\n    let row = 0;\n    let col = 0;\n    let index = 0;\n    for (const tile of layerData) {\n        if (isValidTile(tile)) {\n            const node = { row, col };\n            allowed.set(node, directionSwitchMap[tile].allowed);\n            graph.set(node, new Map());\n        }\n        if (++index % width === 0) {\n            row++;\n            col = 0;\n        } else {\n            col++;\n        }\n    }\n    return { graph, allowed };\n};\n","import { findShortestPath, convertMapToGraph, getNodeByCoords } from './utils/index.js';\n\nexport class Pathfinder {\n    constructor(graph = null) {\n        this.graph = graph;\n    }\n\n    setDataFromMap(map, layer) {\n        this.graph = convertMapToGraph(map, layer);\n    }\n\n    getNodeByCoords(coords) {\n        return getNodeByCoords(this.graph, coords);\n    }\n\n    findShortestPath(...args) {\n        if (process.env.NODE_ENV === 'development' && !this.graph) {\n            throw new Error('You forgot to set a graph for the pathfinder before trying to use it to find a path');\n        }\n        return findShortestPath(this.graph, args);\n    }\n\n    isReachable(a, b) {\n        const shortestPath = this.findShortestPathByCoords(a, b);\n        return shortestPath !== null;\n    }\n\n    findShortestPathByCoords(...args) {\n        return this.findShortestPath(...args.map(coords => this.getNodeByCoords(coords)));\n    }\n}\n\nexport default new Pathfinder();\n","import { pathfinder } from './index.js';\nimport { pubsub, MAP_CHANGED } from '../pubsub/index.js';\n\nexport default map => {\n    pathfinder.setDataFromMap(map, 'main');\n    pubsub.subscribe(MAP_CHANGED, changedMap => pathfinder.setDataFromMap(changedMap, 'main'));\n};\n","import { ONLINE, OFFLINE } from './index.js';\nimport { createUser, INFECTED } from './index.js';\nimport { multiCollides } from '../utils/index.js';\nimport { pubsub, GAME_OVER } from '../pubsub/index.js';\nimport { messageBox } from '../messageBox/index.js';\nimport { pathfinder } from '../pathfinder/index.js';\n\nexport default class {\n    constructor(map) {\n        this.map = map;\n        this.users = [];\n        this.gameOver = false;\n        for (let row = 0; row < map.height; row++) {\n            for (let col = 0; col < map.width; col++) {\n                const tile = map.tileAtLayer('main', { row, col });\n                if (tile >= 17 && tile <= 20) {\n                    this.users.push(createUser({ map, row, col }));\n                }\n            }\n        }\n        pubsub.subscribe(GAME_OVER, () => (this.gameOver = true));\n    }\n\n    updateOnlineStatus(...viruses) {\n        const virusesWithRowAndCol = viruses.map(virus => ({\n            ...virus,\n            ...this.map.getRowAndCol({ x: virus.x, y: virus.y })\n        }));\n        let goneOffline = 0;\n        for (const user of this.users.filter(({ status }) => status === ONLINE)) {\n            for (const virus of virusesWithRowAndCol) {\n                const isReachable = pathfinder.isReachable(user, virus);\n                if (!isReachable) {\n                    goneOffline++;\n                    user.status = OFFLINE;\n                }\n            }\n        }\n        if (goneOffline > 0) {\n            const { online, offline, infected } = this.getStats();\n            if (online === 0) {\n                messageBox.show(`level completed<br>offline users: ${offline}<br>infected users: ${infected}`);\n                pubsub.publish(GAME_OVER);\n            } else {\n                messageBox.flash(`${offline} users went offline<br>good job!`);\n            }\n        }\n    }\n\n    getStats() {\n        return this.users.reduce(\n            (acc, { status }) => ({\n                online: acc.online + (status === ONLINE ? 1 : 0),\n                offline: acc.offline + (status === OFFLINE ? 1 : 0),\n                infected: acc.infected + (status === INFECTED ? 1 : 0)\n            }),\n            { online: 0, offline: 0, infected: 0 }\n        );\n    }\n\n    update() {\n        this.users.forEach(user => user.update());\n    }\n\n    render() {\n        this.users.forEach(user => user.render());\n    }\n\n    infect(...viruses) {\n        const { users, gameOver } = this;\n        const userVirusCollisions = multiCollides(users, viruses).filter(([user]) => user.status !== INFECTED);\n        if (userVirusCollisions.length === 0) {\n            return;\n        }\n        userVirusCollisions.forEach(([user]) => user.infect());\n        if (gameOver) {\n            return;\n        }\n        const { online, offline, infected } = this.getStats();\n        if (online === 0) {\n            messageBox.show(`level completed<br>offline users: ${offline}<br>infected users: ${infected}`);\n            pubsub.publish(GAME_OVER);\n            return;\n        }\n        messageBox.flash('user infected!');\n    }\n}\n","/* global kontra */\n\nimport { drawUser, INFECTED } from './index.js';\nimport { tileWidth, tileHeight, collisionRadius } from '../config.js';\nimport { ONLINE } from './index.js';\nimport { pubsub, INFECTED as INFECTED_EVENT } from '../pubsub/index.js';\n\nexport default ({ map, row, col }) => {\n    const { x, y } = map.getXAndY({ row, col });\n    return {\n        context: kontra.context,\n        x,\n        y,\n        collisionRadius,\n        infected: false,\n        map,\n        mapX: col * tileWidth,\n        mapY: row * tileHeight,\n        row,\n        col,\n        status: ONLINE,\n        update() {\n            ({ x: this.x, y: this.y } = map.getXAndY({ mapX: this.mapX, mapY: this.mapY }));\n        },\n        render() {\n            drawUser(this);\n        },\n        infect() {\n            this.status = INFECTED;\n            pubsub.publish(INFECTED_EVENT);\n        }\n    };\n};\n","export const ONLINE = 0;\nexport const OFFLINE = 1;\nexport const INFECTED = 2;\n","/* global kontra */\nimport { lightBlue, darkBlue, lightGreen, darkGreen, lightRed, darkRed } from '../config.js';\nimport { ONLINE, OFFLINE, INFECTED } from './constants.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\n\nconst spriteMapping = {\n    [ONLINE]: { fg: lightBlue, bg: darkBlue },\n    [OFFLINE]: { fg: lightGreen, bg: darkGreen },\n    [INFECTED]: { fg: lightRed, bg: darkRed }\n};\n\nexport default sprite => {\n    const { context: ctx, x, y, status } = sprite;\n    const { fg, bg } = spriteMapping[status];\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = fg;\n    ctx.fillStyle = bg;\n    ctx.beginPath();\n    ctx.moveTo(-40, 40);\n    ctx.lineTo(-40, 20);\n    ctx.arc(-20, 20, 20, deg2rad(180), deg2rad(270));\n    ctx.moveTo(-20, 0);\n    ctx.lineTo(20, 0);\n    ctx.arc(20, 20, 20, deg2rad(270), deg2rad(0));\n    ctx.lineTo(40, 40);\n    ctx.lineTo(-40, 40);\n    ctx.moveTo(-23, 20);\n    ctx.lineTo(-23, 40);\n    ctx.moveTo(23, 20);\n    ctx.lineTo(23, 40);\n    ctx.fill();\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.arc(0, -15, 25, deg2rad(0), deg2rad(360));\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n};\n","/* global kontra */\n\nimport {\n    virusStartDirection,\n    virusStartCol,\n    virusStartRow,\n    tileWidth,\n    tileHeight,\n    collisionRadius\n} from '../config.js';\nimport { drawVirus, updateVirus, Blips } from './index.js';\n\nexport default map => {\n    const { x, y } = map.getXAndY({ row: virusStartRow, col: virusStartCol });\n    const blips = new Blips();\n    const virus = {\n        context: kontra.context,\n        x,\n        y,\n        collisionRadius,\n        map,\n        mapX: virusStartCol * tileWidth,\n        mapY: virusStartRow * tileHeight,\n        direction: virusStartDirection,\n        blips,\n        update() {\n            ({ x: this.x, y: this.y, mapX: this.mapX, mapY: this.mapY, direction: this.direction } = updateVirus(this));\n            this.blips.update();\n        },\n        render() {\n            drawVirus(this);\n            this.blips.render();\n        }\n    };\n    blips.start(virus);\n\n    return virus;\n};\n","import { virusBlipInterval } from '../config.js';\nimport { createBlip } from './index.js';\n\nexport default class {\n    constructor() {\n        this.blips = [];\n    }\n\n    start(virus) {\n        setInterval(() => {\n            this.blips.push(createBlip({ x: virus.x, y: virus.y }));\n        }, virusBlipInterval);\n    }\n    update() {\n        this.blips.forEach(blip => blip.update());\n        this.blips = this.blips.filter(blip => blip.ttl > 0);\n    }\n    render() {\n        this.blips.forEach(blip => blip.render());\n    }\n}\n","import {\n    switchDirection,\n    isIntersection,\n    directionSwitchMap,\n    getOppositeDirection,\n    directionIsAllowed\n} from '../directions/index.js';\nimport { getRandomInt } from '../utils/index.js';\nimport { isInTheMiddle, moveVirus, getBestDirection } from './utils/index.js';\n\nlet visits = null;\n\nexport default sprite => {\n    let { direction } = sprite;\n    const { map } = sprite;\n    const { mapX, mapY } = moveVirus(sprite);\n    const { x, y } = map.getXAndY({ mapX, mapY });\n    if (!visits) {\n        visits = Array(map.height)\n            .fill()\n            .map(() => Array(map.width).fill(0));\n    }\n    if (isInTheMiddle({ mapX, mapY })) {\n        const tile = map.tileAtLayer('main', { x, y });\n        const { col, row } = map.getRowAndCol({ x, y });\n        visits[row][col]++;\n        if (isIntersection(tile)) {\n            const { allowed } = directionSwitchMap[tile];\n            const viable = allowed.filter(\n                dir => dir !== getOppositeDirection(direction) && directionIsAllowed(map, { x, y }, dir)\n            );\n            const bestDirections = getBestDirection({ viable, visits, row, col });\n            direction = bestDirections[getRandomInt(0, bestDirections.length - 1)];\n        } else {\n            direction = switchDirection(map, { x, y }, direction);\n        }\n    }\n    return {\n        direction,\n        mapY,\n        mapX,\n        x,\n        y\n    };\n};\n","import { N, E, S, W } from '../../directions/index.js';\nimport { virusSpeed } from '../../config.js';\n\nexport default ({ mapX, mapY, direction }) => {\n    switch (direction) {\n        case N:\n            return { mapX, mapY: mapY - virusSpeed };\n        case E:\n            return { mapX: mapX + virusSpeed, mapY };\n        case S:\n            return { mapX, mapY: mapY + virusSpeed };\n        case W:\n            return { mapX: mapX - virusSpeed, mapY };\n        default:\n            return { mapX, mapY };\n    }\n};\n","import { tileHeight, tileWidth } from '../../config.js';\n\nexport default ({ mapX, mapY }) => mapX % tileWidth === 0 && mapY % tileHeight === 0;\n","import { N, E, S, W } from '../../directions/index.js';\n\nexport default ({ viable, visits, row, col }) => {\n    let minVis = Number.MAX_SAFE_INTEGER;\n    return viable\n        .map(dir => {\n            let vis;\n            switch (dir) {\n                case N:\n                    vis = visits[row - 1][col];\n                    break;\n                case E:\n                    vis = visits[row][col + 1];\n                    break;\n                case S:\n                    vis = visits[row + 1][col];\n                    break;\n                case W:\n                    vis = visits[row][col - 1];\n                    break;\n                default:\n            }\n            minVis = vis < minVis ? vis : minVis;\n            return { dir, vis };\n        })\n        .filter(({ vis }) => vis === minVis)\n        .map(({ dir }) => dir);\n};\n","import { N, E, S, W } from './index.js';\n\nexport default direction => {\n    switch (direction) {\n        case N:\n            return S;\n        case E:\n            return W;\n        case S:\n            return N;\n        case W:\n            return W;\n        default:\n            return null;\n    }\n};\n","import { lightRed, darkRed } from '../config.js';\nimport { getRandomInt as ri } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightRed;\n    ctx.fillStyle = darkRed;\n    ctx.beginPath();\n    ctx.moveTo(ri(-5, 5), ri(-5, -25)); // 1\n    ctx.lineTo(ri(5, 50), ri(-5, -50)); // 2\n    ctx.lineTo(ri(5, 25), ri(-5, 5)); // 3\n    ctx.lineTo(ri(5, 50), ri(5, 50)); // 4\n    ctx.lineTo(ri(-5, 5), ri(5, 25)); // 5\n    ctx.lineTo(ri(-5, -50), ri(5, 50)); // 6\n    ctx.lineTo(ri(-5, -25), ri(-5, 5)); // 7\n    ctx.lineTo(ri(-5, -50), ri(-5, -50)); // 8\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.restore();\n};\n","/* global kontra */\n\nimport { tileHeight, virusBlipTtl } from '../config.js';\nimport { drawBlip } from './index.js';\n\nexport default ({ x, y }) => ({\n    context: kontra.context,\n    x,\n    y,\n    ttl: virusBlipTtl,\n    radius: tileHeight,\n    update() {\n        this.radius += 10;\n        this.ttl--;\n    },\n    render() {\n        drawBlip(this);\n    }\n});\n","import { lightRed } from '../config.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, radius } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = lightRed;\n    ctx.beginPath();\n    ctx.arc(0, 0, radius, deg2rad(0), deg2rad(360));\n    ctx.closePath();\n    ctx.stroke();\n\n    ctx.restore();\n};\n","import { canvasHeight, canvasWidth, lightBlue } from '../config.js';\n\nexport default () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = canvasWidth;\n    canvas.height = canvasHeight;\n    canvas.style.cssText = `\n        border: 4px solid ${lightBlue};\n    `;\n    const wrapper = document.getElementById('wrapper');\n    wrapper.appendChild(canvas);\n};\n","/* global kontra */\n\nimport { initAudio } from '../audio/index.js';\nimport { Bombs } from '../bomb/index.js';\nimport { createLoop } from '../loop/index.js';\nimport { createMap } from '../map/index.js';\nimport { createPlayer } from '../player/index.js';\nimport { Users } from '../user/index.js';\nimport { createVirus } from '../virus/index.js';\nimport { createCanvas } from '../canvas/index.js';\nimport { initPathfinder } from '../pathfinder/index.js';\nimport { pubsub, USERS_POSSIBLY_OFFLINE } from '../pubsub/index.js';\nimport { messageBox } from '../messageBox/index.js';\nimport { lightGreen } from '../config.js';\nimport { servers } from '../server/index.js';\n\nconst serverCoordinates = [{ row: 9, col: 8 }, { row: 9, col: 12 }, { row: 15, col: 15 }];\n\nclass GameManager {\n    async init() {\n        createCanvas();\n        kontra.init();\n        const map = await createMap();\n        initPathfinder(map);\n        this.player = createPlayer(map);\n        const virus = createVirus(map);\n        const bombs = new Bombs(map);\n        const users = new Users(map);\n        servers.init(map, serverCoordinates);\n        pubsub.subscribe(USERS_POSSIBLY_OFFLINE, () => users.updateOnlineStatus(virus));\n        this.loop = createLoop({ map, player: this.player, virus, users, bombs });\n\n        initAudio();\n        map.render();\n        users.render();\n        servers.render();\n        bombs.render();\n        this.player.render();\n        virus.render();\n    }\n\n    showStartScreen() {\n        messageBox.show(`\n            welcome, <span style=\"color:${lightGreen}; font-size: 150%\">captain katamov!</span><br><br>\n            Your shift as chief network security officers is about to begin… all users are online and happy. \n            in case of virus intrusion, <span style=\"color: ${lightGreen}\">cut them off</span> from the network\n            to make sure they don't get infected!<br><br>\n            <table style=\"font-size: 75%; text-align: left; margin-left: auto; margin-right: auto\">\n                <tr>\n                    <td><span style=\"color: ${lightGreen}\">arrow keys</span></td>\n                    <td>…</td><td>change direction</td>\n                </tr><tr>\n                    <td><span style=\"color: ${lightGreen}\">space bar</span></td>\n                    <td>…</td><td>drop bomb</td>\n                </tr><tr>\n                    <td><span style=\"color: ${lightGreen}\">return</span></td>\n                    <td>…</td><td>teleport to server</td>\n                </tr>\n            </table>\n            <br>\n            press any key to begin!\n        `);\n        document.addEventListener(\n            'keydown',\n            () => {\n                messageBox.clear();\n                this.startLevel();\n                setTimeout(() => this.player.enableControls(), 500);\n            },\n            { once: true }\n        );\n    }\n\n    startLevel() {\n        this.loop.start();\n    }\n}\n\nexport default new GameManager();\n","import { gameManager } from './gameManager/index.js';\n\n// will be removed by tree shaking\nimport createDevbox from './devbox/createDevbox.js';\nif (process.env.NODE_ENV === 'development') {\n    createDevbox();\n}\n\n(async () => {\n    await gameManager.init();\n    gameManager.showStartScreen();\n})();\n"]}
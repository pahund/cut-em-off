{"version":3,"sources":["../src/directions/constants.js","../src/utils/calculateCameraCoordinates.js","../src/utils/degreesToRadians.js","../src/utils/getRandomInt.js","../src/utils/multiCollides.js","../src/utils/collides.js","../src/utils/isValidTile.js","../src/directions/directionIsAllowed.js","../src/directions/switchDirection.js","../src/directions/directionSwitchMap.js","../src/directions/isIntersection.js","../src/directions/getNextTile.js","../src/config.js","../src/pubsub/pubsub.js","../src/pubsub/constants.js","../src/loop/createLoop.js","../src/loop/utils/moveCamera.js","../src/map/mapData.js","../src/map/tilesheet/drawCurve.js","../src/map/tilesheet/utils/krakel.js","../src/map/tilesheet/drawStraight.js","../src/map/tilesheet/drawTSection.js","../src/map/tilesheet/drawCrossing.js","../src/map/tilesheet/drawServer.js","../src/map/tilesheet/drawTerminus.js","../src/tileEngine/createTileEngine.js","../src/map/createMap.js","../src/map/utils/addPadding.js","../src/map/tilesheet/createTilesheet.js","../src/messageBox/messageBox.js","../src/player/createPlayer.js","../src/player/drawPlayer.js","../src/utils/calculateRotation.js","../src/player/updatePlayer.js","../src/player/utils/getKey.js","../src/player/utils/isInTheMiddle.js","../src/pathfinder/utils/extractShortest.js","../src/pathfinder/utils/findShortestPath.js","../src/pathfinder/utils/findPaths.js","../src/pathfinder/utils/convertMapToGraph.js","../src/pathfinder/utils/getNodeByCoords.js","../src/pathfinder/utils/initGraphAndAllowed.js","../src/pathfinder/pathfinder.js","../src/user/createUser.js","../src/user/constants.js","../src/user/drawUser.js","../src/virus/createVirus.js","../src/virus/Blips.js","../src/virus/updateVirus.js","../src/virus/utils/moveVirus.js","../src/virus/utils/isInTheMiddle.js","../src/virus/utils/getBestDirections.js","../src/directions/getOppositeDirection.js","../src/virus/drawVirus.js","../src/virus/createBlip.js","../src/virus/drawBlip.js","../src/bomb/createBomb.js","../src/bomb/constants.js","../src/bomb/drawBomb.js","../src/bomb/drawBombWithFuse.js","../src/bomb/updateBomb.js","../src/bomb/createShrapnel.js","../src/bomb/drawShrapnel.js","../vendor/sfxr.js","../src/audio/ArcadeAudio.js","../src/audio/sounds.js","../src/audio/index.js","../src/index.js","../src/canvas/createCanvas.js","../src/pathfinder/initPathfinder.js","../src/bomb/Bombs.js","../src/user/Users.js"],"names":["N","E","S","W","deg2rad","degrees","Math","PI","ri","a","b","min","max","floor","random","multiCollides","arr1","arr2","collisions","i1","length","sprite1","i2","sprite2","collides","push","dx","x","dy","y","sqrt","collisionRadius","isValidTile","tile","directionIsAllowed","map","direction","tileAtLayer","directionSwitchMap","allowed","includes","nextTile","getNextTile","switchDirection","curr","Error","nextDirection","change","otherDirections","filter","dir","getRandomInt","1","[object Object]","2","3","4","5","6","9","10","11","12","13","17","18","19","20","14","38","intersectionTiles","Object","entries","Number","tileWidth","tileHeight","canvasWidth","canvasHeight","virusBlipInterval","pubsub","this","subscribers","message","callback","incomingMessage","payload","forEach","GAME_OVER","DROP_BOMB","BOMB_EXPLODES","INFECTED","DROP_SHIP","createLoop","player","virus","users","bombs","shipMoving","subscribe","kontra","gameLoop","update","infect","sy","sx","moveCamera","render","mapData","calculatePointOnArc","deg","r","cos","sin","drawCurve","ctx","row","col","broken","save","translate","rotate","lineWidth","strokeStyle","beginPath","moveTo","arc","lineTo","stroke","restore","krakel","data","draw","drawStraight","drawTSection","drawCrossing","drawServer","drawTerminus","createTileEngine","properties","width","height","mapWidth","mapHeight","context","canvas","offscreenCanvas","document","createElement","offscreenContext","getContext","sxMax","syMax","_sx","_sy","layerOrder","tileEngine","tilesets","layers","addTilesets","concat","tileset","tilesetImage","image","firstGrid","lastTileset","tiles","i","Infinity","path","lastIndexOf","substr","assets","images","numTiles","lastGrid","sort","addLayers","layer","c","value","undefined","Array","isArray","name","zIndex","prop","hasOwnProperty","JSON","parse","e","layerIndex","dataIndex","len","renderTile","preRenderImage","layerId","position","getIndex","index","drawImage","renderLayer","getRow","getCol","startX","startY","viewWidth","ceil","tileOffset","w","count","getTileset","getXAndY","mapX","mapY","currTile","clear","clearRect","createMap","async","calculateCameraCoordinates","paddedMap","arr","h","pad","retVal","idx","addPadding","Image","src","toDataURL","Promise","resolve","setTimeout","createTilesheet","messageBox","timeoutHandler","div","style","cssText","getElementById","appendChild","clearTimeout","transition","innerHTML","backgroundColor","color","createPlayer","infected","gameOver","dropBomb","scale","dropping","bombCoolingDown","updatePlayer","drawPlayer","show","publish","sprite","degreesToRadians","calculateRotation","fillStyle","closePath","fill","keys","pressed","getKey","isInTheMiddle","getRowAndCol","extractShortest","predecessors","end","nodes","u","get","reverse","findShortestPath","graph","start","shift","shortest","findPaths","apply","slice","costs","Map","open","addToOpen","cost","vertex","vertices","set","size","currentCost","from","bucket","node","adjacentNodes","delete","totalCost","vertexCost","convertMapToGraph","initGraphAndAllowed","adjacent","currAllowed","target","getNodeByCoords","layerData","pathfinder","coords","args","findShortestPathByCoords","createUser","status","ONLINE","drawUser","INFECTED_EVENT","OFFLINE","spriteMapping","fg","bg","createVirus","blips","setInterval","createBlip","blip","ttl","updateVirus","drawVirus","visits","moveVirus","isIntersection","bestDirections","viable","minVis","MAX_SAFE_INTEGER","vis","getBestDirection","getOppositeDirection","radius","drawBlip","createBomb","fuseLength","FUSE_BURNING","shrapnel","explosionDuration","updateBomb","drawBomb","EXPLODED","drawBombWithFuse","s","fuseDeg","sparkCX","sparkCY","sparkX","sparkY","fillRect","createShrapnel","changeTile","speed","rotation","rotationDir","drawShrapnel","synth","_envelopeLength0","_envelopeLength1","_envelopeLength2","_period","_maxPeriod","_slide","_deltaSlide","_changeAmount","_changeTime","_changeLimit","_squareDuty","_dutySweep","_params","setSettings","values","String","fromCharCode","totalTime","multiplier","reset","p","f","g","n","o","l","m","totalReset","synthWave","buffer","_filters","v","_hpFilterCutoff","_hpFilterDeltaCutoff","_lpFilterCutoff","_lpFilterDeltaCutoff","t","_lpFilterOn","_masterVolume","_minFreqency","_phaser","q","_phaserDeltaOffset","_phaserOffset","_repeatLimit","_sustainPunch","d","_vibratoAmplitude","j","_vibratoSpeed","k","_waveType","_envelopeLength","_envelopeOverLength0","_envelopeOverLength1","_envelopeOverLength2","_lpFilterDamping","_lpFilterOldPos","_periodTemp","_phaserInt","_pos","_finished","_envelopeStage","_envelopeTime","_envelopeVolume","_hpFilterPos","_lpFilterDeltaPos","_lpFilterPos","_phase","_phaserPos","_repeatTime","_sample","_superSample","_vibratoPhase","_phaserBuffer","_noiseBuffer","abs","jsfxr","settings","envelopeFullLength","Uint8Array","used","Uint16Array","dv","Uint32Array","base64Characters","output","ArcadeAudio","aa","sounds","add","prototype","key","elem","tick","pool","audio","Audio","play","sound","soundData","createCanvas","init","setDataFromMap","changedMap","initPathfinder","mapCoords","find","bomb","viruses","virusesWithRowAndCol","goneOffline","user","isReachable","online","offline","getStats","flash","reduce","acc","userVirusCollisions","updateOnlineStatus","loop","console","log"],"mappings":"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GAAK,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAG,GAAI,GAAK,EAAI,EAAG,GAAI,GAAK,EAAI,EAC5E,EAAI,EAAG,GAAI,GAAK,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAC5E,EAAI,EAAI,EAAG,GAAK,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EAAG,GAAI,GAAK,EAAI,EAC5E,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAC3E,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAG,GAAI,GAAK,EAAI,EAAG,GAAK,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAC5E,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAC5E,EAAI,EAAG,GAAK,EAAI,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAC5E,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAG,GAC3E,EAAI,EAAG,GAAK,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAK,EAAI,EAAI,EAC5E,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAC3E,EAAI,EAAG,GAAK,EAAI,EAAG,GAAI,GAAK,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAK,EAAG,GAAK,EAAI,EAAI,EAAI,EAC5E,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAG,GAAI,GAAI,GAAI,GAAK,EAAI,EAAI,EAAI,EAAG,GAAK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","sourcesContent":["export const N = 'N';\nexport const E = 'E';\nexport const S = 'S';\nexport const W = 'W';\n","import { tileHeight, tileWidth, canvasWidth, canvasHeight } from '../config.js';\n\nexport default ({ col, row }) => ({\n    sx: col * tileWidth - canvasWidth / 2 + tileWidth / 2,\n    sy: row * tileHeight - canvasHeight / 2 + tileHeight / 2\n});\n","export default degrees => (degrees * Math.PI) / 180;\n","export default (a, b) => {\n    const min = Math.min(a, b);\n    const max = Math.max(a, b);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n","import { collides } from './index.js';\n\nexport default (arr1, arr2) => {\n    const collisions = [];\n    for (let i1 = 0; i1 < arr1.length; i1++) {\n        const sprite1 = arr1[i1];\n        for (let i2 = 0; i2 < arr2.length; i2++) {\n            const sprite2 = arr2[i2];\n            if (collides(sprite1, sprite2)) {\n                collisions.push([sprite1, sprite2]);\n            }\n        }\n    }\n    return collisions;\n};\n","export default (sprite1, sprite2) => {\n    const dx = sprite1.x - sprite2.x;\n    const dy = sprite1.y - sprite2.y;\n    return Math.sqrt(dx * dx + dy * dy) < sprite1.collisionRadius + sprite2.collisionRadius;\n};\n","export default tile => (tile > 0 && tile < 25) || (tile > 30 && tile < 33) || (tile > 37 && tile < 41) || tile > 44;\n","import { directionSwitchMap, getNextTile } from './index.js';\nimport { isValidTile } from '../utils/index.js';\n\nexport default (map, { x, y }, direction) => {\n    const tile = map.tileAtLayer('main', { x, y });\n    if (!isValidTile(tile) || !directionSwitchMap[tile].allowed.includes(direction)) {\n        return false;\n    }\n    const nextTile = getNextTile(map, { x, y }, direction);\n    return isValidTile(nextTile);\n};\n","import { directionSwitchMap, directionIsAllowed } from './index.js';\nimport { isValidTile, getRandomInt } from '../utils/index.js';\n\nexport default (map, { x, y }, curr) => {\n    const tile = map.tileAtLayer('main', { x, y });\n    /* player accidentally stepped onto a broken conduit tile */\n    if (!isValidTile(tile)) {\n        throw new Error('dropped');\n    }\n    const nextDirection = directionSwitchMap[tile].change[curr] || curr;\n    if (directionIsAllowed(map, { x, y }, nextDirection)) {\n        return nextDirection;\n    }\n    const otherDirections = directionSwitchMap[tile].allowed.filter(dir => directionIsAllowed(map, { x, y }, dir));\n    switch (otherDirections.length) {\n        case 0:\n            /* oh no, player locked themselves in! */\n            throw new Error('locked in');\n        case 1:\n            return otherDirections[0];\n        default:\n            return otherDirections[getRandomInt(0, otherDirections.length - 1)];\n    }\n};\n","import { N, E, S, W } from './index.js';\n\nexport default {\n    // curve from S to E\n    1: {\n        allowed: [S, E],\n        change: {\n            [N]: E,\n            [W]: S\n        }\n    },\n    // curve from W to S\n    2: {\n        allowed: [W, S],\n        change: {\n            [N]: W,\n            [E]: S\n        }\n    },\n    // straight from N to S\n    3: {\n        allowed: [N, S],\n        change: {}\n    },\n    // T section W, N, E\n    4: {\n        allowed: [W, N, E],\n        change: {\n            [S]: N\n        }\n    },\n    // T section N, E, S\n    5: {\n        allowed: [N, E, S],\n        change: {\n            [W]: E\n        }\n    },\n    // T section W, E, S\n    6: {\n        allowed: [W, E, S],\n        change: {\n            [N]: S\n        }\n    },\n    // curve from N to E\n    9: {\n        allowed: [N, E],\n        change: {\n            [S]: E,\n            [W]: N\n        }\n    },\n    // curve from W to N\n    10: {\n        allowed: [W, N],\n        change: {\n            [E]: N,\n            [S]: W\n        }\n    },\n    // straight from W to E\n    11: {\n        allowed: [W, E],\n        change: {}\n    },\n    // crossing\n    12: {\n        allowed: [N, E, S, W],\n        change: {}\n    },\n    // T section N, S, W\n    13: {\n        allowed: [N, S, W],\n        change: {\n            [E]: W\n        }\n    },\n    // terminus S\n    17: {\n        allowed: [S],\n        change: {\n            [N]: S\n        }\n    },\n    // terminus W\n    18: {\n        allowed: [W],\n        change: {\n            [E]: W\n        }\n    },\n    // terminus N\n    19: {\n        allowed: [N],\n        change: {\n            [S]: N\n        }\n    },\n    // terminus E\n    20: {\n        allowed: [E],\n        change: {\n            [W]: E\n        }\n    },\n\n    /* FIXME: servers should be sprites */\n    // server\n    14: {\n        allowed: [N, S],\n        change: {}\n    },\n    // broken server\n    38: {\n        allowed: [N, S],\n        change: {}\n    }\n};\n","import { directionSwitchMap } from './index.js';\n\nconst intersectionTiles = [];\nfor (const [tile, { allowed }] of Object.entries(directionSwitchMap)) {\n    if (allowed.length > 2) {\n        intersectionTiles.push(Number(tile));\n    }\n}\n\nexport default tile => intersectionTiles.includes(tile);\n","import { N, E, S, W } from './index.js';\nimport { tileHeight, tileWidth } from '../config.js';\n\nexport default (map, { x, y }, direction) =>\n    map.tileAtLayer('main', {\n        x: direction === E ? x + tileWidth : direction === W ? x - tileWidth : x,\n        y: direction === N ? y - tileHeight : direction === S ? y + tileHeight : y\n    });\n","import { N, W } from './directions/index.js';\n\nexport const canvasWidth = 800;\nexport const canvasHeight = 600;\n\n/* map */\nexport const tileWidth = 100;\nexport const tileHeight = 100;\nexport const mapWidth = 20;\nexport const mapHeight = 20;\nexport const mapPadding = 4;\n\n/* player */\nexport const playerStartCol = 8;\nexport const playerStartRow = 9;\nexport const playerStartDirection = N;\nexport const playerSpeed = 5;\n\n/* virus */\nexport const virusStartCol = 8;\nexport const virusStartRow = 7;\nexport const virusStartDirection = W;\nexport const virusSpeed = 2.5;\nexport const virusBlipInterval = 1000;\nexport const virusBlipTtl = 180;\n\n/* colors */\nexport const lightGreen = '#75a042';\nexport const darkGreen = '#365b1d';\nexport const lightBlue = '#52638a';\nexport const darkBlue = '#2b3653';\nexport const lightRed = '#cd3926';\nexport const darkRed = '#7a2431';\n\nexport const collisionRadius = 30;\nexport const bombCooldown = 100;\n","// exported for testing\nexport class Pubsub {\n    constructor() {\n        this.subscribers = [];\n    }\n    subscribe(message, callback) {\n        this.subscribers.push({ message, callback });\n    }\n    publish(incomingMessage, payload) {\n        this.subscribers.forEach(({ message, callback }) => message === incomingMessage && callback(payload));\n    }\n}\n\nexport default new Pubsub();\n","export const GAME_OVER = 0;\nexport const DROP_BOMB = 1;\nexport const BOMB_EXPLODES = 6;\nexport const INFECTED = 7;\nexport const DROP_SHIP = 2;\nexport const MAP_CHANGED = 3;\nexport const USERS_POSSIBLY_OFFLINE = 4;\n","/* global kontra */\n\nimport { moveCamera } from './utils/index.js';\nimport { pubsub, DROP_SHIP } from '../pubsub/index.js';\n\nexport default ({ map, player, virus, users, bombs }) => {\n    const times = [];\n    let fps;\n    let shipMoving = true;\n    pubsub.subscribe(DROP_SHIP, () => (shipMoving = false));\n\n    return kontra.gameLoop({\n        update() {\n            virus.update();\n            player.update();\n            player.infect(virus);\n            if (shipMoving) {\n                moveCamera(map, player.direction);\n            }\n            users.update();\n            users.infect(virus);\n            bombs.update();\n        },\n        render() {\n            map.render();\n            users.render();\n            bombs.render();\n            player.render();\n            virus.render();\n            if (process.env.NODE_ENV === 'development') {\n                const now = performance.now();\n                while (times.length > 0 && times[0] <= now - 1000) {\n                    times.shift();\n                }\n                times.push(now);\n                fps = times.length;\n                const { row, col } = map.getRowAndCol({ x: 400, y: 300 });\n\n                // eslint-disable-next-line no-param-reassign\n                window.devbox.innerHTML = `${fps} fps – sx=${map.sx}, sy=${map.sy}, row=${row}, col=${col}`;\n            }\n        }\n    });\n};\n","import { playerSpeed } from '../../config.js';\nimport { N, E, S, W } from '../../directions/index.js';\n\nexport default (map, direction) => {\n    switch (direction) {\n        case N:\n            // eslint-disable-next-line no-param-reassign\n            map.sy -= playerSpeed;\n            break;\n        case E:\n            // eslint-disable-next-line no-param-reassign\n            map.sx += playerSpeed;\n            break;\n        case S:\n            // eslint-disable-next-line no-param-reassign\n            map.sy += playerSpeed;\n            break;\n        case W:\n            // eslint-disable-next-line no-param-reassign\n            map.sx -= playerSpeed;\n            break;\n        default:\n    }\n};\n","// prettier-ignore\nexport default [\n    0, 17,  0,  0,  0, 17,  0,  0,  0, 17,  0,  0,  0, 17,  0,  0,  0, 17,  0,  0,\n   20,  4, 11,  2,  1,  4,  2,  0,  0,  5, 11,  6, 11, 13,  0,  1, 11, 12,  2,  0,\n    0,  1, 11, 10,  9, 11, 13,  0,  0,  3,  0,  3,  0,  5, 11, 13,  0,  3,  3,  0,\n    0,  3,  1, 11,  6, 11, 10,  0,  1,  4,  2,  9, 11, 13,  0,  9, 11, 10,  3,  0,\n    0,  3,  3,  0,  3,  0,  0,  0,  3,  1, 13,  0,  0,  3,  0,  0,  0,  0,  5, 18,\n    0,  3,  3,  0, 14,  0,  1, 11, 10,  3,  9, 11,  6,  4, 11,  6,  2,  0,  3,  0,\n    0,  3,  3,  0,  3,  0,  3,  0,  0,  3,  0,  0,  3,  0,  0,  3,  3,  0,  3,  0,\n    0,  9, 13,  0,  5, 11, 10,  0,  0,  3,  1, 11, 10,  0,  0,  3,  3,  0,  3,  0,\n    0,  0,  3,  0,  3,  0,  0,  0,  1,  4, 10,  0,  0,  0,  0,  3,  5, 11,  4, 18,\n    0,  1, 13,  0,  5, 11,  2,  0,  3,  0,  1, 11, 11, 11, 11, 12, 10,  0,  0,  0,\n    0,  3,  3,  0,  3,  0,  5, 11, 13,  0,  9, 11,  2,  0,  0,  3,  0,  0,  1, 18,\n    0,  9, 10,  0,  5, 11, 10,  0,  9, 11, 11, 11, 12, 11,  6, 10,  0,  0,  3,  0,\n    0,  0,  0,  0,  3,  1, 11,  2,  1, 11, 11, 11, 10,  0,  3,  0,  1, 11,  4, 18,\n   20,  6,  6, 11, 10,  3,  0,  3,  3,  0,  0,  0,  1,  2,  9, 11, 12, 11,  2,  0,\n    0,  3,  3,  0,  0,  3,  0,  3,  3,  1, 11,  2,  3,  3,  0,  0,  3,  0,  3,  0,\n    0,  5,  4,  2,  0,  5, 11, 10,  3,  3,  0,  5, 12,  4, 11, 11, 13,  0,  5, 18,\n    0,  3,  0,  5, 11, 12, 11,  6, 10,  9,  6, 10,  3,  0,  0,  0,  9, 11, 10,  0,\n   20,  4, 11, 13,  0,  3,  0,  9, 11, 11, 13,  0,  9, 11,  6, 11,  6,  6, 11, 18,\n    0,  0,  0,  3,  0,  3,  0,  0,  0,  0,  5, 11, 11,  2,  3,  0,  3,  3,  0,  0,\n    0,  0,  0, 19,  0, 19,  0,  0,  0,  0, 19,  0,  0, 19,  9, 11, 10, 19,  0,  0\n];\n","/* eslint-disable no-param-reassign */\nimport { degreesToRadians as deg2rad } from '../../utils/index.js';\nimport { tileHeight, tileWidth, lightBlue } from '../../config.js';\n\nfunction calculatePointOnArc(deg, r) {\n    return [Math.cos(deg2rad(deg)) * r + 50, Math.sin(deg2rad(deg)) * r + 50];\n}\n\nexport default ({ ctx, row, col, deg, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.rotate(deg2rad(deg));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        ctx.moveTo(20, 50);\n        ctx.arc(50, 50, 30, deg2rad(180), deg2rad(190));\n        ctx.moveTo(...calculatePointOnArc(190, 30));\n        ctx.lineTo(10, 45);\n        ctx.lineTo(10, 35);\n        ctx.lineTo(-10, 40);\n        ctx.lineTo(...calculatePointOnArc(190, 70));\n        ctx.arc(50, 50, 70, deg2rad(190), deg2rad(180), true);\n        ctx.moveTo(50, 20);\n        ctx.arc(50, 50, 30, deg2rad(270), deg2rad(260), true);\n        ctx.moveTo(...calculatePointOnArc(260, 30));\n        ctx.lineTo(40, 10);\n        ctx.lineTo(45, 0);\n        ctx.lineTo(35, 0);\n        ctx.lineTo(...calculatePointOnArc(260, 70));\n        ctx.arc(50, 50, 70, deg2rad(260), deg2rad(270));\n    } else {\n        ctx.moveTo(20, 50);\n        ctx.arc(50, 50, 30, deg2rad(180), deg2rad(270));\n        ctx.moveTo(-20, 50);\n        ctx.arc(50, 50, 70, deg2rad(180), deg2rad(270));\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* creates canvas moveTo and lineTo commands from arrays; doing this mostly to save a couple of bytes */\nexport default (ctx, data) => data.forEach(([draw, x, y]) => ctx[draw ? 'lineTo' : 'moveTo'](x, y));\n","/* eslint-disable no-param-reassign */\nimport { tileWidth, tileHeight, lightBlue } from '../../config.js';\nimport { degreesToRadians as deg2rad } from '../../utils/index.js';\nimport { krakel } from './utils/index.js';\n\nexport default ({ ctx, row, col, deg, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.rotate(deg2rad(deg));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        krakel(ctx, [\n            [0, -20, 50],\n            [1, -20, 30],\n            [1, -10, 40],\n            [1, 0, 25],\n            [1, 10, 35],\n            [1, 20, 30],\n            [1, 20, 50],\n            [0, -20, -50],\n            [1, -20, -40],\n            [1, -10, -25],\n            [1, 0, -35],\n            [1, 10, -30],\n            [1, 20, -40],\n            [1, 20, -50]\n        ]);\n    } else {\n        krakel(ctx, [[0, -20, -50], [1, -20, 50], [0, 20, -50], [1, 20, 50]]);\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* eslint-disable no-param-reassign */\nimport { tileWidth, tileHeight, lightBlue } from '../../config.js';\nimport { degreesToRadians as deg2rad } from '../../utils/index.js';\nimport { krakel } from './utils/index.js';\n\nexport default ({ ctx, row, col, deg, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.rotate(deg2rad(deg));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        krakel(ctx, [\n            [0, 50, 20],\n            [1, 40, 20],\n            [1, 45, 10],\n            [1, 40, -10],\n            [1, 45, -20],\n            [1, 50, -20],\n            [0, 20, -50],\n            [1, 20, -35],\n            [1, 10, -40],\n            [1, 0, -30],\n            [1, -10, -40],\n            [1, -20, -35],\n            [1, -20, -50],\n            [0, -50, -20],\n            [1, -40, -20],\n            [1, -35, -10],\n            [1, -45, 0],\n            [1, -30, 10],\n            [1, -35, 20],\n            [1, -50, 20]\n        ]);\n    } else {\n        krakel(ctx, [\n            [0, -20, -50],\n            [1, -20, -20],\n            [1, -50, -20],\n            [0, 20, -50],\n            [1, 20, -20],\n            [1, 50, -20],\n            [0, -50, 20],\n            [1, 50, 20]\n        ]);\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* eslint-disable no-param-reassign */\nimport { tileWidth, tileHeight, lightBlue } from '../../config.js';\nimport { krakel } from './utils/index.js';\n\nexport default ({ ctx, row, col, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        krakel(ctx, [\n            [0, -20, 50],\n            [1, -20, 45],\n            [1, -10, 40],\n            [1, 0, 45],\n            [1, 10, 35],\n            [1, 20, 40],\n            [1, 20, 50],\n            [0, 50, 20],\n            [1, 40, 20],\n            [1, 45, 10],\n            [1, 40, -10],\n            [1, 45, -20],\n            [1, 50, -20],\n            [0, 20, -50],\n            [1, 20, -35],\n            [1, 10, -40],\n            [1, 0, -30],\n            [1, -10, -40],\n            [1, -20, -35],\n            [1, -20, -50],\n            [0, -50, -20],\n            [1, -40, -20],\n            [1, -35, -10],\n            [1, -45, 0],\n            [1, -30, 10],\n            [1, -35, 20],\n            [1, -50, 20]\n        ]);\n    } else {\n        krakel(ctx, [\n            [0, -20, -50],\n            [1, -20, -20],\n            [1, -50, -20],\n            [0, 20, -50],\n            [1, 20, -20],\n            [1, 50, -20],\n            [0, -50, 20],\n            [1, -20, 20],\n            [1, -20, 50],\n            [0, 50, 20],\n            [1, 20, 20],\n            [1, 20, 50]\n        ]);\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* eslint-disable no-param-reassign */\nimport { tileWidth, tileHeight, lightBlue } from '../../config.js';\nimport { krakel } from './utils/index.js';\n\nexport default ({ ctx, row, col, broken }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    krakel(ctx, [\n        [0, 30, -48],\n        [1, 48, -30],\n        [1, 48, 30],\n        [1, 30, 48],\n        [1, -30, 48],\n        [1, -48, 30],\n        [1, -48, -30],\n        [1, -30, -48],\n        [1, 30, -48]\n    ]);\n    ctx.stroke();\n    if (broken) {\n        ctx.lineWidth = 2;\n        krakel(ctx, [\n            [0, 10, -48],\n            [1, 0, -40],\n            [0, 24, -48],\n            [1, 20, -30],\n            [0, 48, -27],\n            [1, 20, -20],\n            [0, -10, -30],\n            [1, 10, -30],\n            [1, 30, -10],\n            [1, 20, 0],\n            [1, 10, 0],\n            [0, 48, 7],\n            [1, 30, 10],\n            [0, 20, 0],\n            [1, 30, 10],\n            [1, 10, 20],\n            [0, 30, 48],\n            [1, 30, 30],\n            [1, 10, 30],\n            [0, 20, 20],\n            [1, 20, 30],\n            [0, -10, 48],\n            [1, -10, 20],\n            [1, 0, 10],\n            [0, -20, 0],\n            [1, -20, 20],\n            [1, -10, 30],\n            [0, -30, 48],\n            [1, -20, 40],\n            [1, -20, 30],\n            [0, -30, 30],\n            [1, -20, 40],\n            [0, -48, 20],\n            [1, -30, 20],\n            [0, -40, 20],\n            [1, -40, 10],\n            [0, -48, 0],\n            [1, -30, 0],\n            [1, -20, -10],\n            [0, -40, 0],\n            [1, -30, 10],\n            [0, -48, -17],\n            [1, -40, -30],\n            [1, -30, -20],\n            [0, -30, -48],\n            [1, -10, -20],\n            [1, -10, -10],\n            [0, -20, -30],\n            [1, -20, -20],\n            [1, -30, -10]\n        ]);\n        ctx.stroke();\n    }\n    ctx.restore();\n};\n","/* eslint-disable no-param-reassign */\nimport { tileWidth, tileHeight, lightBlue } from '../../config.js';\nimport { degreesToRadians as deg2rad } from '../../utils/index.js';\nimport { krakel } from './utils/index.js';\n\nexport default ({ ctx, row, col, deg, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.rotate(deg2rad(deg));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        krakel(ctx, [[0, -20, 50], [1, -20, 40], [1, -10, 45], [1, 0, 35], [1, 10, 45], [1, 20, 40], [1, 20, 50]]);\n    } else {\n        krakel(ctx, [[0, -20, 50], [1, -20, 0], [1, 20, 0], [1, 20, 50]]);\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* global kontra */\n\n/**\n * A tile engine for rendering tilesets. Works well with the tile engine program Tiled.\n * @memberof kontra\n *\n * @param {object} properties - Properties of the tile engine.\n * @param {number} [properties.tileWidth=32] - Width of a tile.\n * @param {number} [properties.tileHeight=32] - Height of a tile.\n * @param {number} properties.width - Width of the map (in tiles).\n * @param {number} properties.height - Height of the map (in tiles).\n * @param {number} [properties.x=0] - X position to draw.\n * @param {number} [properties.y=0] - Y position to draw.\n * @param {number} [properties.sx=0] - X position to clip the tileset.\n * @param {number} [properties.sy=0] - Y position to clip the tileset.\n * @param {Context} [properties.context=kontra.context] - Provide a context for the tile engine to draw on.\n */\nexport default (properties = {}) => {\n    if (process.env.NODE_ENV === 'development' && (!properties.width || !properties.height)) {\n        throw Error('You must provide width and height properties');\n    }\n\n    const width = properties.width;\n    const height = properties.height;\n\n    // size of the tiles. Most common tile size on opengameart.org seems to be 32x32,\n    // followed by 16x16\n    // Tiled names the property tilewidth and tileheight\n    const tileWidth = properties.tileWidth || 32;\n    const tileHeight = properties.tileHeight || 32;\n\n    const mapWidth = width * tileWidth;\n    const mapHeight = height * tileHeight;\n\n    const context = properties.context || kontra.context;\n    const canvasWidth = context.canvas.width;\n    const canvasHeight = context.canvas.height;\n\n    // create an off-screen canvas for pre-rendering the map\n    // @see http://jsperf.com/render-vs-prerender\n    const offscreenCanvas = document.createElement('canvas');\n    const offscreenContext = offscreenCanvas.getContext('2d');\n\n    // when clipping an image, sx and sy must within the image region, otherwise\n    // Firefox and Safari won't draw it.\n    // @see http://stackoverflow.com/questions/19338032/canvas-indexsizeerror-index-or-size-is-negative-or-greater-than-the-allowed-a\n    const sxMax = Math.max(0, mapWidth - canvasWidth);\n    const syMax = Math.max(0, mapHeight - canvasHeight);\n\n    let _sx, _sy;\n\n    // draw order of layers (by name)\n    const layerOrder = [];\n\n    const tileEngine = {\n        width,\n        height,\n\n        tileWidth,\n        tileHeight,\n\n        mapWidth,\n        mapHeight,\n\n        context,\n\n        x: properties.x || 0,\n        y: properties.y || 0,\n\n        tilesets: [],\n        layers: {},\n\n        /**\n         * Add an tileset for the tile engine to use.\n         * @memberof kontra.tileEngine\n         */\n        addTilesets: function addTilesets(tilesets) {\n            [].concat(tilesets).forEach(tileset => {\n                const tilesetImage = tileset.image;\n                let image, firstGrid, lastTileset, tiles;\n\n                // @see https://github.com/jed/140bytes/wiki/Byte-saving-techniques#coercion-to-test-for-types\n                if (`${tilesetImage}` === tilesetImage) {\n                    let i = Infinity;\n\n                    while (i >= 0) {\n                        i = tilesetImage.lastIndexOf('/', i);\n                        const path = i < 0 ? tilesetImage : tilesetImage.substr(i);\n\n                        if (kontra.assets.images[path]) {\n                            image = kontra.assets.images[path];\n                            break;\n                        }\n\n                        i--;\n                    }\n                } else {\n                    image = tilesetImage;\n                }\n\n                firstGrid = tileset.firstGrid;\n\n                // if the width or height of the provided image is smaller than the tile size,\n                // default calculation to 1\n                const numTiles = ((image.width / tileWidth) | 0 || 1) * ((image.height / tileHeight) | 0 || 1);\n\n                if (!firstGrid) {\n                    // only calculate the first grid if the tile map has a tileset already\n                    if (tileEngine.tilesets.length > 0) {\n                        lastTileset = tileEngine.tilesets[tileEngine.tilesets.length - 1];\n                        tiles =\n                            ((lastTileset.image.width / tileWidth) | 0) * ((lastTileset.image.height / tileHeight) | 0);\n\n                        firstGrid = lastTileset.firstGrid + tiles;\n                    }\n                    // otherwise this is the first tile added to the tile map\n                    else {\n                        firstGrid = 1;\n                    }\n                }\n\n                tileEngine.tilesets.push({\n                    firstGrid,\n                    lastGrid: firstGrid + numTiles - 1,\n                    image\n                });\n\n                // sort the tile map so we can perform a binary search when drawing\n                tileEngine.tilesets.sort((a, b) => a.firstGrid - b.firstGrid);\n            });\n        },\n\n        /**\n         * Add a layer to the tile engine.\n         * @memberof kontra.tileEngine\n         */\n        addLayers: function addLayers(layers) {\n            [].concat(layers).forEach(layer => {\n                // eslint-disable-next-line no-param-reassign\n                layer.render = layer.render === undefined ? true : layer.render;\n\n                let data, row, c, value;\n\n                // flatten a 2D array into a single array\n                if (Array.isArray(layer.data[0])) {\n                    data = [];\n\n                    // eslint-disable-next-line no-cond-assign\n                    for (let r = 0; (row = layer.data[r]); r++) {\n                        for (c = 0; c < width; c++) {\n                            data.push(row[c] || 0);\n                        }\n                    }\n                } else {\n                    data = layer.data;\n                }\n\n                tileEngine.layers[layer.name] = {\n                    data,\n                    zIndex: layer.zIndex || 0,\n                    render: layer.render\n                };\n\n                // merge properties of layer onto layer object\n                for (const prop in layer.properties) {\n                    if (layer.properties.hasOwnProperty(prop)) {\n                        value = layer.properties[prop];\n\n                        try {\n                            value = JSON.parse(value);\n                        } catch (e) {\n                            /* intentionally empty */\n                        }\n\n                        tileEngine.layers[layer.name][prop] = value;\n                    }\n                }\n\n                // only add the layer to the layer order if it should be drawn\n                if (tileEngine.layers[layer.name].render) {\n                    layerOrder.push(layer.name);\n\n                    layerOrder.sort((a, b) => tileEngine.layers[a].zIndex - tileEngine.layers[b].zIndex);\n                }\n            });\n\n            preRenderImage();\n        },\n\n        changeTile(layerId, position, tile) {\n            const dataIndex = getIndex(position);\n            const layer = tileEngine.layers[layerId];\n            layer.data[dataIndex] = tile;\n            renderTile(layer, dataIndex, true);\n        },\n\n        /**\n         * Get the tile from the specified layer at x, y or row, col.\n         * @memberof kontra.tileEngine\n         *\n         * @param {string} name - Name of the layer.\n         * @param {object} position - Position of the tile in either x, y or row, col.\n         * @param {number} position.x - X coordinate of the tile.\n         * @param {number} position.y - Y coordinate of the tile.\n         * @param {number} position.row - Row of the tile.\n         * @param {number} position.col - Col of the tile.\n         *\n         * @returns {number}\n         */\n        tileAtLayer(name, position) {\n            const index = getIndex(position);\n\n            if (index >= 0) {\n                return tileEngine.layers[name].data[index];\n            }\n            return undefined;\n        },\n\n        /**\n         * Render the pre-rendered canvas.\n         * @memberof kontra.tileEngine\n         */\n        render() {\n            tileEngine.context.drawImage(\n                offscreenCanvas,\n                tileEngine.sx,\n                tileEngine.sy,\n                canvasWidth,\n                canvasHeight,\n                tileEngine.x,\n                tileEngine.y,\n                canvasWidth,\n                canvasHeight\n            );\n        },\n\n        /**\n         * Render a specific layer.\n         * @memberof kontra.tileEngine\n         *\n         * @param {string} name - Name of the layer to render.\n         */\n        renderLayer: function renderLayer(name) {\n            const layer = tileEngine.layers[name];\n\n            // calculate the starting tile\n            let row = tileEngine.getRow();\n            const col = tileEngine.getCol();\n            let index = getIndex({ row, col });\n\n            // calculate where to start drawing the tile relative to the drawing canvas\n            const startX = col * tileWidth - tileEngine.sx;\n            const startY = row * tileHeight - tileEngine.sy;\n\n            // calculate how many tiles the drawing canvas can hold\n            const viewWidth = Math.min(Math.ceil(canvasWidth / tileWidth) + 1, width);\n            const viewHeight = Math.min(Math.ceil(canvasHeight / tileHeight) + 1, height);\n            const numTiles = viewWidth * viewHeight;\n\n            let count = 0;\n            let x, y, tile, tileset, image, tileOffset, w, sx, sy;\n\n            // draw just enough of the layer to fit inside the drawing canvas\n            while (count < numTiles) {\n                tile = layer.data[index];\n\n                if (tile) {\n                    tileset = getTileset(tile);\n                    image = tileset.image;\n\n                    x = startX + (count % viewWidth) * tileWidth;\n                    y = startY + ((count / viewWidth) | 0) * tileHeight;\n\n                    tileOffset = tile - tileset.firstGrid;\n                    w = image.width / tileWidth;\n\n                    sx = (tileOffset % w) * tileWidth;\n                    sy = ((tileOffset / w) | 0) * tileHeight;\n\n                    tileEngine.context.drawImage(image, sx, sy, tileWidth, tileHeight, x, y, tileWidth, tileHeight);\n                }\n\n                if (++count % viewWidth === 0) {\n                    index = col + ++row * width;\n                } else {\n                    index++;\n                }\n            }\n        },\n\n        getRowAndCol({ x, y }) {\n            return {\n                row: this.getRow(y),\n                col: this.getCol(x)\n            };\n        },\n\n        getXAndY({ row, col, mapX, mapY }) {\n            return {\n                x: (col ? col * tileWidth : mapX) - tileEngine.sx + tileWidth / 2,\n                y: (row ? row * tileHeight : mapY) - tileEngine.sy + tileHeight / 2\n            };\n        },\n\n        /**\n         * Get the row from the y coordinate.\n         * @memberof kontra.tileEngine\n         *\n         * @param {number} y - Y coordinate.\n         *\n         * @return {number}\n         */\n        getRow(y = 0) {\n            return ((tileEngine.sy + y) / tileHeight) | 0;\n        },\n\n        /**\n         * Get the col from the x coordinate.\n         * @memberof kontra.tileEngine\n         *\n         * @param {number} x - X coordinate.\n         *\n         * @return {number}\n         */\n        getCol(x = 0) {\n            return ((tileEngine.sx + x) / tileWidth) | 0;\n        },\n\n        get sx() {\n            return _sx;\n        },\n\n        get sy() {\n            return _sy;\n        },\n\n        // ensure sx and sy are within the image region\n        set sx(value) {\n            _sx = Math.min(Math.max(0, value), sxMax);\n        },\n\n        set sy(value) {\n            _sy = Math.min(Math.max(0, value), syMax);\n        }\n    };\n\n    // set here so we use setter function\n    tileEngine.sx = properties.sx || 0;\n    tileEngine.sy = properties.sy || 0;\n\n    // make the off-screen canvas the full size of the map\n    offscreenCanvas.width = mapWidth;\n    offscreenCanvas.height = mapHeight;\n\n    // merge properties of the tile engine onto the tile engine itself\n    for (const prop in properties.properties) {\n        if (properties.properties.hasOwnProperty(prop)) {\n            let value = properties.properties[prop];\n\n            try {\n                value = JSON.parse(value);\n            } catch (e) {\n                /* intentionally empty */\n            }\n\n            // passed in properties override properties.properties\n            tileEngine[prop] = tileEngine[prop] || value;\n        }\n    }\n\n    if (properties.tilesets) {\n        tileEngine.addTilesets(properties.tilesets);\n    }\n\n    if (properties.layers) {\n        tileEngine.addLayers(properties.layers);\n    }\n\n    /**\n     * Get the index of the x, y or row, col.\n     * @memberof kontra.tileEngine\n     * @private\n     *\n     * @param {number} position.x - X coordinate of the tile.\n     * @param {number} position.y - Y coordinate of the tile.\n     * @param {number} position.row - Row of the tile.\n     * @param {number} position.col - Col of the tile.\n     *\n     * @return {number} Returns the tile index or -1 if the x, y or row,\n     *         col is outside the dimensions of the tile engine.\n     */\n    function getIndex(position) {\n        let row, col;\n\n        if (typeof position.x !== 'undefined' && typeof position.y !== 'undefined') {\n            row = tileEngine.getRow(position.y);\n            col = tileEngine.getCol(position.x);\n        } else {\n            row = position.row;\n            col = position.col;\n        }\n\n        // don't calculate out of bound numbers\n        if (row < 0 || col < 0 || row >= height || col >= width) {\n            return -1;\n        }\n\n        return col + row * width;\n    }\n\n    /**\n     * Modified binary search that will return the tileset associated with the tile\n     * @memberof kontra.tileEngine\n     * @private\n     *\n     * @param {number} tile - Tile grid.\n     *\n     * @return {object}\n     */\n    function getTileset(tile) {\n        let min = 0;\n        let max = tileEngine.tilesets.length - 1;\n        let index, currTile;\n\n        while (min <= max) {\n            index = ((min + max) / 2) | 0;\n            currTile = tileEngine.tilesets[index];\n\n            if (tile >= currTile.firstGrid && tile <= currTile.lastGrid) {\n                return currTile;\n            } else if (currTile.lastGrid < tile) {\n                min = index + 1;\n            } else {\n                max = index - 1;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Pre-render the tiles to make drawing fast.\n     * @memberof kontra.tileEngine\n     * @private\n     */\n    function preRenderImage() {\n        // draw each layer in order\n        // eslint-disable-next-line no-cond-assign\n        for (let layerIndex = 0, layer; (layer = tileEngine.layers[layerOrder[layerIndex]]); layerIndex++) {\n            for (let dataIndex = 0, len = layer.data.length; dataIndex < len; dataIndex++) {\n                renderTile(layer, dataIndex);\n            }\n        }\n    }\n\n    function renderTile(layer, dataIndex, clear = false) {\n        const tile = layer.data[dataIndex];\n\n        // skip empty tiles (0)\n        if (!tile) {\n            return;\n        }\n\n        const tileset = getTileset(tile);\n        const image = tileset.image;\n\n        const x = (dataIndex % width) * tileWidth;\n        const y = ((dataIndex / width) | 0) * tileHeight;\n\n        const tileOffset = tile - tileset.firstGrid;\n        const w = image.width / tileWidth;\n\n        const sx = (tileOffset % w) * tileWidth;\n        const sy = ((tileOffset / w) | 0) * tileHeight;\n\n        if (clear) {\n            offscreenContext.clearRect(x, y, tileWidth, tileHeight);\n        }\n        offscreenContext.drawImage(image, sx, sy, tileWidth, tileHeight, x, y, tileWidth, tileHeight);\n    }\n\n    return tileEngine;\n};\n","/* global kontra */\n\nimport {\n    tileHeight,\n    tileWidth,\n    mapHeight as height,\n    mapWidth as width,\n    mapPadding,\n    playerStartCol,\n    playerStartRow\n} from '../config.js';\nimport { calculateCameraCoordinates } from '../utils/index.js';\nimport mapData from './mapData.js';\nimport { addPadding } from './utils/index.js';\nimport { createTilesheet } from './tilesheet/index.js';\nimport { createTileEngine } from '../tileEngine/index.js';\n\nexport default async () => {\n    const { sx, sy } = calculateCameraCoordinates({ col: playerStartCol, row: playerStartRow });\n    const map = createTileEngine({\n        // tile size\n        tileWidth,\n        tileHeight,\n\n        // map size in tiles\n        width: width + mapPadding * 2,\n        height: height + mapPadding * 2,\n\n        sx,\n        sy\n    });\n\n    const paddedMap = addPadding(mapData, width, height, mapPadding);\n    const image = await createTilesheet();\n    map.addTilesets({ image });\n    // map.addTilesets({ image: kontra.assets.images.tilesheet });\n    map.addLayers([\n        {\n            name: 'main',\n            data: paddedMap\n        }\n        // {\n        //     name: 'debug',\n        //     data: new Array(paddedMap.length).fill(0)\n        // }\n        // {\n        //     name: 'grid',\n        //     data: new Array(paddedMap.length).fill(8)\n        // }\n    ]);\n    return map;\n};\n","export default (arr, w, h, pad) => {\n    const retVal = [];\n    let idx = 0;\n    for (let row = 0; row < h + pad * 2; row++) {\n        for (let col = 0; col < w + pad * 2; col++) {\n            if (row < pad || row >= pad + h || col < pad || col >= pad + w) {\n                retVal.push(0);\n                continue;\n            }\n            retVal.push(arr[idx++]);\n        }\n    }\n    return retVal;\n};\n","import { tileHeight, tileWidth } from '../../config.js';\nimport { drawCurve, drawStraight, drawTSection, drawCrossing, drawServer, drawTerminus } from './index.js';\n\n// will be removed by tree shaking\nimport drawDebugGrid from './drawDebugGrid.js';\n\nexport default () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 8 * tileWidth;\n    canvas.height = 8 * tileHeight;\n    const ctx = canvas.getContext('2d');\n    drawCurve({ ctx, row: 1, col: 1, deg: 0 });\n    drawCurve({ ctx, row: 1, col: 2, deg: 90 });\n    drawCurve({ ctx, row: 2, col: 1, deg: 270 });\n    drawCurve({ ctx, row: 2, col: 2, deg: 180 });\n    drawStraight({ ctx, row: 1, col: 3, deg: 0 });\n    drawStraight({ ctx, row: 2, col: 3, deg: 90 });\n    drawTSection({ ctx, row: 1, col: 4, deg: 0 });\n    drawTSection({ ctx, row: 1, col: 5, deg: 90 });\n    drawTSection({ ctx, row: 1, col: 6, deg: 180 });\n    drawTSection({ ctx, row: 2, col: 5, deg: 270 });\n    drawCrossing({ ctx, row: 2, col: 4 });\n    drawTerminus({ ctx, row: 3, col: 1, deg: 0 });\n    drawTerminus({ ctx, row: 3, col: 2, deg: 90 });\n    drawTerminus({ ctx, row: 3, col: 3, deg: 180 });\n    drawTerminus({ ctx, row: 3, col: 4, deg: 270 });\n    drawServer({ ctx, row: 2, col: 6 });\n    drawCurve({ ctx, row: 4, col: 1, deg: 0, broken: true });\n    drawCurve({ ctx, row: 4, col: 2, deg: 90, broken: true });\n    drawCurve({ ctx, row: 5, col: 1, deg: 270, broken: true });\n    drawCurve({ ctx, row: 5, col: 2, deg: 180, broken: true });\n    drawStraight({ ctx, row: 4, col: 3, deg: 0, broken: true });\n    drawStraight({ ctx, row: 5, col: 3, deg: 90, broken: true });\n    drawTSection({ ctx, row: 4, col: 4, deg: 0, broken: true });\n    drawTSection({ ctx, row: 4, col: 5, deg: 90, broken: true });\n    drawTSection({ ctx, row: 4, col: 6, deg: 180, broken: true });\n    drawTSection({ ctx, row: 5, col: 5, deg: 270, broken: true });\n    drawCrossing({ ctx, row: 5, col: 4, broken: true });\n    drawTerminus({ ctx, row: 6, col: 1, deg: 0, broken: true });\n    drawTerminus({ ctx, row: 6, col: 2, deg: 90, broken: true });\n    drawTerminus({ ctx, row: 6, col: 3, deg: 180, broken: true });\n    drawTerminus({ ctx, row: 6, col: 4, deg: 270, broken: true });\n    drawServer({ ctx, row: 5, col: 6, broken: true });\n\n    if (process.env.NODE_ENV === 'development') {\n        drawDebugGrid({ ctx, row: 1, col: 8 });\n    }\n\n    const image = new Image();\n    image.src = canvas.toDataURL('image/png');\n    // document.getElementById('wrapper').appendChild(image);\n    return new Promise(resolve => setTimeout(() => resolve(image), 100));\n};\n","class MessageBox {\n    constructor() {\n        this.timeoutHandler = null;\n        this.div = document.createElement('div');\n        this.div.style.cssText = `\nbackground-color: rgba(0,0,0,0);\nfont-size: 3em;\nfont-weight: bold;\nalign-items: center;\njustify-content: center;\ndisplay: flex;\ncolor: rgba(255,255,255,0);\nposition: absolute;\ntop: 0;\nleft:0;\nwidth: 100vw;\nheight: 100vh;\ntext-align: center;\npointer-events: none;\ntransition: background-color 3s ease-out, color 3s ease-out;\ntext-transform: uppercase;\nfont-family: monospace;\n    `;\n        const wrapper = document.getElementById('wrapper');\n        wrapper.appendChild(this.div);\n    }\n\n    show(message) {\n        clearTimeout(this.timeoutHandler);\n        this.div.style.transition = '3s';\n        this.div.innerHTML = `<div>${message}</div>`;\n        this.div.style.backgroundColor = 'rgba(0,0,0,0.5)';\n        this.div.style.color = 'rgba(255,255,255,1)';\n    }\n\n    flash(message) {\n        clearTimeout(this.timeoutHandler);\n        this.div.style.transition = '0.5s';\n        this.div.innerHTML = `<div>${message}</div>`;\n        this.div.style.color = 'rgba(255,255,255,1)';\n        this.timeoutHandler = setTimeout(() => (this.div.style.color = 'rgba(255,255,255,0)'), 500);\n    }\n}\nexport default new MessageBox();\n","/* global kontra */\n\nimport { drawPlayer, updatePlayer } from './index.js';\nimport { canvasHeight, canvasWidth, playerStartDirection, collisionRadius } from '../config.js';\nimport { pubsub, GAME_OVER, DROP_SHIP } from '../pubsub/index.js';\nimport { collides } from '../utils/index.js';\nimport { messageBox } from '../messageBox/index.js';\n\nexport default map => {\n    const player = {\n        context: kontra.context,\n        x: canvasWidth / 2,\n        y: canvasHeight / 2,\n        collisionRadius,\n        map,\n        infected: false,\n        gameOver: false,\n        direction: playerStartDirection,\n        nextDirection: null,\n        dropBomb: false,\n        scale: 1,\n        dropping: false,\n        bombCoolingDown: false,\n\n        update() {\n            ({\n                nextDirection: this.nextDirection,\n                direction: this.direction,\n                dropBomb: this.dropBomb,\n                scale: this.scale,\n                bombCoolingDown: this.bombCoolingDown\n            } = updatePlayer(this, pubsub, messageBox));\n        },\n\n        render() {\n            drawPlayer(this);\n        },\n\n        infect(virus) {\n            if (collides(virus, this)) {\n                // eslint-disable-next-line no-param-reassign\n                this.infected = true;\n                if (!this.gameOver) {\n                    messageBox.show('player infected<br>game over');\n                    pubsub.publish(GAME_OVER);\n                }\n            }\n        }\n    };\n\n    pubsub.subscribe(GAME_OVER, () => (player.gameOver = true));\n    pubsub.subscribe(DROP_SHIP, () => (player.dropping = true));\n\n    return player;\n};\n","import { lightGreen, darkGreen, lightRed, darkRed } from '../config.js';\nimport { calculateRotation } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, direction, infected, scale } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.scale(scale, scale);\n    ctx.rotate(calculateRotation(direction));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = infected ? lightRed : lightGreen;\n    ctx.fillStyle = infected ? darkRed : darkGreen;\n    ctx.beginPath();\n    ctx.moveTo(-15, 25);\n    ctx.lineTo(0, -25);\n    ctx.lineTo(15, 25);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n};\n","import { degreesToRadians } from './index.js';\nimport { N, E, S, W } from '../directions/index.js';\n\nexport default direction => {\n    switch (direction) {\n        case N:\n            return degreesToRadians(0);\n        case E:\n            return degreesToRadians(90);\n        case S:\n            return degreesToRadians(180);\n        case W:\n            return degreesToRadians(270);\n        default:\n            return null;\n    }\n};\n","import { directionIsAllowed, switchDirection } from '../directions/index.js';\nimport { pubsub, DROP_BOMB, DROP_SHIP, GAME_OVER } from '../pubsub/index.js';\nimport { getKey, isInTheMiddle } from './utils/index.js';\nimport { messageBox } from '../messageBox/index.js';\nimport { bombCooldown } from '../config.js';\n\nexport default sprite => {\n    let { nextDirection, direction, dropBomb, scale, bombCoolingDown } = sprite;\n    const { dropping, map, gameOver, x, y } = sprite;\n    if (dropping) {\n        if (scale > 0) {\n            scale -= 0.01;\n        } else {\n            messageBox.show('You fell into the abyss<br>Game over');\n            pubsub.publish(GAME_OVER);\n        }\n        return { direction, nextDirection, dropBomb, scale, bombCoolingDown };\n    }\n    if (!gameOver) {\n        ({ nextDirection, dropBomb } = getKey(sprite));\n        if (bombCoolingDown) {\n            dropBomb = false;\n        }\n    }\n    if (!isInTheMiddle({ x: map.sx, y: map.sy })) {\n        return { direction, nextDirection, dropBomb, scale, bombCoolingDown };\n    }\n    if (nextDirection && directionIsAllowed(map, { x, y }, nextDirection)) {\n        direction = nextDirection;\n        nextDirection = null;\n    } else {\n        try {\n            direction = switchDirection(map, { x, y }, direction);\n        } catch ({ message }) {\n            if (message === 'dropped') {\n                pubsub.publish(DROP_SHIP);\n            }\n        }\n    }\n    if (dropBomb) {\n        pubsub.publish(DROP_BOMB, map.getRowAndCol({ x, y }));\n        dropBomb = false;\n        bombCoolingDown = true;\n        setTimeout(() => {\n            // eslint-disable-next-line no-param-reassign\n            sprite.bombCoolingDown = false;\n        }, bombCooldown);\n    }\n    return { direction, nextDirection, dropBomb, scale, bombCoolingDown };\n};\n","/* global kontra */\n\nimport { N, E, S, W } from '../../directions/index.js';\n\nexport default sprite => {\n    let { nextDirection, dropBomb } = sprite;\n    if (kontra.keys.pressed('right')) {\n        nextDirection = E;\n    }\n    if (kontra.keys.pressed('left')) {\n        nextDirection = W;\n    }\n    if (kontra.keys.pressed('up')) {\n        nextDirection = N;\n    }\n    if (kontra.keys.pressed('down')) {\n        nextDirection = S;\n    }\n    if (kontra.keys.pressed('space')) {\n        dropBomb = true;\n    }\n    return { nextDirection, dropBomb };\n};\n","import { tileHeight, tileWidth } from '../../config.js';\n\nexport default ({ x, y }) => (x - tileWidth / 2) % tileWidth === 0 && (y - tileHeight / 2) % tileHeight === 0;\n","export default (predecessors, end) => {\n    const nodes = [];\n    let u = end;\n\n    while (u !== undefined) {\n        nodes.push(u);\n        u = predecessors.get(u);\n    }\n\n    nodes.reverse();\n    return nodes;\n};\n","import { findPaths, extractShortest } from './index.js';\n\nexport default (graph, nodes) => {\n    let start = nodes.shift();\n    const path = [];\n    let end, predecessors, shortest;\n\n    while (nodes.length) {\n        end = nodes.shift();\n        predecessors = findPaths(graph, start, end);\n\n        if (predecessors) {\n            shortest = extractShortest(predecessors, end);\n            if (nodes.length) {\n                path.push.apply(path, shortest.slice(0, -1));\n            } else {\n                return path.concat(shortest);\n            }\n        } else {\n            return null;\n        }\n\n        start = end;\n    }\n    return null;\n};\n","export default (data, start, end) => {\n    const costs = new Map([[start, 0]]);\n    const open = new Map([[0, [start]]]);\n    const predecessors = new Map();\n\n    function addToOpen(cost, vertex) {\n        let vertices = open.get(cost);\n        if (!vertices) {\n            vertices = [];\n            open.set(cost, vertices);\n        }\n        vertices.push(vertex);\n    }\n\n    while (open.size > 0) {\n        const currentCost = Array.from(open.keys()).sort((a, b) => a - b)[0];\n\n        const bucket = open.get(currentCost);\n        const node = bucket.shift();\n        const adjacentNodes = data.get(node) || new Map();\n\n        if (bucket.length === 0) {\n            open.delete(currentCost);\n        }\n\n        for (const [vertex, cost] of adjacentNodes) {\n            const totalCost = cost + currentCost;\n            const vertexCost = costs.get(vertex);\n\n            if (vertexCost === undefined || vertexCost > totalCost) {\n                costs.set(vertex, totalCost);\n                addToOpen(totalCost, vertex);\n                predecessors.set(vertex, node);\n            }\n        }\n    }\n\n    return costs.get(end) === undefined ? null : predecessors;\n};\n","import { getNodeByCoords, initGraphAndAllowed } from './index.js';\nimport { N, S, W, E } from '../../directions/index.js';\n\nexport default ({ width, layers }, layer) => {\n    const { graph, allowed } = initGraphAndAllowed(layers[layer].data, width);\n    for (const [node, adjacent] of graph) {\n        const currAllowed = allowed.get(node);\n        const { row, col } = node;\n        let target;\n        for (const dir of currAllowed) {\n            switch (dir) {\n                case N:\n                    target = getNodeByCoords(graph, { row: row - 1, col });\n                    if (target) {\n                        adjacent.set(target, 1);\n                    }\n                    break;\n                case E:\n                    target = getNodeByCoords(graph, { row, col: col + 1 });\n                    if (target) {\n                        adjacent.set(target, 1);\n                    }\n                    break;\n                case S:\n                    target = getNodeByCoords(graph, { row: row + 1, col });\n                    if (target) {\n                        adjacent.set(target, 1);\n                    }\n                    break;\n                case W:\n                    target = getNodeByCoords(graph, { row, col: col - 1 });\n                    if (target) {\n                        adjacent.set(target, 1);\n                    }\n                    break;\n                default:\n            }\n        }\n    }\n    return graph;\n};\n","export default (graph, { row, col }) => {\n    for (const [node] of graph) {\n        if (row === node.row && col === node.col) {\n            return node;\n        }\n    }\n    return null;\n};\n","import { directionSwitchMap } from '../../directions/index.js';\nimport { isValidTile } from '../../utils/index.js';\n\nexport default (layerData, width) => {\n    const graph = new Map();\n    const allowed = new Map();\n    let row = 0;\n    let col = 0;\n    let index = 0;\n    for (const tile of layerData) {\n        if (isValidTile(tile)) {\n            const node = { row, col };\n            allowed.set(node, directionSwitchMap[tile].allowed);\n            graph.set(node, new Map());\n        }\n        if (++index % width === 0) {\n            row++;\n            col = 0;\n        } else {\n            col++;\n        }\n    }\n    return { graph, allowed };\n};\n","import { findShortestPath, convertMapToGraph, getNodeByCoords } from './utils/index.js';\n\nexport class Pathfinder {\n    constructor(graph = null) {\n        this.graph = graph;\n    }\n\n    setDataFromMap(map, layer) {\n        this.graph = convertMapToGraph(map, layer);\n    }\n\n    getNodeByCoords(coords) {\n        return getNodeByCoords(this.graph, coords);\n    }\n\n    findShortestPath(...args) {\n        if (process.env.NODE_ENV === 'development' && !this.graph) {\n            throw new Error('You forgot to set a graph for the pathfinder before trying to use it to find a path');\n        }\n        return findShortestPath(this.graph, args);\n    }\n\n    isReachable(a, b) {\n        const shortestPath = this.findShortestPathByCoords(a, b);\n        return shortestPath !== null;\n    }\n\n    findShortestPathByCoords(...args) {\n        return this.findShortestPath(...args.map(coords => this.getNodeByCoords(coords)));\n    }\n}\n\nexport default new Pathfinder();\n","/* global kontra */\n\nimport { drawUser, INFECTED } from './index.js';\nimport { tileWidth, tileHeight, collisionRadius } from '../config.js';\nimport { ONLINE } from './index.js';\nimport { pubsub, INFECTED as INFECTED_EVENT } from '../pubsub/index.js';\n\nexport default ({ map, row, col }) => {\n    const { x, y } = map.getXAndY({ row, col });\n    return {\n        context: kontra.context,\n        x,\n        y,\n        collisionRadius,\n        infected: false,\n        map,\n        mapX: col * tileWidth,\n        mapY: row * tileHeight,\n        row,\n        col,\n        status: ONLINE,\n        update() {\n            ({ x: this.x, y: this.y } = map.getXAndY({ mapX: this.mapX, mapY: this.mapY }));\n        },\n        render() {\n            drawUser(this);\n        },\n        infect() {\n            this.status = INFECTED;\n            pubsub.publish(INFECTED_EVENT);\n        }\n    };\n};\n","export const ONLINE = 0;\nexport const OFFLINE = 1;\nexport const INFECTED = 2;\n","/* global kontra */\nimport { lightBlue, darkBlue, lightGreen, darkGreen, lightRed, darkRed } from '../config.js';\nimport { ONLINE, OFFLINE, INFECTED } from './constants.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\n\nconst spriteMapping = {\n    [ONLINE]: { fg: lightBlue, bg: darkBlue },\n    [OFFLINE]: { fg: lightGreen, bg: darkGreen },\n    [INFECTED]: { fg: lightRed, bg: darkRed }\n};\n\nexport default sprite => {\n    const { context: ctx, x, y, status } = sprite;\n    const { fg, bg } = spriteMapping[status];\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = fg;\n    ctx.fillStyle = bg;\n    ctx.beginPath();\n    ctx.moveTo(-40, 40);\n    ctx.lineTo(-40, 20);\n    ctx.arc(-20, 20, 20, deg2rad(180), deg2rad(270));\n    ctx.moveTo(-20, 0);\n    ctx.lineTo(20, 0);\n    ctx.arc(20, 20, 20, deg2rad(270), deg2rad(0));\n    ctx.lineTo(40, 40);\n    ctx.lineTo(-40, 40);\n    ctx.moveTo(-23, 20);\n    ctx.lineTo(-23, 40);\n    ctx.moveTo(23, 20);\n    ctx.lineTo(23, 40);\n    ctx.fill();\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.arc(0, -15, 25, deg2rad(0), deg2rad(360));\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n};\n","/* global kontra */\n\nimport {\n    virusStartDirection,\n    virusStartCol,\n    virusStartRow,\n    tileWidth,\n    tileHeight,\n    collisionRadius\n} from '../config.js';\nimport { drawVirus, updateVirus, Blips } from './index.js';\n\nexport default map => {\n    const { x, y } = map.getXAndY({ row: virusStartRow, col: virusStartCol });\n    const blips = new Blips();\n    const virus = {\n        context: kontra.context,\n        x,\n        y,\n        collisionRadius,\n        map,\n        mapX: virusStartCol * tileWidth,\n        mapY: virusStartRow * tileHeight,\n        direction: virusStartDirection,\n        blips,\n        update() {\n            ({ x: this.x, y: this.y, mapX: this.mapX, mapY: this.mapY, direction: this.direction } = updateVirus(this));\n            this.blips.update();\n        },\n        render() {\n            drawVirus(this);\n            this.blips.render();\n        }\n    };\n    blips.start(virus);\n\n    return virus;\n};\n","import { virusBlipInterval } from '../config.js';\nimport { createBlip } from './index.js';\n\nexport default class {\n    constructor() {\n        this.blips = [];\n    }\n\n    start(virus) {\n        setInterval(() => {\n            this.blips.push(createBlip({ x: virus.x, y: virus.y }));\n        }, virusBlipInterval);\n    }\n    update() {\n        this.blips.forEach(blip => blip.update());\n        this.blips = this.blips.filter(blip => blip.ttl > 0);\n    }\n    render() {\n        this.blips.forEach(blip => blip.render());\n    }\n}\n","import {\n    switchDirection,\n    isIntersection,\n    directionSwitchMap,\n    getOppositeDirection,\n    directionIsAllowed\n} from '../directions/index.js';\nimport { getRandomInt } from '../utils/index.js';\nimport { isInTheMiddle, moveVirus, getBestDirection } from './utils/index.js';\n\nlet visits = null;\n\nexport default sprite => {\n    let { direction } = sprite;\n    const { map } = sprite;\n    const { mapX, mapY } = moveVirus(sprite);\n    const { x, y } = map.getXAndY({ mapX, mapY });\n    if (!visits) {\n        visits = Array(map.height)\n            .fill()\n            .map(() => Array(map.width).fill(0));\n    }\n    if (isInTheMiddle({ mapX, mapY })) {\n        const tile = map.tileAtLayer('main', { x, y });\n        const { col, row } = map.getRowAndCol({ x, y });\n        visits[row][col]++;\n        if (isIntersection(tile)) {\n            const { allowed } = directionSwitchMap[tile];\n            const viable = allowed.filter(\n                dir => dir !== getOppositeDirection(direction) && directionIsAllowed(map, { x, y }, dir)\n            );\n            const bestDirections = getBestDirection({ viable, visits, row, col });\n            direction = bestDirections[getRandomInt(0, bestDirections.length - 1)];\n        } else {\n            direction = switchDirection(map, { x, y }, direction);\n        }\n    }\n    return {\n        direction,\n        mapY,\n        mapX,\n        x,\n        y\n    };\n};\n","import { N, E, S, W } from '../../directions/index.js';\nimport { virusSpeed } from '../../config.js';\n\nexport default ({ mapX, mapY, direction }) => {\n    switch (direction) {\n        case N:\n            return { mapX, mapY: mapY - virusSpeed };\n        case E:\n            return { mapX: mapX + virusSpeed, mapY };\n        case S:\n            return { mapX, mapY: mapY + virusSpeed };\n        case W:\n            return { mapX: mapX - virusSpeed, mapY };\n        default:\n            return { mapX, mapY };\n    }\n};\n","import { tileHeight, tileWidth } from '../../config.js';\n\nexport default ({ mapX, mapY }) => mapX % tileWidth === 0 && mapY % tileHeight === 0;\n","import { N, E, S, W } from '../../directions/index.js';\n\nexport default ({ viable, visits, row, col }) => {\n    let minVis = Number.MAX_SAFE_INTEGER;\n    return viable\n        .map(dir => {\n            let vis;\n            switch (dir) {\n                case N:\n                    vis = visits[row - 1][col];\n                    break;\n                case E:\n                    vis = visits[row][col + 1];\n                    break;\n                case S:\n                    vis = visits[row + 1][col];\n                    break;\n                case W:\n                    vis = visits[row][col - 1];\n                    break;\n                default:\n            }\n            minVis = vis < minVis ? vis : minVis;\n            return { dir, vis };\n        })\n        .filter(({ vis }) => vis === minVis)\n        .map(({ dir }) => dir);\n};\n","import { N, E, S, W } from './index.js';\n\nexport default direction => {\n    switch (direction) {\n        case N:\n            return S;\n        case E:\n            return W;\n        case S:\n            return N;\n        case W:\n            return W;\n        default:\n            return null;\n    }\n};\n","import { lightRed, darkRed } from '../config.js';\nimport { getRandomInt as ri } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightRed;\n    ctx.fillStyle = darkRed;\n    ctx.beginPath();\n    ctx.moveTo(ri(-5, 5), ri(-5, -25)); // 1\n    ctx.lineTo(ri(5, 50), ri(-5, -50)); // 2\n    ctx.lineTo(ri(5, 25), ri(-5, 5)); // 3\n    ctx.lineTo(ri(5, 50), ri(5, 50)); // 4\n    ctx.lineTo(ri(-5, 5), ri(5, 25)); // 5\n    ctx.lineTo(ri(-5, -50), ri(5, 50)); // 6\n    ctx.lineTo(ri(-5, -25), ri(-5, 5)); // 7\n    ctx.lineTo(ri(-5, -50), ri(-5, -50)); // 8\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.restore();\n};\n","/* global kontra */\n\nimport { tileHeight, virusBlipTtl } from '../config.js';\nimport { drawBlip } from './index.js';\n\nexport default ({ x, y }) => ({\n    context: kontra.context,\n    x,\n    y,\n    ttl: virusBlipTtl,\n    radius: tileHeight,\n    update() {\n        this.radius += 10;\n        this.ttl--;\n    },\n    render() {\n        drawBlip(this);\n    }\n});\n","import { lightRed } from '../config.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, radius } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = lightRed;\n    ctx.beginPath();\n    ctx.arc(0, 0, radius, deg2rad(0), deg2rad(360));\n    ctx.closePath();\n    ctx.stroke();\n\n    ctx.restore();\n};\n","/* global kontra */\n\nimport { collisionRadius, tileHeight, tileWidth } from '../config.js';\nimport { drawBomb, updateBomb } from './index.js';\nimport { FUSE_BURNING } from './index.js';\n\nexport default (map, { row, col }) => {\n    const { x, y } = map.getXAndY({ row, col });\n    return {\n        context: kontra.context,\n        x,\n        y,\n        collisionRadius,\n        fuseLength: 100,\n        status: FUSE_BURNING,\n        shrapnel: [],\n        explosionDuration: 0,\n        map,\n        mapX: col * tileWidth,\n        mapY: row * tileHeight,\n        row,\n        col,\n        update() {\n            ({\n                status: this.status,\n                fuseLength: this.fuseLength,\n                explosionDuration: this.explosionDuration,\n                x: this.x,\n                y: this.y\n            } = updateBomb(this));\n        },\n        render() {\n            drawBomb(this);\n        }\n    };\n};\n","export const FUSE_BURNING = 0;\nexport const EXPLODING = 1;\nexport const EXPLODED = 2;\n","import { EXPLODING, FUSE_BURNING } from './constants.js';\nimport { drawBombWithFuse } from './index.js';\n\nexport default sprite => {\n    const { status, shrapnel } = sprite;\n    switch (status) {\n        case FUSE_BURNING:\n            drawBombWithFuse(sprite);\n            break;\n        case EXPLODING:\n            shrapnel.forEach(s => s.render());\n            break;\n        default:\n    }\n};\n","import { lightRed, lightBlue, darkBlue } from '../config.js';\nimport { getRandomInt as ri } from '../utils/index.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, fuseLength } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(deg2rad(-45));\n\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.fillStyle = darkBlue;\n\n    /* bomb */\n    ctx.beginPath();\n    ctx.moveTo(23, -10);\n    ctx.lineTo(40, -10);\n    ctx.lineTo(40, 10);\n    ctx.lineTo(23, 10);\n    ctx.arc(0, 0, 25, deg2rad(19), deg2rad(341));\n    ctx.fill();\n    ctx.stroke();\n\n    /* fuse */\n    const fuseRad = 25; // radius of the fuse arc\n    const fuseDeg = (fuseLength / 100) * 90; // length of the fuse arc in degrees\n    ctx.beginPath();\n    ctx.moveTo(40, 0);\n    ctx.arc(40, 25, fuseRad, deg2rad(270), deg2rad(270 + fuseDeg));\n    ctx.stroke();\n\n    /* sparks */\n    const sparkCX = Math.cos(deg2rad(fuseDeg - 90)) * fuseRad + 40; // X-coord of sparks center\n    const sparkCY = Math.sin(deg2rad(fuseDeg - 90)) * fuseRad + 25; // Y-coord of sparks centers\n    const sparkRad = 15; // radius of the sparks circle\n    ctx.fillStyle = lightRed;\n    for (let i = 0; i < 10; i++) {\n        const sparkX = Math.cos(deg2rad(ri(0, 360))) * ri(0, sparkRad) + sparkCX;\n        const sparkY = Math.sin(deg2rad(ri(0, 360))) * ri(0, sparkRad) + sparkCY;\n        ctx.fillRect(sparkX - 1, sparkY - 1, 3, 3);\n    }\n\n    ctx.restore();\n};\n","/* global kontra */\n\nimport { FUSE_BURNING, EXPLODING, EXPLODED } from './index.js';\nimport { createShrapnel } from './index.js';\nimport { pubsub, MAP_CHANGED, USERS_POSSIBLY_OFFLINE, BOMB_EXPLODES } from '../pubsub/index.js';\n\nexport default sprite => {\n    let { status, fuseLength, explosionDuration, x, y } = sprite;\n    const { shrapnel, map, mapX, mapY, row, col } = sprite;\n\n    ({ x, y } = map.getXAndY({ mapX, mapY }));\n    switch (status) {\n        case FUSE_BURNING:\n            fuseLength -= 1;\n            if (fuseLength < 0) {\n                status = EXPLODING;\n                pubsub.publish(BOMB_EXPLODES);\n                for (let i = 0; i < 50; i++) {\n                    shrapnel.push(createShrapnel({ x, y }));\n                }\n                const tile = map.tileAtLayer('main', { row, col });\n                map.changeTile('main', { row, col }, tile + 24);\n                pubsub.publish(MAP_CHANGED, map);\n                pubsub.publish(USERS_POSSIBLY_OFFLINE);\n            }\n            break;\n        case EXPLODING:\n            shrapnel.forEach(s => s.update());\n            explosionDuration++;\n            if (explosionDuration === 200) {\n                status = EXPLODED;\n            }\n            break;\n        default:\n    }\n    return {\n        status,\n        fuseLength,\n        explosionDuration,\n        x,\n        y\n    };\n};\n","/* global kontra */\nimport { getRandomInt as ri } from '../utils/index.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\nimport { drawShrapnel } from './index.js';\n\nexport default ({ x, y }) => {\n    const dir = ri(0, 360);\n    const speed = ri(5, 15);\n    return {\n        context: kontra.context,\n        x,\n        y,\n        dx: Math.cos(deg2rad(dir)) * speed,\n        dy: Math.sin(deg2rad(dir)) * speed,\n        rotation: ri(0, 360),\n        rotationDir: [ri(-10, -1), ri(1, 10)][ri(0, 1)],\n        update() {\n            this.x += this.dx;\n            this.y += this.dy;\n            this.rotation += this.rotationDir;\n        },\n        render() {\n            drawShrapnel(this);\n        }\n    };\n};\n","import { lightBlue, darkBlue } from '../config.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, rotation } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(deg2rad(rotation));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.fillStyle = darkBlue;\n    ctx.beginPath();\n    ctx.moveTo(0, -10);\n    ctx.lineTo(10, 5);\n    ctx.lineTo(-10, 5);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n};\n","/**\n * SfxrParams\n *\n * Copyright 2010 Thomas Vian\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @author Thomas Vian\n */\nfunction SfxrParams() {\n    //--------------------------------------------------------------------------\n    //\n    //  Settings String Methods\n    //\n    //--------------------------------------------------------------------------\n\n    /**\n     * Parses a settings array into the parameters\n     * @param array Array of the settings values, where elements 0 - 23 are\n     *                a: waveType\n     *                b: attackTime\n     *                c: sustainTime\n     *                d: sustainPunch\n     *                e: decayTime\n     *                f: startFrequency\n     *                g: minFrequency\n     *                h: slide\n     *                i: deltaSlide\n     *                j: vibratoDepth\n     *                k: vibratoSpeed\n     *                l: changeAmount\n     *                m: changeSpeed\n     *                n: squareDuty\n     *                o: dutySweep\n     *                p: repeatSpeed\n     *                q: phaserOffset\n     *                r: phaserSweep\n     *                s: lpFilterCutoff\n     *                t: lpFilterCutoffSweep\n     *                u: lpFilterResonance\n     *                v: hpFilterCutoff\n     *                w: hpFilterCutoffSweep\n     *                x: masterVolume\n     * @return If the string successfully parsed\n     */\n    this.setSettings = function(values) {\n        for (let i = 0; i < 24; i++) {\n            this[String.fromCharCode(97 + i)] = values[i] || 0;\n        }\n\n        // I moved this here from the reset(true) function\n        if (this.c < 0.01) {\n            this.c = 0.01;\n        }\n\n        const totalTime = this.b + this.c + this.e;\n        if (totalTime < 0.18) {\n            const multiplier = 0.18 / totalTime;\n            this.b *= multiplier;\n            this.c *= multiplier;\n            this.e *= multiplier;\n        }\n    };\n}\n\n/**\n * SfxrSynth\n *\n * Copyright 2010 Thomas Vian\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @author Thomas Vian\n */\nfunction SfxrSynth() {\n    // All variables are kept alive through function closures\n\n    //--------------------------------------------------------------------------\n    //\n    //  Sound Parameters\n    //\n    //--------------------------------------------------------------------------\n\n    this._params = new SfxrParams(); // Params instance\n\n    //--------------------------------------------------------------------------\n    //\n    //  Synth Variables\n    //\n    //--------------------------------------------------------------------------\n\n    let _envelopeLength0, // Length of the attack stage\n        _envelopeLength1, // Length of the sustain stage\n        _envelopeLength2, // Length of the decay stage\n        _period, // Period of the wave\n        _maxPeriod, // Maximum period before sound stops (from minFrequency)\n        _slide, // Note slide\n        _deltaSlide, // Change in slide\n        _changeAmount, // Amount to change the note by\n        _changeTime, // Counter for the note change\n        _changeLimit, // Once the time reaches this limit, the note changes\n        _squareDuty, // Offset of center switching point in the square wave\n        _dutySweep; // Amount to change the duty by\n\n    //--------------------------------------------------------------------------\n    //\n    //  Synth Methods\n    //\n    //--------------------------------------------------------------------------\n\n    /**\n     * Resets the runing variables from the params\n     * Used once at the start (total reset) and for the repeat effect (partial reset)\n     */\n    this.reset = function() {\n        // Shorter reference\n        const p = this._params;\n\n        _period = 100 / (p.f * p.f + 0.001);\n        _maxPeriod = 100 / (p.g * p.g + 0.001);\n\n        _slide = 1 - p.h * p.h * p.h * 0.01;\n        _deltaSlide = -p.i * p.i * p.i * 0.000001;\n\n        if (!p.a) {\n            _squareDuty = 0.5 - p.n / 2;\n            _dutySweep = -p.o * 0.00005;\n        }\n\n        _changeAmount = p.l > 0 ? 1 - p.l * p.l * 0.9 : 1 + p.l * p.l * 10;\n        _changeTime = 0;\n        _changeLimit = p.m == 1 ? 0 : (1 - p.m) * (1 - p.m) * 20000 + 32;\n    };\n\n    // I split the reset() function into two functions for better readability\n    this.totalReset = function() {\n        this.reset();\n\n        // Shorter reference\n        const p = this._params;\n\n        // Calculating the length is all that remained here, everything else moved somewhere\n        _envelopeLength0 = p.b * p.b * 100000;\n        _envelopeLength1 = p.c * p.c * 100000;\n        _envelopeLength2 = p.e * p.e * 100000 + 10;\n        // Full length of the volume envelop (and therefore sound)\n        return (_envelopeLength0 + _envelopeLength1 + _envelopeLength2) | 0;\n    };\n\n    /**\n     * Writes the wave to the supplied buffer ByteArray\n     * @param buffer A ByteArray to write the wave to\n     * @return If the wave is finished\n     */\n    this.synthWave = function(buffer, length) {\n        // Shorter reference\n        const p = this._params;\n\n        // If the filters are active\n        const _filters = p.s != 1 || p.v;\n\n        // Cutoff multiplier which adjusts the amount the wave position can move\n\n        let _hpFilterCutoff = p.v * p.v * 0.1;\n\n        // Speed of the high-pass cutoff multiplier\n\n        const _hpFilterDeltaCutoff = 1 + p.w * 0.0003;\n\n        // Cutoff multiplier which adjusts the amount the wave position can move\n\n        let _lpFilterCutoff = p.s * p.s * p.s * 0.1;\n\n        // Speed of the low-pass cutoff multiplier\n\n        const _lpFilterDeltaCutoff = 1 + p.t * 0.0001;\n\n        // If the low pass filter is active\n\n        const _lpFilterOn = p.s != 1;\n\n        // masterVolume * masterVolume (for quick calculations)\n\n        const _masterVolume = p.x * p.x;\n\n        // Minimum frequency before stopping\n\n        const _minFreqency = p.g;\n\n        // If the phaser is active\n\n        const _phaser = p.q || p.r;\n\n        // Change in phase offset\n\n        const _phaserDeltaOffset = p.r * p.r * p.r * 0.2;\n\n        // Phase offset for phaser effect\n\n        let _phaserOffset = p.q * p.q * (p.q < 0 ? -1020 : 1020);\n\n        // Once the time reaches this limit, some of the    iables are reset\n\n        const _repeatLimit = p.p ? (((1 - p.p) * (1 - p.p) * 20000) | 0) + 32 : 0;\n\n        // The punch factor (louder at begining of sustain)\n\n        const _sustainPunch = p.d;\n\n        // Amount to change the period of the wave by at the peak of the vibrato wave\n\n        const _vibratoAmplitude = p.j / 2;\n\n        // Speed at which the vibrato phase moves\n\n        const _vibratoSpeed = p.k * p.k * 0.01;\n\n        // The type of wave to generate\n\n        const _waveType = p.a;\n\n        let _envelopeLength = _envelopeLength0;\n        // Length of the current envelope stage\n\n        const _envelopeOverLength0 = 1 / _envelopeLength0;\n        // (for quick calculations)\n\n        const _envelopeOverLength1 = 1 / _envelopeLength1;\n        // (for quick calculations)\n\n        const _envelopeOverLength2 = 1 / _envelopeLength2; // (for quick calculations)\n\n        // Damping muliplier which restricts how fast the wave position can move\n        let _lpFilterDamping = (5 / (1 + p.u * p.u * 20)) * (0.01 + _lpFilterCutoff);\n        if (_lpFilterDamping > 0.8) {\n            _lpFilterDamping = 0.8;\n        }\n        _lpFilterDamping = 1 - _lpFilterDamping;\n\n        let _finished = false;\n        // If the sound has finished\n\n        let _envelopeStage = 0;\n        // Current stage of the envelope (attack, sustain, decay, end)\n\n        let _envelopeTime = 0;\n        // Current time through current enelope stage\n\n        let _envelopeVolume = 0;\n        // Current volume of the envelope\n\n        let _hpFilterPos = 0;\n        // Adjusted wave position after high-pass filter\n\n        let _lpFilterDeltaPos = 0;\n        // Change in low-pass wave position, as allowed by the cutoff and damping\n\n        let _lpFilterOldPos,\n\n\n        // Previous low-pass wave position\n\n         \n _lpFilterPos = 0;\n\n\n\n        // Adjusted wave position after low-pass filter\n\n         \n \nlet _periodTemp,\n\n\n        // Period modified by vibrato\n\n         _phase = 0;\n\n\n        // Phase through the wave\n\n         \nlet _phaserInt;\n\n        // Integer phaser offset, for bit maths\n\n        let _phaserPos = 0;\n\n        // Position through the phaser buffer\n\n        let _pos,\n\n\n\n        // Phase expresed as a Number from 0-1, used for fast sin approx\n\n         \n \n \n _repeatTime = 0;\n\n\n\n\n // Counter for the repeats\n            \n \n \n \n \nvar _sample;\n\n\n\n\n // Sub-sample calculated 8 times per actual sample, averaged out to get the super sample\n            \n \n \n \n \nvar _superSample;\n        // Actual sample writen to the wave\n\n        let _vibratoPhase = 0; // Phase through the vibrato sine wave\n\n        // Buffer of wave values used to create the out of phase second wave\n        const _phaserBuffer = new Array(1024);\n\n        // Buffer of random values used to generate noise\n\n        const _noiseBuffer = new Array(32);\n        for (var i = _phaserBuffer.length; i--; ) {\n            _phaserBuffer[i] = 0;\n        }\n        for (var i = _noiseBuffer.length; i--; ) {\n            _noiseBuffer[i] = Math.random() * 2 - 1;\n        }\n\n        for (var i = 0; i < length; i++) {\n            if (_finished) {\n                return i;\n            }\n\n            // Repeats every _repeatLimit times, partially resetting the sound parameters\n            if (_repeatLimit) {\n                if (++_repeatTime >= _repeatLimit) {\n                    _repeatTime = 0;\n                    this.reset();\n                }\n            }\n\n            // If _changeLimit is reached, shifts the pitch\n            if (_changeLimit) {\n                if (++_changeTime >= _changeLimit) {\n                    _changeLimit = 0;\n                    _period *= _changeAmount;\n                }\n            }\n\n            // Acccelerate and apply slide\n            _slide += _deltaSlide;\n            _period *= _slide;\n\n            // Checks for frequency getting too low, and stops the sound if a minFrequency was set\n            if (_period > _maxPeriod) {\n                _period = _maxPeriod;\n                if (_minFreqency > 0) {\n                    _finished = true;\n                }\n            }\n\n            _periodTemp = _period;\n\n            // Applies the vibrato effect\n            if (_vibratoAmplitude > 0) {\n                _vibratoPhase += _vibratoSpeed;\n                _periodTemp *= 1 + Math.sin(_vibratoPhase) * _vibratoAmplitude;\n            }\n\n            _periodTemp |= 0;\n            if (_periodTemp < 8) {\n                _periodTemp = 8;\n            }\n\n            // Sweeps the square duty\n            if (!_waveType) {\n                _squareDuty += _dutySweep;\n                if (_squareDuty < 0) {\n                    _squareDuty = 0;\n                } else if (_squareDuty > 0.5) {\n                    _squareDuty = 0.5;\n                }\n            }\n\n            // Moves through the different stages of the volume envelope\n            if (++_envelopeTime > _envelopeLength) {\n                _envelopeTime = 0;\n\n                switch (++_envelopeStage) {\n                    case 1:\n                        _envelopeLength = _envelopeLength1;\n                        break;\n                    case 2:\n                        _envelopeLength = _envelopeLength2;\n                }\n            }\n\n            // Sets the volume based on the position in the envelope\n            switch (_envelopeStage) {\n                case 0:\n                    _envelopeVolume = _envelopeTime * _envelopeOverLength0;\n                    break;\n                case 1:\n                    _envelopeVolume = 1 + (1 - _envelopeTime * _envelopeOverLength1) * 2 * _sustainPunch;\n                    break;\n                case 2:\n                    _envelopeVolume = 1 - _envelopeTime * _envelopeOverLength2;\n                    break;\n                case 3:\n                    _envelopeVolume = 0;\n                    _finished = true;\n            }\n\n            // Moves the phaser offset\n            if (_phaser) {\n                _phaserOffset += _phaserDeltaOffset;\n                _phaserInt = _phaserOffset | 0;\n                if (_phaserInt < 0) {\n                    _phaserInt = -_phaserInt;\n                } else if (_phaserInt > 1023) {\n                    _phaserInt = 1023;\n                }\n            }\n\n            // Moves the high-pass filter cutoff\n            if (_filters && _hpFilterDeltaCutoff) {\n                _hpFilterCutoff *= _hpFilterDeltaCutoff;\n                if (_hpFilterCutoff < 0.00001) {\n                    _hpFilterCutoff = 0.00001;\n                } else if (_hpFilterCutoff > 0.1) {\n                    _hpFilterCutoff = 0.1;\n                }\n            }\n\n            _superSample = 0;\n            for (let j = 8; j--; ) {\n                // Cycles through the period\n                _phase++;\n                if (_phase >= _periodTemp) {\n                    _phase %= _periodTemp;\n\n                    // Generates new random noise for this period\n                    if (_waveType == 3) {\n                        for (let n = _noiseBuffer.length; n--; ) {\n                            _noiseBuffer[n] = Math.random() * 2 - 1;\n                        }\n                    }\n                }\n\n                // Gets the sample from the oscillator\n                switch (_waveType) {\n                    case 0: // Square wave\n                        _sample = _phase / _periodTemp < _squareDuty ? 0.5 : -0.5;\n                        break;\n                    case 1: // Saw wave\n                        _sample = 1 - (_phase / _periodTemp) * 2;\n                        break;\n                    case 2: // Sine wave (fast and accurate approx)\n                        _pos = _phase / _periodTemp;\n                        _pos = _pos > 0.5 ? (_pos - 1) * 6.28318531 : _pos * 6.28318531;\n                        _sample =\n                            _pos < 0\n                                ? 1.27323954 * _pos + 0.405284735 * _pos * _pos\n                                : 1.27323954 * _pos - 0.405284735 * _pos * _pos;\n                        _sample =\n                            _sample < 0\n                                ? 0.225 * (_sample * -_sample - _sample) + _sample\n                                : 0.225 * (_sample * _sample - _sample) + _sample;\n                        break;\n                    case 3: // Noise\n                        _sample = _noiseBuffer[Math.abs(((_phase * 32) / _periodTemp) | 0)];\n                }\n\n                // Applies the low and high pass filters\n                if (_filters) {\n                    _lpFilterOldPos = _lpFilterPos;\n                    _lpFilterCutoff *= _lpFilterDeltaCutoff;\n                    if (_lpFilterCutoff < 0) {\n                        _lpFilterCutoff = 0;\n                    } else if (_lpFilterCutoff > 0.1) {\n                        _lpFilterCutoff = 0.1;\n                    }\n\n                    if (_lpFilterOn) {\n                        _lpFilterDeltaPos += (_sample - _lpFilterPos) * _lpFilterCutoff;\n                        _lpFilterDeltaPos *= _lpFilterDamping;\n                    } else {\n                        _lpFilterPos = _sample;\n                        _lpFilterDeltaPos = 0;\n                    }\n\n                    _lpFilterPos += _lpFilterDeltaPos;\n\n                    _hpFilterPos += _lpFilterPos - _lpFilterOldPos;\n                    _hpFilterPos *= 1 - _hpFilterCutoff;\n                    _sample = _hpFilterPos;\n                }\n\n                // Applies the phaser effect\n                if (_phaser) {\n                    _phaserBuffer[_phaserPos % 1024] = _sample;\n                    _sample += _phaserBuffer[(_phaserPos - _phaserInt + 1024) % 1024];\n                    _phaserPos++;\n                }\n\n                _superSample += _sample;\n            }\n\n            // Averages out the super samples and applies volumes\n            _superSample *= 0.125 * _envelopeVolume * _masterVolume;\n\n            // Clipping if too loud\n            buffer[i] = _superSample >= 1 ? 32767 : _superSample <= -1 ? -32768 : (_superSample * 32767) | 0;\n        }\n\n        return length;\n    };\n}\n\n// Adapted from http://codebase.es/riffwave/\nconst synth = new SfxrSynth();\n// Export for the Closure Compiler\nexport default function(settings) {\n    // Initialize SfxrParams\n    synth._params.setSettings(settings);\n    // Synthesize Wave\n    const envelopeFullLength = synth.totalReset();\n    const data = new Uint8Array((((envelopeFullLength + 1) / 2) | 0) * 4 + 44);\n    let used = synth.synthWave(new Uint16Array(data.buffer, 44), envelopeFullLength) * 2;\n    const dv = new Uint32Array(data.buffer, 0, 44);\n    // Initialize header\n    dv[0] = 0x46464952; // \"RIFF\"\n    dv[1] = used + 36; // put total size here\n    dv[2] = 0x45564157; // \"WAVE\"\n    dv[3] = 0x20746d66; // \"fmt \"\n    dv[4] = 0x00000010; // size of the following\n    dv[5] = 0x00010001; // Mono: 1 channel, PCM format\n    dv[6] = 0x0000ac44; // 44,100 samples per second\n    dv[7] = 0x00015888; // byte rate: two bytes per sample\n    dv[8] = 0x00100002; // 16 bits per sample, aligned on every two bytes\n    dv[9] = 0x61746164; // \"data\"\n    dv[10] = used; // put number of samples here\n\n    // Base64 encoding written by me, @maettig\n    used += 44;\n    let i = 0;\n\n    const base64Characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n    let output = 'data:audio/wav;base64,';\n    for (; i < used; i += 3) {\n        const a = (data[i] << 16) | (data[i + 1] << 8) | data[i + 2];\n        output +=\n            base64Characters[a >> 18] +\n            base64Characters[(a >> 12) & 63] +\n            base64Characters[(a >> 6) & 63] +\n            base64Characters[a & 63];\n    }\n    i -= used;\n    return output.slice(0, output.length - i) + '=='.slice(0, i);\n}\n","import jsfxr from '../../vendor/sfxr.js';\nimport generateSounds from './sounds.js';\n\nexport default function ArcadeAudio() {\n    this.sounds = {};\n    generateSounds(this);\n}\n\nArcadeAudio.prototype.add = function(key, count, settings) {\n    this.sounds[key] = [];\n    settings.forEach(function(elem, index) {\n        this.sounds[key].push({\n            tick: 0,\n            count,\n            pool: []\n        });\n        for (let i = 0; i < count; i++) {\n            const audio = new Audio();\n            audio.src = jsfxr(elem);\n            this.sounds[key][index].pool.push(audio);\n        }\n    }, this);\n};\n\nArcadeAudio.prototype.play = function(key) {\n    const sound = this.sounds[key];\n    const soundData = sound.length > 1 ? sound[Math.floor(Math.random() * sound.length)] : sound[0];\n    soundData.pool[soundData.tick].play();\n    if (soundData.tick < soundData.count - 1) {\n        soundData.tick++;\n    } else {\n        soundData.tick = 0;\n    }\n};\n","/* eslint-disable no-sparse-arrays */\nexport default function generateSounds(aa) {\n    aa.add('infected', 3, [\n        [2, , 0.2916, , 0.2587, 0.9356, 0.3909, -0.2493, , , , , , 0.3583, 0.1617, , , , 1, , , 0.1217, , 0.5]\n    ]);\n\n    aa.add('drop-bomb', 3, [[0, , 0.0641, 0.5296, 0.1228, 0.4195, , , , , , 0.3029, 0.6261, , , , , , 1, , , , , 0.5]]);\n\n    aa.add('drop-ship', 1, [\n        [0, , 0.57, , 0.1398, 0.61, , -0.26, 0.1, , , 0.02, , 0.3325, , , , , 0.9793, , , , , 0.5]\n    ]);\n\n    aa.add('explode', 3, [\n        [3, , 0.1606, 0.5988, 0.2957, 0.1157, , -0.3921, , , , , , , , , 0.3225, -0.2522, 1, , , , , 0.25]\n    ]);\n}\n/* eslint-enable no-alert, no-console */\n","import { pubsub, DROP_BOMB, BOMB_EXPLODES, INFECTED, DROP_SHIP } from '../pubsub/index.js';\nimport ArcadeAudio from './ArcadeAudio.js';\n\nconst aa = new ArcadeAudio();\n\nexport function initAudio() {\n    pubsub.subscribe(DROP_BOMB, () => aa.play('drop-bomb'));\n    pubsub.subscribe(DROP_BOMB, () => console.log('drop bomb'));\n    pubsub.subscribe(BOMB_EXPLODES, () => aa.play('explode'));\n    pubsub.subscribe(INFECTED, () => aa.play('infected'));\n    pubsub.subscribe(DROP_SHIP, () => aa.play('drop-ship'));\n\n    /*\n   * GENERATE NEW SOUNDS ON http://www.superflashbros.net/as3sfxr/\n   * CMD + C copies the values\n   *\n   * */\n}\n","/* global kontra */\n\nimport { createCanvas } from './canvas/index.js';\nimport { createLoop } from './loop/index.js';\nimport { createMap } from './map/index.js';\nimport { createPlayer } from './player/index.js';\nimport { Users } from './user/index.js';\nimport { createVirus } from './virus/index.js';\nimport { Bombs } from './bomb/index.js';\nimport { initPathfinder } from './pathfinder/index.js';\nimport { pubsub, USERS_POSSIBLY_OFFLINE } from './pubsub/index.js';\nimport { initAudio } from './audio/index.js';\n\n// will be removed by tree shaking\nimport createDevbox from './devbox/createDevbox.js';\nif (process.env.NODE_ENV === 'development') {\n    createDevbox();\n}\n\n(async () => {\n    createCanvas();\n    kontra.init();\n    const map = await createMap();\n    initPathfinder(map);\n    const player = createPlayer(map);\n    const virus = createVirus(map);\n    const bombs = new Bombs(map);\n    const users = new Users(map);\n    pubsub.subscribe(USERS_POSSIBLY_OFFLINE, () => users.updateOnlineStatus(virus));\n    const loop = createLoop({ map, player, virus, users, bombs });\n    initAudio();\n    loop.start();\n})();\n","import { canvasHeight, canvasWidth, lightBlue } from '../config.js';\n\nexport default () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = canvasWidth;\n    canvas.height = canvasHeight;\n    canvas.style.cssText = `\n        border: 4px solid ${lightBlue};\n    `;\n    const wrapper = document.getElementById('wrapper');\n    wrapper.appendChild(canvas);\n};\n","import { pathfinder } from './index.js';\nimport { pubsub, MAP_CHANGED } from '../pubsub/index.js';\n\nexport default map => {\n    pathfinder.setDataFromMap(map, 'main');\n    pubsub.subscribe(MAP_CHANGED, changedMap => pathfinder.setDataFromMap(changedMap, 'main'));\n};\n","import { pubsub, DROP_BOMB, BOMB_EXPLODES } from '../pubsub/index.js';\nimport { EXPLODED } from './constants.js';\nimport { createBomb } from './index.js';\n\nexport default class {\n    constructor(map) {\n        this.map = map;\n        this.bombs = [];\n        pubsub.subscribe(DROP_BOMB, mapCoords => this.dropBomb(mapCoords));\n    }\n    dropBomb(mapCoords) {\n        if (\n            this.bombs.length > 0 &&\n            this.bombs.find(({ col, row }) => col === mapCoords.col && row === mapCoords.row)\n        ) {\n            // don't drop a bomb where there already is one waiting to explode\n            return;\n        }\n        this.bombs.push(createBomb(this.map, mapCoords));\n    }\n    update() {\n        this.bombs = this.bombs.filter(bomb => {\n            bomb.update();\n            return bomb.status !== EXPLODED;\n        });\n    }\n    render() {\n        this.bombs.forEach(bomb => bomb.render());\n    }\n}\n","import { ONLINE, OFFLINE } from './index.js';\nimport { createUser, INFECTED } from './index.js';\nimport { multiCollides } from '../utils/index.js';\nimport { pubsub, GAME_OVER } from '../pubsub/index.js';\nimport { messageBox } from '../messageBox/index.js';\nimport { pathfinder } from '../pathfinder/index.js';\n\nexport default class {\n    constructor(map) {\n        this.map = map;\n        this.users = [];\n        this.gameOver = false;\n        for (let row = 0; row < map.height; row++) {\n            for (let col = 0; col < map.width; col++) {\n                const tile = map.tileAtLayer('main', { row, col });\n                if (tile >= 17 && tile <= 20) {\n                    this.users.push(createUser({ map, row, col }));\n                }\n            }\n        }\n        pubsub.subscribe(GAME_OVER, () => (this.gameOver = true));\n    }\n\n    updateOnlineStatus(...viruses) {\n        const virusesWithRowAndCol = viruses.map(virus => ({\n            ...virus,\n            ...this.map.getRowAndCol({ x: virus.x, y: virus.y })\n        }));\n        let goneOffline = 0;\n        for (const user of this.users.filter(({ status }) => status === ONLINE)) {\n            for (const virus of virusesWithRowAndCol) {\n                const isReachable = pathfinder.isReachable(user, virus);\n                if (!isReachable) {\n                    goneOffline++;\n                    user.status = OFFLINE;\n                }\n            }\n        }\n        if (goneOffline > 0) {\n            const { online, offline, infected } = this.getStats();\n            if (online === 0) {\n                messageBox.show(`level completed<br>offline users: ${offline}<br>infected users: ${infected}`);\n                pubsub.publish(GAME_OVER);\n            } else {\n                messageBox.flash(`${offline} users went offline<br>good job!`);\n            }\n        }\n    }\n\n    getStats() {\n        return this.users.reduce(\n            (acc, { status }) => ({\n                online: acc.online + (status === ONLINE ? 1 : 0),\n                offline: acc.offline + (status === OFFLINE ? 1 : 0),\n                infected: acc.infected + (status === INFECTED ? 1 : 0)\n            }),\n            { online: 0, offline: 0, infected: 0 }\n        );\n    }\n\n    update() {\n        this.users.forEach(user => user.update());\n    }\n\n    render() {\n        this.users.forEach(user => user.render());\n    }\n\n    infect(...viruses) {\n        const { users, gameOver } = this;\n        const userVirusCollisions = multiCollides(users, viruses).filter(([user]) => user.status !== INFECTED);\n        if (userVirusCollisions.length === 0) {\n            return;\n        }\n        userVirusCollisions.forEach(([user]) => user.infect());\n        if (gameOver) {\n            return;\n        }\n        const { online, offline, infected } = this.getStats();\n        if (online === 0) {\n            messageBox.show(`level completed<br>offline users: ${offline}<br>infected users: ${infected}`);\n            pubsub.publish(GAME_OVER);\n            return;\n        }\n        messageBox.flash('user infected!');\n    }\n}\n"]}
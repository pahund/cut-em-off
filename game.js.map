{"version":3,"sources":["../src/pubsub/pubsub.js","../src/pubsub/constants.js","../vendor/sfxr.js","../src/audio/ArcadeAudio.js","../src/audio/sounds.js","../src/audio/index.js","../src/config.js","../src/bomb/createBomb.js","../src/bomb/constants.js","../src/bomb/drawBomb.js","../src/utils/calculateCameraCoordinates.js","../src/directions/constants.js","../src/directions/directionIsAllowed.js","../src/directions/switchDirection.js","../src/directions/directionSwitchMap.js","../src/directions/isIntersection.js","../src/directions/getNextTile.js","../src/utils/degreesToRadians.js","../src/utils/getRandomInt.js","../src/utils/multiCollides.js","../src/utils/collides.js","../src/utils/isValidTile.js","../src/bomb/drawBombWithFuse.js","../src/messageBox/messageBox.js","../src/server/Servers.js","../src/server/createServer.js","../src/map/tilesheet/utils/krakel.js","../src/server/drawServer.js","../src/bomb/updateBomb.js","../src/bomb/createShrapnel.js","../src/bomb/drawShrapnel.js","../src/bomb/Bombs.js","../src/loop/utils/moveCamera.js","../src/loop/createLoop.js","../src/map/tilesheet/drawCurve.js","../src/map/tilesheet/drawStraight.js","../src/map/tilesheet/drawTSection.js","../src/map/tilesheet/drawCrossing.js","../src/map/tilesheet/drawTerminus.js","../src/tileEngine/createTileEngine.js","../src/map/createMap.js","../src/map/utils/addPadding.js","../src/map/tilesheet/createTilesheet.js","../src/player/createPlayer.js","../src/player/drawPlayer.js","../src/utils/calculateRotation.js","../src/player/updatePlayer.js","../src/player/utils/getKey.js","../src/player/utils/isInTheMiddle.js","../src/pathfinder/utils/extractShortest.js","../src/pathfinder/utils/findShortestPath.js","../src/pathfinder/utils/findPaths.js","../src/pathfinder/utils/convertMapToGraph.js","../src/pathfinder/utils/getNodeByCoords.js","../src/pathfinder/utils/initGraphAndAllowed.js","../src/pathfinder/pathfinder.js","../src/pathfinder/initPathfinder.js","../src/scoreBoard/createScoreBoard.js","../src/scoreBoard/index.js","../src/user/Users.js","../src/user/createUser.js","../src/user/constants.js","../src/user/drawUser.js","../src/virus/createVirus.js","../src/virus/Blips.js","../src/virus/updateVirus.js","../src/virus/utils/moveVirus.js","../src/virus/utils/isInTheMiddle.js","../src/virus/utils/getBestDirections.js","../src/directions/getOppositeDirection.js","../src/virus/drawVirus.js","../src/virus/createBlip.js","../src/virus/drawBlip.js","../src/canvas/createCanvas.js","../src/level/levels.js","../src/level/data.js","../src/gameManager/gameManager.js","../src/index.js"],"names":["pubsub","[object Object]","this","subscribers","message","callback","push","messageToBeReset","filter","subscribe","incomingMessage","payload","forEach","GAME_OVER","DROP_BOMB","DROP_SHIP","USERS_POSSIBLY_OFFLINE","BOMB_EXPLODES","INFECTED","synth","_envelopeLength0","_envelopeLength1","_envelopeLength2","_period","_maxPeriod","_slide","_deltaSlide","_changeAmount","_changeTime","_changeLimit","_squareDuty","_dutySweep","_params","setSettings","values","i","String","fromCharCode","c","totalTime","b","e","multiplier","reset","p","f","g","h","a","n","o","l","m","totalReset","synthWave","buffer","length","_filters","s","v","_hpFilterCutoff","_hpFilterDeltaCutoff","w","_lpFilterCutoff","_lpFilterDeltaCutoff","t","_lpFilterOn","_masterVolume","x","_minFreqency","_phaser","q","r","_phaserDeltaOffset","_phaserOffset","_repeatLimit","_sustainPunch","d","_vibratoAmplitude","j","_vibratoSpeed","k","_waveType","_envelopeLength","_envelopeOverLength0","_envelopeOverLength1","_envelopeOverLength2","_lpFilterDamping","u","_lpFilterOldPos","_periodTemp","_phaserInt","_pos","_finished","_envelopeStage","_envelopeTime","_envelopeVolume","_hpFilterPos","_lpFilterDeltaPos","_lpFilterPos","_phase","_phaserPos","_repeatTime","_sample","_superSample","_vibratoPhase","_phaserBuffer","Array","_noiseBuffer","Math","random","sin","abs","jsfxr","settings","envelopeFullLength","data","Uint8Array","used","Uint16Array","dv","Uint32Array","base64Characters","output","slice","ArcadeAudio","aa","sounds","add","prototype","key","count","elem","index","tick","pool","audio","Audio","src","play","sound","soundData","floor","virusBlipInterval","createBomb","map","row","col","y","getXAndY","context","kontra","collisionRadius","fuseLength","status","FUSE_BURNING","shrapnel","explosionDuration","mapX","mapY","updateBomb","drawBomb","EXPLODED","sprite","drawBombWithFuse","render","calculateCameraCoordinates","sx","canvasWidth","tileWidth","sy","canvasHeight","tileHeight","N","E","S","W","directionIsAllowed","direction","tile","tileAtLayer","isValidTile","directionSwitchMap","allowed","includes","nextTile","getNextTile","switchDirection","curr","Error","nextDirection","change","otherDirections","dir","getRandomInt","1","2","3","4","5","6","9","10","11","12","13","17","18","19","20","intersectionTiles","Object","entries","Number","deg2rad","degrees","PI","ri","min","max","multiCollides","arr1","arr2","collisions","i1","sprite1","i2","sprite2","collides","dx","dy","sqrt","ctx","save","translate","rotate","lineWidth","strokeStyle","fillStyle","beginPath","moveTo","lineTo","arc","fill","stroke","fuseDeg","sparkCX","cos","sparkCY","sparkX","sparkY","fillRect","restore","messageBox","timeoutHandler","div","document","createElement","setAttribute","getElementById","appendChild","clearTimeout","style","transition","innerHTML","opacity","setTimeout","servers","nextServerPointer","gameOver","serverCoordinates","createServer","server","update","find","broken","virus","availableServers","getAvailableServers","infected","flash","isNextPointerInRange","drawServer","krakel","draw","publish","createShrapnel","destroy","changeTile","speed","rotation","rotationDir","closePath","drawShrapnel","Bombs","bombs","mapCoords","dropBomb","bomb","createLoop","player","users","shipMoving","gameLoop","infect","getInfectedServers","teleport","moveCamera","calculatePointOnArc","deg","drawCurve","drawStraight","drawTSection","drawCrossing","drawTerminus","createTileEngine","properties","width","height","mapWidth","mapHeight","canvas","offscreenCanvas","offscreenContext","getContext","sxMax","syMax","_sx","_sy","layerOrder","tileEngine","tilesets","layers","addTilesets","concat","tileset","tilesetImage","image","firstGrid","lastTileset","tiles","Infinity","path","lastIndexOf","substr","assets","images","numTiles","lastGrid","sort","addLayers","layer","value","undefined","isArray","name","zIndex","prop","hasOwnProperty","JSON","parse","layerIndex","dataIndex","len","renderTile","preRenderImage","layerId","position","getIndex","drawImage","renderLayer","getRow","getCol","startX","startY","viewWidth","ceil","tileOffset","getTileset","currTile","clear","clearRect","createMap","async","mapPadding","paddedMap","arr","pad","retVal","idx","addPadding","Image","toDataURL","Promise","resolve","createTilesheet","createPlayer","scale","dropping","bombCoolingDown","teleportToServer","teleportCoolingDown","updatePlayer","drawPlayer","virusesOrServers","show","nextServer","getNext","degreesToRadians","calculateRotation","keys","pressed","getKey","isInTheMiddle","getRowAndCol","extractShortest","predecessors","end","nodes","get","reverse","findShortestPath","graph","start","shift","shortest","findPaths","apply","costs","Map","open","addToOpen","cost","vertex","vertices","set","size","currentCost","from","bucket","node","adjacentNodes","delete","totalCost","vertexCost","convertMapToGraph","initGraphAndAllowed","adjacent","currAllowed","target","getNodeByCoords","layerData","pathfinder","coords","args","findShortestPathByCoords","initPathfinder","changedMap","setDataFromMap","createScoreBoard","scoreBoard","updateScoreBoard","online","offline","getStats","score","calculateScore","highScore","localStorage","getItem","setItem","Users","positions","createUser","viruses","virusesWithRowAndCol","goneOffline","user","ONLINE","isReachable","OFFLINE","reduce","acc","userVirusCollisions","drawUser","INFECTED_EVENT","spriteMapping","fg","bg","createVirus","blips","setInterval","createBlip","blip","ttl","updateVirus","drawVirus","visits","moveVirus","isIntersection","bestDirections","viable","minVis","MAX_SAFE_INTEGER","vis","getBestDirection","getOppositeDirection","radius","drawBlip","createCanvas","cssText","levels","levelIndex","gameManager","init","level","getLevel","props","initScoreBoard","loop","updateOnlineStatus","addEventListener","startLevel","enableControls","once","initLevel","showStartScreen"],"mappings":"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AAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAG,GAC3E,EAAI,EAAG,GAAK,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAK,EAAI,EAAI,EAC5E,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAC3E,EAAI,EAAG,GAAK,EAAI,EAAG,GAAI,GAAK,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAK,EAAG,GAAK,EAAI,EAAI,EAAI,EAC5E,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAG,GAAI,GAAI,GAAI,GAAK,EAAI,EAAI,EAAI,EAAG,GAAK,EAAG,GAC5E,GAAK,EAAI,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAK,EAAI,EAC5E,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAC5E,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAG,GAAK,EAAG,GAAI,GAAI,GAAK,EAAI,EAAG,GAC3E,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAK,EAAG,GAAK,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAC7E,GAAK,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAK,EAAI,EAAG,GAAK,EAAG,GAAK,EAAI,EAAG,GAAI,GAC3E,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAC5E,EAAI,EAAI,EAAG,GAAK,EAAG,GAAK,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAG,GAAK,EAAG,GAAI,GAAI,GAAK,EAAI,MCS7F,IAAA6Y,GAAe,UAvDXhgB,cACI4f,KACAtW,OAAO2W,OACP1D,KvEfJxc,EAAOS,UAAUK,EAAW,IAAMgH,EAAGa,KAAK,cAC1C3I,EAAOS,UAAUQ,EAAe,IAAM6G,EAAGa,KAAK,YAC9C3I,EAAOS,UAAUS,EAAU,IAAM4G,EAAGa,KAAK,aACzC3I,EAAOS,UAAUM,EAAW,IAAM+G,EAAGa,KAAK,cuEgB1C1I,gBAAgB+f,GACZ,MAAMG,EAAQJ,GAAOK,SAASJ,GACxB/W,QAAY6O,MAAeqI,EAAMlX,IAAKE,IAAKgX,EAAMvN,OAAOzJ,IAAKD,IAAKiX,EAAMvN,OAAO1J,MACrFhJ,KAAK0S,OAASgG,GAAe3P,IAAAA,KAAQkX,EAAMvN,SAC3C,MAAML,EAAQ,IAAID,EAAMrJ,GAClBmI,EAAQqN,IAAcxV,IAAAA,KAAQkX,EAAMzC,QAAQ,KAClDtB,GAAWM,eAAezT,EAAK,QAC/B,MAAM4J,EAAQ,IAAI0K,IAAQtU,IAAAA,EAAKuU,UAAW2C,EAAMtN,QAChDlC,EAAQuP,KAAKjX,EAAKkX,EAAMxP,SlB9BjB,SAAwB0P,GACnC,MAAMzD,EAAaD,KACnBE,GAAiBD,EAAYyD,EAAMxN,OACnC7S,EAAOS,UAAUO,EAAwB,KAErC0P,WAAW,IAAMmM,GAAiBD,EAAYyD,EAAMxN,OAAQ,KAEhE7S,EAAOS,UAAUS,EAAU,KAEvBwP,WAAW,IAAMmM,GAAiBD,EAAYyD,EAAMxN,OAAQ,KAEhE7S,EAAOS,UAAUI,EAAW,KAExB6P,WAAW,IAAMmM,GAAiBD,EAAYyD,EAAMxN,OAAQ,KkBkB5DyN,EAAiBzN,MAAAA,EAAO5J,IAAAA,IACxB/I,KAAKqgB,KAAO5N,GAAa1J,IAAAA,EAAK2J,OAAQ1S,KAAK0S,OAAQxB,MAAAA,EAAOyB,MAAAA,EAAON,MAAAA,IACjEvS,EAAO2C,MAAM3B,EAAwB,IAAM6R,EAAM2N,mBAAmBpP,IAEpEnI,EAAIoB,SACJwI,EAAMxI,SACNsG,EAAQtG,SACRkI,EAAMlI,SACNnK,KAAK0S,OAAOvI,SACZ+G,EAAM/G,SAGVpK,kBACI4P,EAAWwJ,KACP,giBASJrJ,SAASyQ,iBACL,UACA,KACI5Q,EAAW+H,QACX1X,KAAKwgB,aACLhQ,WAAW,IAAMxQ,KAAK0S,OAAO+N,iBAAkB,OAEjDC,MAAM,IAIhB3gB,aACIC,KAAKqgB,KAAKhG,UC7DlB,iBACU0F,GAAYY,UAAU,GAC5BZ,GAAYa,mBAFhB","sourcesContent":["// exported for testing\nexport class Pubsub {\n    constructor() {\n        this.subscribers = [];\n    }\n    subscribe(message, callback) {\n        this.subscribers.push({ message, callback });\n    }\n    reset(messageToBeReset, callback = null) {\n        this.subscribers = this.subscribers.filter(({ message }) => message !== messageToBeReset);\n        if (callback) {\n            this.subscribe(messageToBeReset, callback);\n        }\n    }\n    publish(incomingMessage, payload) {\n        this.subscribers.forEach(({ message, callback }) => message === incomingMessage && callback(payload));\n    }\n}\n\nexport default new Pubsub();\n","export const GAME_OVER = 0;\nexport const DROP_BOMB = 1;\nexport const DROP_SHIP = 2;\nexport const MAP_CHANGED = 3;\nexport const USERS_POSSIBLY_OFFLINE = 4;\nexport const BOMB_EXPLODES = 5;\nexport const INFECTED = 6;\n","/**\n * SfxrParams\n *\n * Copyright 2010 Thomas Vian\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @author Thomas Vian\n */\nfunction SfxrParams() {\n    //--------------------------------------------------------------------------\n    //\n    //  Settings String Methods\n    //\n    //--------------------------------------------------------------------------\n\n    /**\n     * Parses a settings array into the parameters\n     * @param array Array of the settings values, where elements 0 - 23 are\n     *                a: waveType\n     *                b: attackTime\n     *                c: sustainTime\n     *                d: sustainPunch\n     *                e: decayTime\n     *                f: startFrequency\n     *                g: minFrequency\n     *                h: slide\n     *                i: deltaSlide\n     *                j: vibratoDepth\n     *                k: vibratoSpeed\n     *                l: changeAmount\n     *                m: changeSpeed\n     *                n: squareDuty\n     *                o: dutySweep\n     *                p: repeatSpeed\n     *                q: phaserOffset\n     *                r: phaserSweep\n     *                s: lpFilterCutoff\n     *                t: lpFilterCutoffSweep\n     *                u: lpFilterResonance\n     *                v: hpFilterCutoff\n     *                w: hpFilterCutoffSweep\n     *                x: masterVolume\n     * @return If the string successfully parsed\n     */\n    this.setSettings = function(values) {\n        for (let i = 0; i < 24; i++) {\n            this[String.fromCharCode(97 + i)] = values[i] || 0;\n        }\n\n        // I moved this here from the reset(true) function\n        if (this.c < 0.01) {\n            this.c = 0.01;\n        }\n\n        const totalTime = this.b + this.c + this.e;\n        if (totalTime < 0.18) {\n            const multiplier = 0.18 / totalTime;\n            this.b *= multiplier;\n            this.c *= multiplier;\n            this.e *= multiplier;\n        }\n    };\n}\n\n/**\n * SfxrSynth\n *\n * Copyright 2010 Thomas Vian\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @author Thomas Vian\n */\nfunction SfxrSynth() {\n    // All variables are kept alive through function closures\n\n    //--------------------------------------------------------------------------\n    //\n    //  Sound Parameters\n    //\n    //--------------------------------------------------------------------------\n\n    this._params = new SfxrParams(); // Params instance\n\n    //--------------------------------------------------------------------------\n    //\n    //  Synth Variables\n    //\n    //--------------------------------------------------------------------------\n\n    let _envelopeLength0, // Length of the attack stage\n        _envelopeLength1, // Length of the sustain stage\n        _envelopeLength2, // Length of the decay stage\n        _period, // Period of the wave\n        _maxPeriod, // Maximum period before sound stops (from minFrequency)\n        _slide, // Note slide\n        _deltaSlide, // Change in slide\n        _changeAmount, // Amount to change the note by\n        _changeTime, // Counter for the note change\n        _changeLimit, // Once the time reaches this limit, the note changes\n        _squareDuty, // Offset of center switching point in the square wave\n        _dutySweep; // Amount to change the duty by\n\n    //--------------------------------------------------------------------------\n    //\n    //  Synth Methods\n    //\n    //--------------------------------------------------------------------------\n\n    /**\n     * Resets the runing variables from the params\n     * Used once at the start (total reset) and for the repeat effect (partial reset)\n     */\n    this.reset = function() {\n        // Shorter reference\n        const p = this._params;\n\n        _period = 100 / (p.f * p.f + 0.001);\n        _maxPeriod = 100 / (p.g * p.g + 0.001);\n\n        _slide = 1 - p.h * p.h * p.h * 0.01;\n        _deltaSlide = -p.i * p.i * p.i * 0.000001;\n\n        if (!p.a) {\n            _squareDuty = 0.5 - p.n / 2;\n            _dutySweep = -p.o * 0.00005;\n        }\n\n        _changeAmount = p.l > 0 ? 1 - p.l * p.l * 0.9 : 1 + p.l * p.l * 10;\n        _changeTime = 0;\n        _changeLimit = p.m == 1 ? 0 : (1 - p.m) * (1 - p.m) * 20000 + 32;\n    };\n\n    // I split the reset() function into two functions for better readability\n    this.totalReset = function() {\n        this.reset();\n\n        // Shorter reference\n        const p = this._params;\n\n        // Calculating the length is all that remained here, everything else moved somewhere\n        _envelopeLength0 = p.b * p.b * 100000;\n        _envelopeLength1 = p.c * p.c * 100000;\n        _envelopeLength2 = p.e * p.e * 100000 + 10;\n        // Full length of the volume envelop (and therefore sound)\n        return (_envelopeLength0 + _envelopeLength1 + _envelopeLength2) | 0;\n    };\n\n    /**\n     * Writes the wave to the supplied buffer ByteArray\n     * @param buffer A ByteArray to write the wave to\n     * @return If the wave is finished\n     */\n    this.synthWave = function(buffer, length) {\n        // Shorter reference\n        const p = this._params;\n\n        // If the filters are active\n        const _filters = p.s != 1 || p.v;\n\n        // Cutoff multiplier which adjusts the amount the wave position can move\n\n        let _hpFilterCutoff = p.v * p.v * 0.1;\n\n        // Speed of the high-pass cutoff multiplier\n\n        const _hpFilterDeltaCutoff = 1 + p.w * 0.0003;\n\n        // Cutoff multiplier which adjusts the amount the wave position can move\n\n        let _lpFilterCutoff = p.s * p.s * p.s * 0.1;\n\n        // Speed of the low-pass cutoff multiplier\n\n        const _lpFilterDeltaCutoff = 1 + p.t * 0.0001;\n\n        // If the low pass filter is active\n\n        const _lpFilterOn = p.s != 1;\n\n        // masterVolume * masterVolume (for quick calculations)\n\n        const _masterVolume = p.x * p.x;\n\n        // Minimum frequency before stopping\n\n        const _minFreqency = p.g;\n\n        // If the phaser is active\n\n        const _phaser = p.q || p.r;\n\n        // Change in phase offset\n\n        const _phaserDeltaOffset = p.r * p.r * p.r * 0.2;\n\n        // Phase offset for phaser effect\n\n        let _phaserOffset = p.q * p.q * (p.q < 0 ? -1020 : 1020);\n\n        // Once the time reaches this limit, some of the    iables are reset\n\n        const _repeatLimit = p.p ? (((1 - p.p) * (1 - p.p) * 20000) | 0) + 32 : 0;\n\n        // The punch factor (louder at begining of sustain)\n\n        const _sustainPunch = p.d;\n\n        // Amount to change the period of the wave by at the peak of the vibrato wave\n\n        const _vibratoAmplitude = p.j / 2;\n\n        // Speed at which the vibrato phase moves\n\n        const _vibratoSpeed = p.k * p.k * 0.01;\n\n        // The type of wave to generate\n\n        const _waveType = p.a;\n\n        let _envelopeLength = _envelopeLength0;\n        // Length of the current envelope stage\n\n        const _envelopeOverLength0 = 1 / _envelopeLength0;\n        // (for quick calculations)\n\n        const _envelopeOverLength1 = 1 / _envelopeLength1;\n        // (for quick calculations)\n\n        const _envelopeOverLength2 = 1 / _envelopeLength2; // (for quick calculations)\n\n        // Damping muliplier which restricts how fast the wave position can move\n        let _lpFilterDamping = (5 / (1 + p.u * p.u * 20)) * (0.01 + _lpFilterCutoff);\n        if (_lpFilterDamping > 0.8) {\n            _lpFilterDamping = 0.8;\n        }\n        _lpFilterDamping = 1 - _lpFilterDamping;\n\n        let _finished = false;\n        // If the sound has finished\n\n        let _envelopeStage = 0;\n        // Current stage of the envelope (attack, sustain, decay, end)\n\n        let _envelopeTime = 0;\n        // Current time through current enelope stage\n\n        let _envelopeVolume = 0;\n        // Current volume of the envelope\n\n        let _hpFilterPos = 0;\n        // Adjusted wave position after high-pass filter\n\n        let _lpFilterDeltaPos = 0;\n        // Change in low-pass wave position, as allowed by the cutoff and damping\n\n        let _lpFilterOldPos,\n\n\n        // Previous low-pass wave position\n\n         \n _lpFilterPos = 0;\n\n\n\n        // Adjusted wave position after low-pass filter\n\n         \n \nlet _periodTemp,\n\n\n        // Period modified by vibrato\n\n         _phase = 0;\n\n\n        // Phase through the wave\n\n         \nlet _phaserInt;\n\n        // Integer phaser offset, for bit maths\n\n        let _phaserPos = 0;\n\n        // Position through the phaser buffer\n\n        let _pos,\n\n\n\n        // Phase expresed as a Number from 0-1, used for fast sin approx\n\n         \n \n \n _repeatTime = 0;\n\n\n\n\n // Counter for the repeats\n            \n \n \n \n \nvar _sample;\n\n\n\n\n // Sub-sample calculated 8 times per actual sample, averaged out to get the super sample\n            \n \n \n \n \nvar _superSample;\n        // Actual sample writen to the wave\n\n        let _vibratoPhase = 0; // Phase through the vibrato sine wave\n\n        // Buffer of wave values used to create the out of phase second wave\n        const _phaserBuffer = new Array(1024);\n\n        // Buffer of random values used to generate noise\n\n        const _noiseBuffer = new Array(32);\n        for (var i = _phaserBuffer.length; i--; ) {\n            _phaserBuffer[i] = 0;\n        }\n        for (var i = _noiseBuffer.length; i--; ) {\n            _noiseBuffer[i] = Math.random() * 2 - 1;\n        }\n\n        for (var i = 0; i < length; i++) {\n            if (_finished) {\n                return i;\n            }\n\n            // Repeats every _repeatLimit times, partially resetting the sound parameters\n            if (_repeatLimit) {\n                if (++_repeatTime >= _repeatLimit) {\n                    _repeatTime = 0;\n                    this.reset();\n                }\n            }\n\n            // If _changeLimit is reached, shifts the pitch\n            if (_changeLimit) {\n                if (++_changeTime >= _changeLimit) {\n                    _changeLimit = 0;\n                    _period *= _changeAmount;\n                }\n            }\n\n            // Acccelerate and apply slide\n            _slide += _deltaSlide;\n            _period *= _slide;\n\n            // Checks for frequency getting too low, and stops the sound if a minFrequency was set\n            if (_period > _maxPeriod) {\n                _period = _maxPeriod;\n                if (_minFreqency > 0) {\n                    _finished = true;\n                }\n            }\n\n            _periodTemp = _period;\n\n            // Applies the vibrato effect\n            if (_vibratoAmplitude > 0) {\n                _vibratoPhase += _vibratoSpeed;\n                _periodTemp *= 1 + Math.sin(_vibratoPhase) * _vibratoAmplitude;\n            }\n\n            _periodTemp |= 0;\n            if (_periodTemp < 8) {\n                _periodTemp = 8;\n            }\n\n            // Sweeps the square duty\n            if (!_waveType) {\n                _squareDuty += _dutySweep;\n                if (_squareDuty < 0) {\n                    _squareDuty = 0;\n                } else if (_squareDuty > 0.5) {\n                    _squareDuty = 0.5;\n                }\n            }\n\n            // Moves through the different stages of the volume envelope\n            if (++_envelopeTime > _envelopeLength) {\n                _envelopeTime = 0;\n\n                switch (++_envelopeStage) {\n                    case 1:\n                        _envelopeLength = _envelopeLength1;\n                        break;\n                    case 2:\n                        _envelopeLength = _envelopeLength2;\n                }\n            }\n\n            // Sets the volume based on the position in the envelope\n            switch (_envelopeStage) {\n                case 0:\n                    _envelopeVolume = _envelopeTime * _envelopeOverLength0;\n                    break;\n                case 1:\n                    _envelopeVolume = 1 + (1 - _envelopeTime * _envelopeOverLength1) * 2 * _sustainPunch;\n                    break;\n                case 2:\n                    _envelopeVolume = 1 - _envelopeTime * _envelopeOverLength2;\n                    break;\n                case 3:\n                    _envelopeVolume = 0;\n                    _finished = true;\n            }\n\n            // Moves the phaser offset\n            if (_phaser) {\n                _phaserOffset += _phaserDeltaOffset;\n                _phaserInt = _phaserOffset | 0;\n                if (_phaserInt < 0) {\n                    _phaserInt = -_phaserInt;\n                } else if (_phaserInt > 1023) {\n                    _phaserInt = 1023;\n                }\n            }\n\n            // Moves the high-pass filter cutoff\n            if (_filters && _hpFilterDeltaCutoff) {\n                _hpFilterCutoff *= _hpFilterDeltaCutoff;\n                if (_hpFilterCutoff < 0.00001) {\n                    _hpFilterCutoff = 0.00001;\n                } else if (_hpFilterCutoff > 0.1) {\n                    _hpFilterCutoff = 0.1;\n                }\n            }\n\n            _superSample = 0;\n            for (let j = 8; j--; ) {\n                // Cycles through the period\n                _phase++;\n                if (_phase >= _periodTemp) {\n                    _phase %= _periodTemp;\n\n                    // Generates new random noise for this period\n                    if (_waveType == 3) {\n                        for (let n = _noiseBuffer.length; n--; ) {\n                            _noiseBuffer[n] = Math.random() * 2 - 1;\n                        }\n                    }\n                }\n\n                // Gets the sample from the oscillator\n                switch (_waveType) {\n                    case 0: // Square wave\n                        _sample = _phase / _periodTemp < _squareDuty ? 0.5 : -0.5;\n                        break;\n                    case 1: // Saw wave\n                        _sample = 1 - (_phase / _periodTemp) * 2;\n                        break;\n                    case 2: // Sine wave (fast and accurate approx)\n                        _pos = _phase / _periodTemp;\n                        _pos = _pos > 0.5 ? (_pos - 1) * 6.28318531 : _pos * 6.28318531;\n                        _sample =\n                            _pos < 0\n                                ? 1.27323954 * _pos + 0.405284735 * _pos * _pos\n                                : 1.27323954 * _pos - 0.405284735 * _pos * _pos;\n                        _sample =\n                            _sample < 0\n                                ? 0.225 * (_sample * -_sample - _sample) + _sample\n                                : 0.225 * (_sample * _sample - _sample) + _sample;\n                        break;\n                    case 3: // Noise\n                        _sample = _noiseBuffer[Math.abs(((_phase * 32) / _periodTemp) | 0)];\n                }\n\n                // Applies the low and high pass filters\n                if (_filters) {\n                    _lpFilterOldPos = _lpFilterPos;\n                    _lpFilterCutoff *= _lpFilterDeltaCutoff;\n                    if (_lpFilterCutoff < 0) {\n                        _lpFilterCutoff = 0;\n                    } else if (_lpFilterCutoff > 0.1) {\n                        _lpFilterCutoff = 0.1;\n                    }\n\n                    if (_lpFilterOn) {\n                        _lpFilterDeltaPos += (_sample - _lpFilterPos) * _lpFilterCutoff;\n                        _lpFilterDeltaPos *= _lpFilterDamping;\n                    } else {\n                        _lpFilterPos = _sample;\n                        _lpFilterDeltaPos = 0;\n                    }\n\n                    _lpFilterPos += _lpFilterDeltaPos;\n\n                    _hpFilterPos += _lpFilterPos - _lpFilterOldPos;\n                    _hpFilterPos *= 1 - _hpFilterCutoff;\n                    _sample = _hpFilterPos;\n                }\n\n                // Applies the phaser effect\n                if (_phaser) {\n                    _phaserBuffer[_phaserPos % 1024] = _sample;\n                    _sample += _phaserBuffer[(_phaserPos - _phaserInt + 1024) % 1024];\n                    _phaserPos++;\n                }\n\n                _superSample += _sample;\n            }\n\n            // Averages out the super samples and applies volumes\n            _superSample *= 0.125 * _envelopeVolume * _masterVolume;\n\n            // Clipping if too loud\n            buffer[i] = _superSample >= 1 ? 32767 : _superSample <= -1 ? -32768 : (_superSample * 32767) | 0;\n        }\n\n        return length;\n    };\n}\n\n// Adapted from http://codebase.es/riffwave/\nconst synth = new SfxrSynth();\n// Export for the Closure Compiler\nexport default function(settings) {\n    // Initialize SfxrParams\n    synth._params.setSettings(settings);\n    // Synthesize Wave\n    const envelopeFullLength = synth.totalReset();\n    const data = new Uint8Array((((envelopeFullLength + 1) / 2) | 0) * 4 + 44);\n    let used = synth.synthWave(new Uint16Array(data.buffer, 44), envelopeFullLength) * 2;\n    const dv = new Uint32Array(data.buffer, 0, 44);\n    // Initialize header\n    dv[0] = 0x46464952; // \"RIFF\"\n    dv[1] = used + 36; // put total size here\n    dv[2] = 0x45564157; // \"WAVE\"\n    dv[3] = 0x20746d66; // \"fmt \"\n    dv[4] = 0x00000010; // size of the following\n    dv[5] = 0x00010001; // Mono: 1 channel, PCM format\n    dv[6] = 0x0000ac44; // 44,100 samples per second\n    dv[7] = 0x00015888; // byte rate: two bytes per sample\n    dv[8] = 0x00100002; // 16 bits per sample, aligned on every two bytes\n    dv[9] = 0x61746164; // \"data\"\n    dv[10] = used; // put number of samples here\n\n    // Base64 encoding written by me, @maettig\n    used += 44;\n    let i = 0;\n\n    const base64Characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n    let output = 'data:audio/wav;base64,';\n    for (; i < used; i += 3) {\n        const a = (data[i] << 16) | (data[i + 1] << 8) | data[i + 2];\n        output +=\n            base64Characters[a >> 18] +\n            base64Characters[(a >> 12) & 63] +\n            base64Characters[(a >> 6) & 63] +\n            base64Characters[a & 63];\n    }\n    i -= used;\n    return output.slice(0, output.length - i) + '=='.slice(0, i);\n}\n","import jsfxr from '../../vendor/sfxr.js';\nimport generateSounds from './sounds.js';\n\nexport default function ArcadeAudio() {\n    this.sounds = {};\n    generateSounds(this);\n}\n\nArcadeAudio.prototype.add = function(key, count, settings) {\n    this.sounds[key] = [];\n    settings.forEach(function(elem, index) {\n        this.sounds[key].push({\n            tick: 0,\n            count,\n            pool: []\n        });\n        for (let i = 0; i < count; i++) {\n            const audio = new Audio();\n            audio.src = jsfxr(elem);\n            this.sounds[key][index].pool.push(audio);\n        }\n    }, this);\n};\n\nArcadeAudio.prototype.play = function(key) {\n    const sound = this.sounds[key];\n    const soundData = sound.length > 1 ? sound[Math.floor(Math.random() * sound.length)] : sound[0];\n    soundData.pool[soundData.tick].play();\n    if (soundData.tick < soundData.count - 1) {\n        soundData.tick++;\n    } else {\n        soundData.tick = 0;\n    }\n};\n","/* eslint-disable no-sparse-arrays */\nexport default function generateSounds(aa) {\n    aa.add('infected', 3, [\n        [2, , 0.2916, , 0.2587, 0.9356, 0.3909, -0.2493, , , , , , 0.3583, 0.1617, , , , 1, , , 0.1217, , 0.5]\n    ]);\n\n    aa.add('drop-bomb', 3, [[0, , 0.0641, 0.5296, 0.1228, 0.4195, , , , , , 0.3029, 0.6261, , , , , , 1, , , , , 0.5]]);\n\n    aa.add('drop-ship', 1, [\n        [0, , 0.57, , 0.1398, 0.61, , -0.26, 0.1, , , 0.02, , 0.3325, , , , , 0.9793, , , , , 0.5]\n    ]);\n\n    aa.add('explode', 3, [\n        [3, , 0.1606, 0.5988, 0.2957, 0.1157, , -0.3921, , , , , , , , , 0.3225, -0.2522, 1, , , , , 0.25]\n    ]);\n}\n/* eslint-enable no-alert, no-console */\n","import { pubsub, DROP_BOMB, BOMB_EXPLODES, INFECTED, DROP_SHIP } from '../pubsub/index.js';\nimport ArcadeAudio from './ArcadeAudio.js';\n\nconst aa = new ArcadeAudio();\n\nexport function initAudio() {\n    pubsub.subscribe(DROP_BOMB, () => aa.play('drop-bomb'));\n    pubsub.subscribe(BOMB_EXPLODES, () => aa.play('explode'));\n    pubsub.subscribe(INFECTED, () => aa.play('infected'));\n    pubsub.subscribe(DROP_SHIP, () => aa.play('drop-ship'));\n\n    /*\n   * GENERATE NEW SOUNDS ON http://www.superflashbros.net/as3sfxr/\n   * CMD + C copies the values\n   *\n   * */\n}\n","export const canvasWidth = 800;\nexport const canvasHeight = 600;\n\n/* map */\nexport const tileWidth = 100;\nexport const tileHeight = 100;\nexport const mapPadding = 4;\n\n/* virus */\nexport const virusBlipInterval = 1000;\nexport const virusBlipTtl = 180;\n\n/* colors */\nexport const lightGreen = '#75a042';\nexport const darkGreen = '#365b1d';\nexport const lightBlue = '#52638a';\nexport const darkBlue = '#2b3653';\nexport const lightRed = '#cd3926';\nexport const darkRed = '#7a2431';\n\nexport const collisionRadius = 30;\nexport const bombCooldown = 100;\nexport const teleportCooldownTimeout = 600;\n","/* global kontra */\n\nimport { collisionRadius, tileHeight, tileWidth } from '../config.js';\nimport { drawBomb, updateBomb } from './index.js';\nimport { FUSE_BURNING } from './index.js';\n\nexport default (map, { row, col }) => {\n    const { x, y } = map.getXAndY({ row, col });\n    return {\n        context: kontra.context,\n        x,\n        y,\n        collisionRadius,\n        fuseLength: 100,\n        status: FUSE_BURNING,\n        shrapnel: [],\n        explosionDuration: 0,\n        map,\n        mapX: col * tileWidth,\n        mapY: row * tileHeight,\n        row,\n        col,\n        update() {\n            ({\n                status: this.status,\n                fuseLength: this.fuseLength,\n                explosionDuration: this.explosionDuration,\n                x: this.x,\n                y: this.y\n            } = updateBomb(this));\n        },\n        render() {\n            drawBomb(this);\n        }\n    };\n};\n","export const FUSE_BURNING = 0;\nexport const EXPLODING = 1;\nexport const EXPLODED = 2;\n","import { EXPLODING, FUSE_BURNING } from './constants.js';\nimport { drawBombWithFuse } from './index.js';\n\nexport default sprite => {\n    const { status, shrapnel } = sprite;\n    switch (status) {\n        case FUSE_BURNING:\n            drawBombWithFuse(sprite);\n            break;\n        case EXPLODING:\n            shrapnel.forEach(s => s.render());\n            break;\n        default:\n    }\n};\n","import { tileHeight, tileWidth, canvasWidth, canvasHeight } from '../config.js';\n\nexport default ({ col, row }) => ({\n    sx: col * tileWidth - canvasWidth / 2 + tileWidth / 2,\n    sy: row * tileHeight - canvasHeight / 2 + tileHeight / 2\n});\n","export const N = 'N';\nexport const E = 'E';\nexport const S = 'S';\nexport const W = 'W';\n","import { directionSwitchMap, getNextTile } from './index.js';\nimport { isValidTile } from '../utils/index.js';\n\nexport default (map, { x, y }, direction) => {\n    const tile = map.tileAtLayer('main', { x, y });\n    if (!isValidTile(tile) || !directionSwitchMap[tile].allowed.includes(direction)) {\n        return false;\n    }\n    const nextTile = getNextTile(map, { x, y }, direction);\n    return isValidTile(nextTile);\n};\n","import { directionSwitchMap, directionIsAllowed } from './index.js';\nimport { isValidTile, getRandomInt } from '../utils/index.js';\n\nexport default (map, { x, y }, curr) => {\n    const tile = map.tileAtLayer('main', { x, y });\n    /* player accidentally stepped onto a broken conduit tile */\n    if (!isValidTile(tile)) {\n        throw new Error('dropped');\n    }\n    const nextDirection = directionSwitchMap[tile].change[curr] || curr;\n    if (directionIsAllowed(map, { x, y }, nextDirection)) {\n        return nextDirection;\n    }\n    const otherDirections = directionSwitchMap[tile].allowed.filter(dir => directionIsAllowed(map, { x, y }, dir));\n    switch (otherDirections.length) {\n        case 0:\n            /* oh no, player locked themselves in! */\n            throw new Error('locked in');\n        case 1:\n            return otherDirections[0];\n        default:\n            return otherDirections[getRandomInt(0, otherDirections.length - 1)];\n    }\n};\n","import { N, E, S, W } from './index.js';\n\nexport default {\n    // curve from S to E\n    1: {\n        allowed: [S, E],\n        change: {\n            [N]: E,\n            [W]: S\n        }\n    },\n    // curve from W to S\n    2: {\n        allowed: [W, S],\n        change: {\n            [N]: W,\n            [E]: S\n        }\n    },\n    // straight from N to S\n    3: {\n        allowed: [N, S],\n        change: {}\n    },\n    // T section W, N, E\n    4: {\n        allowed: [W, N, E],\n        change: {\n            [S]: N\n        }\n    },\n    // T section N, E, S\n    5: {\n        allowed: [N, E, S],\n        change: {\n            [W]: E\n        }\n    },\n    // T section W, E, S\n    6: {\n        allowed: [W, E, S],\n        change: {\n            [N]: S\n        }\n    },\n    // curve from N to E\n    9: {\n        allowed: [N, E],\n        change: {\n            [S]: E,\n            [W]: N\n        }\n    },\n    // curve from W to N\n    10: {\n        allowed: [W, N],\n        change: {\n            [E]: N,\n            [S]: W\n        }\n    },\n    // straight from W to E\n    11: {\n        allowed: [W, E],\n        change: {}\n    },\n    // crossing\n    12: {\n        allowed: [N, E, S, W],\n        change: {}\n    },\n    // T section N, S, W\n    13: {\n        allowed: [N, S, W],\n        change: {\n            [E]: W\n        }\n    },\n    // terminus S\n    17: {\n        allowed: [S],\n        change: {\n            [N]: S\n        }\n    },\n    // terminus W\n    18: {\n        allowed: [W],\n        change: {\n            [E]: W\n        }\n    },\n    // terminus N\n    19: {\n        allowed: [N],\n        change: {\n            [S]: N\n        }\n    },\n    // terminus E\n    20: {\n        allowed: [E],\n        change: {\n            [W]: E\n        }\n    }\n};\n","import { directionSwitchMap } from './index.js';\n\nconst intersectionTiles = [];\nfor (const [tile, { allowed }] of Object.entries(directionSwitchMap)) {\n    if (allowed.length > 2) {\n        intersectionTiles.push(Number(tile));\n    }\n}\n\nexport default tile => intersectionTiles.includes(tile);\n","import { N, E, S, W } from './index.js';\nimport { tileHeight, tileWidth } from '../config.js';\n\nexport default (map, { x, y }, direction) =>\n    map.tileAtLayer('main', {\n        x: direction === E ? x + tileWidth : direction === W ? x - tileWidth : x,\n        y: direction === N ? y - tileHeight : direction === S ? y + tileHeight : y\n    });\n","export default degrees => (degrees * Math.PI) / 180;\n","export default (a, b) => {\n    const min = Math.min(a, b);\n    const max = Math.max(a, b);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n","import { collides } from './index.js';\n\nexport default (arr1, arr2) => {\n    const collisions = [];\n    for (let i1 = 0; i1 < arr1.length; i1++) {\n        const sprite1 = arr1[i1];\n        for (let i2 = 0; i2 < arr2.length; i2++) {\n            const sprite2 = arr2[i2];\n            if (collides(sprite1, sprite2)) {\n                collisions.push([sprite1, sprite2]);\n            }\n        }\n    }\n    return collisions;\n};\n","export default (sprite1, sprite2) => {\n    const dx = sprite1.x - sprite2.x;\n    const dy = sprite1.y - sprite2.y;\n    return Math.sqrt(dx * dx + dy * dy) < sprite1.collisionRadius + sprite2.collisionRadius;\n};\n","export default tile => (tile > 0 && tile < 25) || (tile > 30 && tile < 33) || (tile > 37 && tile < 41) || tile > 44;\n","import { lightRed, lightBlue, darkBlue } from '../config.js';\nimport { getRandomInt as ri } from '../utils/index.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, fuseLength } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(deg2rad(-45));\n\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.fillStyle = darkBlue;\n\n    /* bomb */\n    ctx.beginPath();\n    ctx.moveTo(23, -10);\n    ctx.lineTo(40, -10);\n    ctx.lineTo(40, 10);\n    ctx.lineTo(23, 10);\n    ctx.arc(0, 0, 25, deg2rad(19), deg2rad(341));\n    ctx.fill();\n    ctx.stroke();\n\n    /* fuse */\n    const fuseRad = 25; // radius of the fuse arc\n    const fuseDeg = (fuseLength / 100) * 90; // length of the fuse arc in degrees\n    ctx.beginPath();\n    ctx.moveTo(40, 0);\n    ctx.arc(40, 25, fuseRad, deg2rad(270), deg2rad(270 + fuseDeg));\n    ctx.stroke();\n\n    /* sparks */\n    const sparkCX = Math.cos(deg2rad(fuseDeg - 90)) * fuseRad + 40; // X-coord of sparks center\n    const sparkCY = Math.sin(deg2rad(fuseDeg - 90)) * fuseRad + 25; // Y-coord of sparks centers\n    const sparkRad = 15; // radius of the sparks circle\n    ctx.fillStyle = lightRed;\n    for (let i = 0; i < 10; i++) {\n        const sparkX = Math.cos(deg2rad(ri(0, 360))) * ri(0, sparkRad) + sparkCX;\n        const sparkY = Math.sin(deg2rad(ri(0, 360))) * ri(0, sparkRad) + sparkCY;\n        ctx.fillRect(sparkX - 1, sparkY - 1, 3, 3);\n    }\n\n    ctx.restore();\n};\n","class MessageBox {\n    constructor() {\n        this.timeoutHandler = null;\n        this.div = document.createElement('div');\n        this.div.setAttribute('id', 'mbx');\n        const wrapper = document.getElementById('wrapper');\n        wrapper.appendChild(this.div);\n    }\n\n    show(message) {\n        clearTimeout(this.timeoutHandler);\n        this.div.style.transition = '3s';\n        this.div.innerHTML = `<div>${message}</div>`;\n        this.div.style.opacity = 1;\n    }\n\n    flash(message) {\n        clearTimeout(this.timeoutHandler);\n        this.div.style.transition = '0.5s';\n        this.div.innerHTML = `<div>${message}</div>`;\n        this.div.style.opacity = 1;\n        this.timeoutHandler = setTimeout(() => (this.div.style.opacity = 0), 500);\n    }\n\n    clear() {\n        clearTimeout(this.timeoutHandler);\n        this.div.style.transition = '0.5s';\n        this.div.style.opacity = 0;\n    }\n}\nexport default new MessageBox();\n","import { createServer } from './index.js';\nimport { multiCollides } from '../utils/index.js';\nimport { messageBox } from '../messageBox/index.js';\nimport { GAME_OVER, pubsub } from '../pubsub/index.js';\n\nclass Servers {\n    constructor() {\n        this.servers = [];\n        this.nextServerPointer = 0;\n        this.gameOver = false;\n        pubsub.subscribe(GAME_OVER, () => (this.gameOver = true));\n    }\n    init(map, serverCoordinates = []) {\n        this.map = map;\n        serverCoordinates.forEach(({ col, row }) => this.servers.push(createServer({ map, row, col })));\n        return this;\n    }\n    update() {\n        this.servers.forEach(server => server.update());\n    }\n    render() {\n        this.servers.forEach(server => server.render());\n    }\n    destroy({ col, row }) {\n        const server = this.find({ col, row });\n        if (server) {\n            server.broken = true;\n        }\n    }\n    infect(virus) {\n        const availableServers = this.getAvailableServers();\n        const collisions = multiCollides(availableServers, [virus]);\n\n        if (collisions.length === 0) {\n            return;\n        }\n\n        collisions.forEach(([server]) => {\n            /* eslint-disable no-param-reassign */\n            server.infected = true;\n        });\n\n        if (this.gameOver) {\n            return;\n        }\n\n        if (this.getAvailableServers().length === 0) {\n            messageBox.flash('all servers destroyed or infected – be careful');\n            return;\n        }\n\n        messageBox.flash('server infected!');\n    }\n    find({ col, row }) {\n        return this.servers.find(server => server.col === col && server.row === row);\n    }\n    getAvailableServers() {\n        return this.servers.filter(server => !(server.broken || server.infected));\n    }\n    getRandom() {\n        const availableServers = this.getAvailableServers();\n        return availableServers[Math.floor(Math.random() * availableServers.length)];\n    }\n    getNext() {\n        const availableServers = this.getAvailableServers();\n        const isNextPointerInRange = this.nextServerPointer + 1 < availableServers.length;\n        this.nextServerPointer = isNextPointerInRange ? this.nextServerPointer + 1 : 0;\n        return availableServers[this.nextServerPointer];\n    }\n    getInfectedServers() {\n        return this.servers.filter(server => server.infected);\n    }\n}\n\nexport default new Servers();\n","/* global kontra */\n\nimport { drawServer } from './index.js';\nimport { tileWidth, tileHeight, collisionRadius } from '../config.js';\n\nexport default ({ map, row, col }) => {\n    const { x, y } = map.getXAndY({ row, col });\n    return {\n        context: kontra.context,\n        x,\n        y,\n        row,\n        col,\n        map,\n        mapX: col * tileWidth,\n        mapY: row * tileHeight,\n        broken: false,\n        infected: false,\n        collisionRadius,\n        update() {\n            ({ x: this.x, y: this.y } = map.getXAndY({ mapX: this.mapX, mapY: this.mapY }));\n        },\n        render() {\n            drawServer(this);\n        }\n    };\n};\n","/* creates canvas moveTo and lineTo commands from arrays; doing this mostly to save a couple of bytes */\nexport default (ctx, data) => data.forEach(([draw, x, y]) => ctx[draw ? 'lineTo' : 'moveTo'](x, y));\n","/* eslint-disable no-param-reassign */\nimport { darkBlue, lightBlue, darkRed, lightRed } from '../config.js';\nimport { krakel } from '../map/tilesheet/utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, broken, infected } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = infected ? lightRed : lightBlue;\n    ctx.fillStyle = infected ? darkRed : darkBlue;\n    ctx.beginPath();\n    krakel(ctx, [\n        [0, 30, -48],\n        [1, 48, -30],\n        [1, 48, 30],\n        [1, 30, 48],\n        [1, -30, 48],\n        [1, -48, 30],\n        [1, -48, -30],\n        [1, -30, -48],\n        [1, 30, -48]\n    ]);\n    ctx.fill();\n    ctx.stroke();\n    if (broken) {\n        ctx.lineWidth = 2;\n        krakel(ctx, [\n            [0, 10, -48],\n            [1, 0, -40],\n            [0, 24, -48],\n            [1, 20, -30],\n            [0, 48, -27],\n            [1, 20, -20],\n            [0, -10, -30],\n            [1, 10, -30],\n            [1, 30, -10],\n            [1, 20, 0],\n            [1, 10, 0],\n            [0, 48, 7],\n            [1, 30, 10],\n            [0, 20, 0],\n            [1, 30, 10],\n            [1, 10, 20],\n            [0, 30, 48],\n            [1, 30, 30],\n            [1, 10, 30],\n            [0, 20, 20],\n            [1, 20, 30],\n            [0, -10, 48],\n            [1, -10, 20],\n            [1, 0, 10],\n            [0, -20, 0],\n            [1, -20, 20],\n            [1, -10, 30],\n            [0, -30, 48],\n            [1, -20, 40],\n            [1, -20, 30],\n            [0, -30, 30],\n            [1, -20, 40],\n            [0, -48, 20],\n            [1, -30, 20],\n            [0, -40, 20],\n            [1, -40, 10],\n            [0, -48, 0],\n            [1, -30, 0],\n            [1, -20, -10],\n            [0, -40, 0],\n            [1, -30, 10],\n            [0, -48, -17],\n            [1, -40, -30],\n            [1, -30, -20],\n            [0, -30, -48],\n            [1, -10, -20],\n            [1, -10, -10],\n            [0, -20, -30],\n            [1, -20, -20],\n            [1, -30, -10]\n        ]);\n        ctx.stroke();\n    }\n    ctx.restore();\n};\n","/* global kontra */\n\nimport { FUSE_BURNING, EXPLODING, EXPLODED } from './index.js';\nimport { createShrapnel } from './index.js';\nimport { pubsub, MAP_CHANGED, USERS_POSSIBLY_OFFLINE, BOMB_EXPLODES } from '../pubsub/index.js';\nimport { servers } from '../server/index.js';\n\nexport default sprite => {\n    let { status, fuseLength, explosionDuration, x, y } = sprite;\n    const { shrapnel, map, mapX, mapY, row, col } = sprite;\n\n    ({ x, y } = map.getXAndY({ mapX, mapY }));\n    switch (status) {\n        case FUSE_BURNING:\n            fuseLength -= 1;\n            if (fuseLength < 0) {\n                status = EXPLODING;\n                pubsub.publish(BOMB_EXPLODES);\n                for (let i = 0; i < 50; i++) {\n                    shrapnel.push(createShrapnel({ x, y }));\n                }\n                if (servers.find({ row, col })) {\n                    servers.destroy({ row, col });\n                } else {\n                    const tile = map.tileAtLayer('main', { row, col });\n                    map.changeTile('main', { row, col }, tile + 24);\n                    pubsub.publish(MAP_CHANGED, map);\n                    pubsub.publish(USERS_POSSIBLY_OFFLINE);\n                }\n            }\n            break;\n        case EXPLODING:\n            shrapnel.forEach(s => s.update());\n            explosionDuration++;\n            if (explosionDuration === 200) {\n                status = EXPLODED;\n            }\n            break;\n        default:\n    }\n    return {\n        status,\n        fuseLength,\n        explosionDuration,\n        x,\n        y\n    };\n};\n","/* global kontra */\nimport { getRandomInt as ri } from '../utils/index.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\nimport { drawShrapnel } from './index.js';\n\nexport default ({ x, y }) => {\n    const dir = ri(0, 360);\n    const speed = ri(5, 15);\n    return {\n        context: kontra.context,\n        x,\n        y,\n        dx: Math.cos(deg2rad(dir)) * speed,\n        dy: Math.sin(deg2rad(dir)) * speed,\n        rotation: ri(0, 360),\n        rotationDir: [ri(-10, -1), ri(1, 10)][ri(0, 1)],\n        update() {\n            this.x += this.dx;\n            this.y += this.dy;\n            this.rotation += this.rotationDir;\n        },\n        render() {\n            drawShrapnel(this);\n        }\n    };\n};\n","import { lightBlue, darkBlue } from '../config.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, rotation } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(deg2rad(rotation));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.fillStyle = darkBlue;\n    ctx.beginPath();\n    ctx.moveTo(0, -10);\n    ctx.lineTo(10, 5);\n    ctx.lineTo(-10, 5);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n};\n","import { pubsub, DROP_BOMB, BOMB_EXPLODES } from '../pubsub/index.js';\nimport { EXPLODED } from './constants.js';\nimport { createBomb } from './index.js';\n\nexport default class {\n    constructor(map) {\n        this.map = map;\n        this.bombs = [];\n        pubsub.subscribe(DROP_BOMB, mapCoords => this.dropBomb(mapCoords));\n    }\n    dropBomb(mapCoords) {\n        if (\n            this.bombs.length > 0 &&\n            this.bombs.find(({ col, row }) => col === mapCoords.col && row === mapCoords.row)\n        ) {\n            // don't drop a bomb where there already is one waiting to explode\n            return;\n        }\n        this.bombs.push(createBomb(this.map, mapCoords));\n    }\n    update() {\n        this.bombs = this.bombs.filter(bomb => {\n            bomb.update();\n            return bomb.status !== EXPLODED;\n        });\n    }\n    render() {\n        this.bombs.forEach(bomb => bomb.render());\n    }\n}\n","import { N, E, S, W } from '../../directions/index.js';\n\nexport default ({ map, direction, speed }) => {\n    switch (direction) {\n        case N:\n            // eslint-disable-next-line no-param-reassign\n            map.sy -= speed;\n            break;\n        case E:\n            // eslint-disable-next-line no-param-reassign\n            map.sx += speed;\n            break;\n        case S:\n            // eslint-disable-next-line no-param-reassign\n            map.sy += speed;\n            break;\n        case W:\n            // eslint-disable-next-line no-param-reassign\n            map.sx -= speed;\n            break;\n        default:\n    }\n};\n","/* global kontra */\n\nimport { moveCamera } from './utils/index.js';\nimport { pubsub, DROP_SHIP } from '../pubsub/index.js';\nimport { servers } from '../server/index.js';\n\nexport default ({ map, player, virus, users, bombs }) => {\n    const times = [];\n    let fps;\n    let shipMoving = true;\n    pubsub.subscribe(DROP_SHIP, () => (shipMoving = false));\n\n    return kontra.gameLoop({\n        update() {\n            virus.update();\n            player.update();\n            player.infect([...servers.getInfectedServers(), virus]);\n            player.teleport();\n            if (shipMoving) {\n                moveCamera({ map, ...player });\n            }\n            users.update();\n            users.infect(virus);\n            bombs.update();\n            servers.update();\n            servers.infect(virus);\n        },\n        render() {\n            map.render();\n            users.render();\n            servers.render();\n            bombs.render();\n            player.render();\n            virus.render();\n            if (process.env.NODE_ENV === 'development') {\n                const now = performance.now();\n                while (times.length > 0 && times[0] <= now - 1000) {\n                    times.shift();\n                }\n                times.push(now);\n                fps = times.length;\n                const { row, col } = map.getRowAndCol({ x: 400, y: 300 });\n\n                // eslint-disable-next-line no-param-reassign\n                window.devbox.innerHTML = `${fps} fps – sx=${map.sx}, sy=${map.sy}, row=${row}, col=${col}`;\n            }\n        }\n    });\n};\n","/* eslint-disable no-param-reassign */\nimport { degreesToRadians as deg2rad } from '../../utils/index.js';\nimport { tileHeight, tileWidth, lightBlue } from '../../config.js';\n\nfunction calculatePointOnArc(deg, r) {\n    return [Math.cos(deg2rad(deg)) * r + 50, Math.sin(deg2rad(deg)) * r + 50];\n}\n\nexport default ({ ctx, row, col, deg, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.rotate(deg2rad(deg));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        ctx.moveTo(20, 50);\n        ctx.arc(50, 50, 30, deg2rad(180), deg2rad(190));\n        ctx.moveTo(...calculatePointOnArc(190, 30));\n        ctx.lineTo(10, 45);\n        ctx.lineTo(10, 35);\n        ctx.lineTo(-10, 40);\n        ctx.lineTo(...calculatePointOnArc(190, 70));\n        ctx.arc(50, 50, 70, deg2rad(190), deg2rad(180), true);\n        ctx.moveTo(50, 20);\n        ctx.arc(50, 50, 30, deg2rad(270), deg2rad(260), true);\n        ctx.moveTo(...calculatePointOnArc(260, 30));\n        ctx.lineTo(40, 10);\n        ctx.lineTo(45, 0);\n        ctx.lineTo(35, 0);\n        ctx.lineTo(...calculatePointOnArc(260, 70));\n        ctx.arc(50, 50, 70, deg2rad(260), deg2rad(270));\n    } else {\n        ctx.moveTo(20, 50);\n        ctx.arc(50, 50, 30, deg2rad(180), deg2rad(270));\n        ctx.moveTo(-20, 50);\n        ctx.arc(50, 50, 70, deg2rad(180), deg2rad(270));\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* eslint-disable no-param-reassign */\nimport { tileWidth, tileHeight, lightBlue } from '../../config.js';\nimport { degreesToRadians as deg2rad } from '../../utils/index.js';\nimport { krakel } from './utils/index.js';\n\nexport default ({ ctx, row, col, deg, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.rotate(deg2rad(deg));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        krakel(ctx, [\n            [0, -20, 50],\n            [1, -20, 30],\n            [1, -10, 40],\n            [1, 0, 25],\n            [1, 10, 35],\n            [1, 20, 30],\n            [1, 20, 50],\n            [0, -20, -50],\n            [1, -20, -40],\n            [1, -10, -25],\n            [1, 0, -35],\n            [1, 10, -30],\n            [1, 20, -40],\n            [1, 20, -50]\n        ]);\n    } else {\n        krakel(ctx, [[0, -20, -50], [1, -20, 50], [0, 20, -50], [1, 20, 50]]);\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* eslint-disable no-param-reassign */\nimport { tileWidth, tileHeight, lightBlue } from '../../config.js';\nimport { degreesToRadians as deg2rad } from '../../utils/index.js';\nimport { krakel } from './utils/index.js';\n\nexport default ({ ctx, row, col, deg, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.rotate(deg2rad(deg));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        krakel(ctx, [\n            [0, 50, 20],\n            [1, 40, 20],\n            [1, 45, 10],\n            [1, 40, -10],\n            [1, 45, -20],\n            [1, 50, -20],\n            [0, 20, -50],\n            [1, 20, -35],\n            [1, 10, -40],\n            [1, 0, -30],\n            [1, -10, -40],\n            [1, -20, -35],\n            [1, -20, -50],\n            [0, -50, -20],\n            [1, -40, -20],\n            [1, -35, -10],\n            [1, -45, 0],\n            [1, -30, 10],\n            [1, -35, 20],\n            [1, -50, 20]\n        ]);\n    } else {\n        krakel(ctx, [\n            [0, -20, -50],\n            [1, -20, -20],\n            [1, -50, -20],\n            [0, 20, -50],\n            [1, 20, -20],\n            [1, 50, -20],\n            [0, -50, 20],\n            [1, 50, 20]\n        ]);\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* eslint-disable no-param-reassign */\nimport { tileWidth, tileHeight, lightBlue } from '../../config.js';\nimport { krakel } from './utils/index.js';\n\nexport default ({ ctx, row, col, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        krakel(ctx, [\n            [0, -20, 50],\n            [1, -20, 45],\n            [1, -10, 40],\n            [1, 0, 45],\n            [1, 10, 35],\n            [1, 20, 40],\n            [1, 20, 50],\n            [0, 50, 20],\n            [1, 40, 20],\n            [1, 45, 10],\n            [1, 40, -10],\n            [1, 45, -20],\n            [1, 50, -20],\n            [0, 20, -50],\n            [1, 20, -35],\n            [1, 10, -40],\n            [1, 0, -30],\n            [1, -10, -40],\n            [1, -20, -35],\n            [1, -20, -50],\n            [0, -50, -20],\n            [1, -40, -20],\n            [1, -35, -10],\n            [1, -45, 0],\n            [1, -30, 10],\n            [1, -35, 20],\n            [1, -50, 20]\n        ]);\n    } else {\n        krakel(ctx, [\n            [0, -20, -50],\n            [1, -20, -20],\n            [1, -50, -20],\n            [0, 20, -50],\n            [1, 20, -20],\n            [1, 50, -20],\n            [0, -50, 20],\n            [1, -20, 20],\n            [1, -20, 50],\n            [0, 50, 20],\n            [1, 20, 20],\n            [1, 20, 50]\n        ]);\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* eslint-disable no-param-reassign */\nimport { tileWidth, tileHeight, lightBlue } from '../../config.js';\nimport { degreesToRadians as deg2rad } from '../../utils/index.js';\nimport { krakel } from './utils/index.js';\n\nexport default ({ ctx, row, col, deg, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.rotate(deg2rad(deg));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        krakel(ctx, [[0, -20, 50], [1, -20, 40], [1, -10, 45], [1, 0, 35], [1, 10, 45], [1, 20, 40], [1, 20, 50]]);\n    } else {\n        krakel(ctx, [[0, -20, 50], [1, -20, 0], [1, 20, 0], [1, 20, 50]]);\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* global kontra */\n\n/**\n * A tile engine for rendering tilesets. Works well with the tile engine program Tiled.\n * @memberof kontra\n *\n * @param {object} properties - Properties of the tile engine.\n * @param {number} [properties.tileWidth=32] - Width of a tile.\n * @param {number} [properties.tileHeight=32] - Height of a tile.\n * @param {number} properties.width - Width of the map (in tiles).\n * @param {number} properties.height - Height of the map (in tiles).\n * @param {number} [properties.x=0] - X position to draw.\n * @param {number} [properties.y=0] - Y position to draw.\n * @param {number} [properties.sx=0] - X position to clip the tileset.\n * @param {number} [properties.sy=0] - Y position to clip the tileset.\n * @param {Context} [properties.context=kontra.context] - Provide a context for the tile engine to draw on.\n */\nexport default (properties = {}) => {\n    if (process.env.NODE_ENV === 'development' && (!properties.width || !properties.height)) {\n        throw Error('You must provide width and height properties');\n    }\n\n    const width = properties.width;\n    const height = properties.height;\n\n    // size of the tiles. Most common tile size on opengameart.org seems to be 32x32,\n    // followed by 16x16\n    // Tiled names the property tilewidth and tileheight\n    const tileWidth = properties.tileWidth || 32;\n    const tileHeight = properties.tileHeight || 32;\n\n    const mapWidth = width * tileWidth;\n    const mapHeight = height * tileHeight;\n\n    const context = properties.context || kontra.context;\n    const canvasWidth = context.canvas.width;\n    const canvasHeight = context.canvas.height;\n\n    // create an off-screen canvas for pre-rendering the map\n    // @see http://jsperf.com/render-vs-prerender\n    const offscreenCanvas = document.createElement('canvas');\n    const offscreenContext = offscreenCanvas.getContext('2d');\n\n    // when clipping an image, sx and sy must within the image region, otherwise\n    // Firefox and Safari won't draw it.\n    // @see http://stackoverflow.com/questions/19338032/canvas-indexsizeerror-index-or-size-is-negative-or-greater-than-the-allowed-a\n    const sxMax = Math.max(0, mapWidth - canvasWidth);\n    const syMax = Math.max(0, mapHeight - canvasHeight);\n\n    let _sx, _sy;\n\n    // draw order of layers (by name)\n    const layerOrder = [];\n\n    const tileEngine = {\n        width,\n        height,\n\n        tileWidth,\n        tileHeight,\n\n        mapWidth,\n        mapHeight,\n\n        context,\n\n        x: properties.x || 0,\n        y: properties.y || 0,\n\n        tilesets: [],\n        layers: {},\n\n        /**\n         * Add an tileset for the tile engine to use.\n         * @memberof kontra.tileEngine\n         */\n        addTilesets: function addTilesets(tilesets) {\n            [].concat(tilesets).forEach(tileset => {\n                const tilesetImage = tileset.image;\n                let image, firstGrid, lastTileset, tiles;\n\n                // @see https://github.com/jed/140bytes/wiki/Byte-saving-techniques#coercion-to-test-for-types\n                if (`${tilesetImage}` === tilesetImage) {\n                    let i = Infinity;\n\n                    while (i >= 0) {\n                        i = tilesetImage.lastIndexOf('/', i);\n                        const path = i < 0 ? tilesetImage : tilesetImage.substr(i);\n\n                        if (kontra.assets.images[path]) {\n                            image = kontra.assets.images[path];\n                            break;\n                        }\n\n                        i--;\n                    }\n                } else {\n                    image = tilesetImage;\n                }\n\n                firstGrid = tileset.firstGrid;\n\n                // if the width or height of the provided image is smaller than the tile size,\n                // default calculation to 1\n                const numTiles = ((image.width / tileWidth) | 0 || 1) * ((image.height / tileHeight) | 0 || 1);\n\n                if (!firstGrid) {\n                    // only calculate the first grid if the tile map has a tileset already\n                    if (tileEngine.tilesets.length > 0) {\n                        lastTileset = tileEngine.tilesets[tileEngine.tilesets.length - 1];\n                        tiles =\n                            ((lastTileset.image.width / tileWidth) | 0) * ((lastTileset.image.height / tileHeight) | 0);\n\n                        firstGrid = lastTileset.firstGrid + tiles;\n                    }\n                    // otherwise this is the first tile added to the tile map\n                    else {\n                        firstGrid = 1;\n                    }\n                }\n\n                tileEngine.tilesets.push({\n                    firstGrid,\n                    lastGrid: firstGrid + numTiles - 1,\n                    image\n                });\n\n                // sort the tile map so we can perform a binary search when drawing\n                tileEngine.tilesets.sort((a, b) => a.firstGrid - b.firstGrid);\n            });\n        },\n\n        /**\n         * Add a layer to the tile engine.\n         * @memberof kontra.tileEngine\n         */\n        addLayers: function addLayers(layers) {\n            [].concat(layers).forEach(layer => {\n                // eslint-disable-next-line no-param-reassign\n                layer.render = layer.render === undefined ? true : layer.render;\n\n                let data, row, c, value;\n\n                // flatten a 2D array into a single array\n                if (Array.isArray(layer.data[0])) {\n                    data = [];\n\n                    // eslint-disable-next-line no-cond-assign\n                    for (let r = 0; (row = layer.data[r]); r++) {\n                        for (c = 0; c < width; c++) {\n                            data.push(row[c] || 0);\n                        }\n                    }\n                } else {\n                    data = layer.data;\n                }\n\n                tileEngine.layers[layer.name] = {\n                    data,\n                    zIndex: layer.zIndex || 0,\n                    render: layer.render\n                };\n\n                // merge properties of layer onto layer object\n                for (const prop in layer.properties) {\n                    if (layer.properties.hasOwnProperty(prop)) {\n                        value = layer.properties[prop];\n\n                        try {\n                            value = JSON.parse(value);\n                        } catch (e) {\n                            /* intentionally empty */\n                        }\n\n                        tileEngine.layers[layer.name][prop] = value;\n                    }\n                }\n\n                // only add the layer to the layer order if it should be drawn\n                if (tileEngine.layers[layer.name].render) {\n                    layerOrder.push(layer.name);\n\n                    layerOrder.sort((a, b) => tileEngine.layers[a].zIndex - tileEngine.layers[b].zIndex);\n                }\n            });\n\n            preRenderImage();\n        },\n\n        changeTile(layerId, position, tile) {\n            const dataIndex = getIndex(position);\n            const layer = tileEngine.layers[layerId];\n            layer.data[dataIndex] = tile;\n            renderTile(layer, dataIndex, true);\n        },\n\n        /**\n         * Get the tile from the specified layer at x, y or row, col.\n         * @memberof kontra.tileEngine\n         *\n         * @param {string} name - Name of the layer.\n         * @param {object} position - Position of the tile in either x, y or row, col.\n         * @param {number} position.x - X coordinate of the tile.\n         * @param {number} position.y - Y coordinate of the tile.\n         * @param {number} position.row - Row of the tile.\n         * @param {number} position.col - Col of the tile.\n         *\n         * @returns {number}\n         */\n        tileAtLayer(name, position) {\n            const index = getIndex(position);\n\n            if (index >= 0) {\n                return tileEngine.layers[name].data[index];\n            }\n            return undefined;\n        },\n\n        /**\n         * Render the pre-rendered canvas.\n         * @memberof kontra.tileEngine\n         */\n        render() {\n            tileEngine.context.drawImage(\n                offscreenCanvas,\n                tileEngine.sx,\n                tileEngine.sy,\n                canvasWidth,\n                canvasHeight,\n                tileEngine.x,\n                tileEngine.y,\n                canvasWidth,\n                canvasHeight\n            );\n        },\n\n        /**\n         * Render a specific layer.\n         * @memberof kontra.tileEngine\n         *\n         * @param {string} name - Name of the layer to render.\n         */\n        renderLayer: function renderLayer(name) {\n            const layer = tileEngine.layers[name];\n\n            // calculate the starting tile\n            let row = tileEngine.getRow();\n            const col = tileEngine.getCol();\n            let index = getIndex({ row, col });\n\n            // calculate where to start drawing the tile relative to the drawing canvas\n            const startX = col * tileWidth - tileEngine.sx;\n            const startY = row * tileHeight - tileEngine.sy;\n\n            // calculate how many tiles the drawing canvas can hold\n            const viewWidth = Math.min(Math.ceil(canvasWidth / tileWidth) + 1, width);\n            const viewHeight = Math.min(Math.ceil(canvasHeight / tileHeight) + 1, height);\n            const numTiles = viewWidth * viewHeight;\n\n            let count = 0;\n            let x, y, tile, tileset, image, tileOffset, w, sx, sy;\n\n            // draw just enough of the layer to fit inside the drawing canvas\n            while (count < numTiles) {\n                tile = layer.data[index];\n\n                if (tile) {\n                    tileset = getTileset(tile);\n                    image = tileset.image;\n\n                    x = startX + (count % viewWidth) * tileWidth;\n                    y = startY + ((count / viewWidth) | 0) * tileHeight;\n\n                    tileOffset = tile - tileset.firstGrid;\n                    w = image.width / tileWidth;\n\n                    sx = (tileOffset % w) * tileWidth;\n                    sy = ((tileOffset / w) | 0) * tileHeight;\n\n                    tileEngine.context.drawImage(image, sx, sy, tileWidth, tileHeight, x, y, tileWidth, tileHeight);\n                }\n\n                if (++count % viewWidth === 0) {\n                    index = col + ++row * width;\n                } else {\n                    index++;\n                }\n            }\n        },\n\n        getRowAndCol({ x, y }) {\n            return {\n                row: this.getRow(y),\n                col: this.getCol(x)\n            };\n        },\n\n        getXAndY({ row, col, mapX, mapY }) {\n            return {\n                x: (col ? col * tileWidth : mapX) - tileEngine.sx + tileWidth / 2,\n                y: (row ? row * tileHeight : mapY) - tileEngine.sy + tileHeight / 2\n            };\n        },\n\n        /**\n         * Get the row from the y coordinate.\n         * @memberof kontra.tileEngine\n         *\n         * @param {number} y - Y coordinate.\n         *\n         * @return {number}\n         */\n        getRow(y = 0) {\n            return ((tileEngine.sy + y) / tileHeight) | 0;\n        },\n\n        /**\n         * Get the col from the x coordinate.\n         * @memberof kontra.tileEngine\n         *\n         * @param {number} x - X coordinate.\n         *\n         * @return {number}\n         */\n        getCol(x = 0) {\n            return ((tileEngine.sx + x) / tileWidth) | 0;\n        },\n\n        get sx() {\n            return _sx;\n        },\n\n        get sy() {\n            return _sy;\n        },\n\n        // ensure sx and sy are within the image region\n        set sx(value) {\n            _sx = Math.min(Math.max(0, value), sxMax);\n        },\n\n        set sy(value) {\n            _sy = Math.min(Math.max(0, value), syMax);\n        }\n    };\n\n    // set here so we use setter function\n    tileEngine.sx = properties.sx || 0;\n    tileEngine.sy = properties.sy || 0;\n\n    // make the off-screen canvas the full size of the map\n    offscreenCanvas.width = mapWidth;\n    offscreenCanvas.height = mapHeight;\n\n    // merge properties of the tile engine onto the tile engine itself\n    for (const prop in properties.properties) {\n        if (properties.properties.hasOwnProperty(prop)) {\n            let value = properties.properties[prop];\n\n            try {\n                value = JSON.parse(value);\n            } catch (e) {\n                /* intentionally empty */\n            }\n\n            // passed in properties override properties.properties\n            tileEngine[prop] = tileEngine[prop] || value;\n        }\n    }\n\n    if (properties.tilesets) {\n        tileEngine.addTilesets(properties.tilesets);\n    }\n\n    if (properties.layers) {\n        tileEngine.addLayers(properties.layers);\n    }\n\n    /**\n     * Get the index of the x, y or row, col.\n     * @memberof kontra.tileEngine\n     * @private\n     *\n     * @param {number} position.x - X coordinate of the tile.\n     * @param {number} position.y - Y coordinate of the tile.\n     * @param {number} position.row - Row of the tile.\n     * @param {number} position.col - Col of the tile.\n     *\n     * @return {number} Returns the tile index or -1 if the x, y or row,\n     *         col is outside the dimensions of the tile engine.\n     */\n    function getIndex(position) {\n        let row, col;\n\n        if (typeof position.x !== 'undefined' && typeof position.y !== 'undefined') {\n            row = tileEngine.getRow(position.y);\n            col = tileEngine.getCol(position.x);\n        } else {\n            row = position.row;\n            col = position.col;\n        }\n\n        // don't calculate out of bound numbers\n        if (row < 0 || col < 0 || row >= height || col >= width) {\n            return -1;\n        }\n\n        return col + row * width;\n    }\n\n    /**\n     * Modified binary search that will return the tileset associated with the tile\n     * @memberof kontra.tileEngine\n     * @private\n     *\n     * @param {number} tile - Tile grid.\n     *\n     * @return {object}\n     */\n    function getTileset(tile) {\n        let min = 0;\n        let max = tileEngine.tilesets.length - 1;\n        let index, currTile;\n\n        while (min <= max) {\n            index = ((min + max) / 2) | 0;\n            currTile = tileEngine.tilesets[index];\n\n            if (tile >= currTile.firstGrid && tile <= currTile.lastGrid) {\n                return currTile;\n            } else if (currTile.lastGrid < tile) {\n                min = index + 1;\n            } else {\n                max = index - 1;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Pre-render the tiles to make drawing fast.\n     * @memberof kontra.tileEngine\n     * @private\n     */\n    function preRenderImage() {\n        // draw each layer in order\n        // eslint-disable-next-line no-cond-assign\n        for (let layerIndex = 0, layer; (layer = tileEngine.layers[layerOrder[layerIndex]]); layerIndex++) {\n            for (let dataIndex = 0, len = layer.data.length; dataIndex < len; dataIndex++) {\n                renderTile(layer, dataIndex);\n            }\n        }\n    }\n\n    function renderTile(layer, dataIndex, clear = false) {\n        const tile = layer.data[dataIndex];\n\n        // skip empty tiles (0)\n        if (!tile) {\n            return;\n        }\n\n        const tileset = getTileset(tile);\n        const image = tileset.image;\n\n        const x = (dataIndex % width) * tileWidth;\n        const y = ((dataIndex / width) | 0) * tileHeight;\n\n        const tileOffset = tile - tileset.firstGrid;\n        const w = image.width / tileWidth;\n\n        const sx = (tileOffset % w) * tileWidth;\n        const sy = ((tileOffset / w) | 0) * tileHeight;\n\n        if (clear) {\n            offscreenContext.clearRect(x, y, tileWidth, tileHeight);\n        }\n        offscreenContext.drawImage(image, sx, sy, tileWidth, tileHeight, x, y, tileWidth, tileHeight);\n    }\n\n    return tileEngine;\n};\n","/* global kontra */\n\nimport { tileHeight, tileWidth, mapPadding } from '../config.js';\nimport { calculateCameraCoordinates } from '../utils/index.js';\nimport { addPadding } from './utils/index.js';\nimport { createTilesheet } from './tilesheet/index.js';\nimport { createTileEngine } from '../tileEngine/index.js';\n\nexport default async ({ data, width, height, col, row }) => {\n    const { sx, sy } = calculateCameraCoordinates({ col, row });\n    const map = createTileEngine({\n        // tile size\n        tileWidth,\n        tileHeight,\n\n        // map size in tiles\n        width: width + mapPadding * 2,\n        height: height + mapPadding * 2,\n\n        sx,\n        sy\n    });\n\n    const paddedMap = addPadding(data, width, height, mapPadding);\n    const image = await createTilesheet();\n    map.addTilesets({ image });\n    map.addLayers([\n        {\n            name: 'main',\n            data: paddedMap\n        }\n    ]);\n    return map;\n};\n","export default (arr, w, h, pad) => {\n    const retVal = [];\n    let idx = 0;\n    for (let row = 0; row < h + pad * 2; row++) {\n        for (let col = 0; col < w + pad * 2; col++) {\n            if (row < pad || row >= pad + h || col < pad || col >= pad + w) {\n                retVal.push(0);\n                continue;\n            }\n            retVal.push(arr[idx++]);\n        }\n    }\n    return retVal;\n};\n","import { tileHeight, tileWidth } from '../../config.js';\nimport { drawCurve, drawStraight, drawTSection, drawCrossing, drawTerminus } from './index.js';\n\n// will be removed by tree shaking\nimport drawDebugGrid from './drawDebugGrid.js';\n\nexport default () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 8 * tileWidth;\n    canvas.height = 8 * tileHeight;\n    const ctx = canvas.getContext('2d');\n    drawCurve({ ctx, row: 1, col: 1, deg: 0 });\n    drawCurve({ ctx, row: 1, col: 2, deg: 90 });\n    drawCurve({ ctx, row: 2, col: 1, deg: 270 });\n    drawCurve({ ctx, row: 2, col: 2, deg: 180 });\n    drawStraight({ ctx, row: 1, col: 3, deg: 0 });\n    drawStraight({ ctx, row: 2, col: 3, deg: 90 });\n    drawTSection({ ctx, row: 1, col: 4, deg: 0 });\n    drawTSection({ ctx, row: 1, col: 5, deg: 90 });\n    drawTSection({ ctx, row: 1, col: 6, deg: 180 });\n    drawTSection({ ctx, row: 2, col: 5, deg: 270 });\n    drawCrossing({ ctx, row: 2, col: 4 });\n    drawTerminus({ ctx, row: 3, col: 1, deg: 0 });\n    drawTerminus({ ctx, row: 3, col: 2, deg: 90 });\n    drawTerminus({ ctx, row: 3, col: 3, deg: 180 });\n    drawTerminus({ ctx, row: 3, col: 4, deg: 270 });\n    drawCurve({ ctx, row: 4, col: 1, deg: 0, broken: true });\n    drawCurve({ ctx, row: 4, col: 2, deg: 90, broken: true });\n    drawCurve({ ctx, row: 5, col: 1, deg: 270, broken: true });\n    drawCurve({ ctx, row: 5, col: 2, deg: 180, broken: true });\n    drawStraight({ ctx, row: 4, col: 3, deg: 0, broken: true });\n    drawStraight({ ctx, row: 5, col: 3, deg: 90, broken: true });\n    drawTSection({ ctx, row: 4, col: 4, deg: 0, broken: true });\n    drawTSection({ ctx, row: 4, col: 5, deg: 90, broken: true });\n    drawTSection({ ctx, row: 4, col: 6, deg: 180, broken: true });\n    drawTSection({ ctx, row: 5, col: 5, deg: 270, broken: true });\n    drawCrossing({ ctx, row: 5, col: 4, broken: true });\n    drawTerminus({ ctx, row: 6, col: 1, deg: 0, broken: true });\n    drawTerminus({ ctx, row: 6, col: 2, deg: 90, broken: true });\n    drawTerminus({ ctx, row: 6, col: 3, deg: 180, broken: true });\n    drawTerminus({ ctx, row: 6, col: 4, deg: 270, broken: true });\n\n    if (process.env.NODE_ENV === 'development') {\n        drawDebugGrid({ ctx, row: 1, col: 8 });\n    }\n\n    const image = new Image();\n    image.src = canvas.toDataURL('image/png');\n    // document.getElementById('wrapper').appendChild(image);\n    return new Promise(resolve => setTimeout(() => resolve(image), 100));\n};\n","/* global kontra */\n\nimport { drawPlayer, updatePlayer } from './index.js';\nimport { canvasHeight, canvasWidth, collisionRadius, teleportCooldownTimeout } from '../config.js';\nimport { pubsub, GAME_OVER, DROP_SHIP } from '../pubsub/index.js';\nimport { multiCollides } from '../utils/index.js';\nimport { messageBox } from '../messageBox/index.js';\nimport { calculateCameraCoordinates } from '../utils/index.js';\nimport { directionIsAllowed, switchDirection } from '../directions/index.js';\nimport { servers } from '../server/index.js';\n\nexport default ({ map, direction, speed }) => {\n    const player = {\n        context: kontra.context,\n        x: canvasWidth / 2,\n        y: canvasHeight / 2,\n        collisionRadius,\n        map,\n        speed,\n        infected: false,\n        gameOver: true,\n        direction,\n        nextDirection: null,\n        dropBomb: false,\n        scale: 1,\n        dropping: false,\n        bombCoolingDown: false,\n        teleportToServer: false,\n        teleportCoolingDown: false,\n\n        update() {\n            ({\n                nextDirection: this.nextDirection,\n                direction: this.direction,\n                dropBomb: this.dropBomb,\n                scale: this.scale,\n                bombCoolingDown: this.bombCoolingDown,\n                teleportToServer: this.teleportToServer\n            } = updatePlayer(this, pubsub, messageBox));\n        },\n\n        render() {\n            drawPlayer(this);\n        },\n\n        infect(virusesOrServers) {\n            const collisions = multiCollides(virusesOrServers, [this]);\n\n            if (collisions.length > 0) {\n                // eslint-disable-next-line no-param-reassign\n                this.infected = true;\n                if (!this.gameOver) {\n                    messageBox.show('player infected<br>game over');\n                    pubsub.publish(GAME_OVER);\n                }\n            }\n        },\n\n        teleport() {\n            if (this.teleportToServer && !this.teleportCoolingDown) {\n                this.teleportCoolingDown = true;\n\n                const nextServer = servers.getNext();\n                if (nextServer) {\n                    ({ sx: this.map.sx, sy: this.map.sy } = calculateCameraCoordinates(nextServer));\n                    if (!directionIsAllowed(this.map, { x: this.x, y: this.y }, this.direction)) {\n                        this.direction = switchDirection(this.map, { x: this.x, y: this.y }, this.direction);\n                    }\n                } else {\n                    messageBox.flash('all servers are destroyed or infected');\n                }\n\n                setTimeout(() => {\n                    this.teleportCoolingDown = false;\n                }, teleportCooldownTimeout);\n            }\n            this.teleportToServer = false;\n        },\n\n        enableControls() {\n            this.gameOver = false;\n        }\n    };\n\n    pubsub.subscribe(GAME_OVER, () => (player.gameOver = true));\n    pubsub.subscribe(DROP_SHIP, () => (player.dropping = true));\n\n    return player;\n};\n","import { lightGreen, darkGreen, lightRed, darkRed } from '../config.js';\nimport { calculateRotation } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, direction, infected, scale } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.scale(scale, scale);\n    ctx.rotate(calculateRotation(direction));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = infected ? lightRed : lightGreen;\n    ctx.fillStyle = infected ? darkRed : darkGreen;\n    ctx.beginPath();\n    ctx.moveTo(-15, 25);\n    ctx.lineTo(0, -25);\n    ctx.lineTo(15, 25);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n};\n","import { degreesToRadians } from './index.js';\nimport { N, E, S, W } from '../directions/index.js';\n\nexport default direction => {\n    switch (direction) {\n        case N:\n            return degreesToRadians(0);\n        case E:\n            return degreesToRadians(90);\n        case S:\n            return degreesToRadians(180);\n        case W:\n            return degreesToRadians(270);\n        default:\n            return null;\n    }\n};\n","import { directionIsAllowed, switchDirection } from '../directions/index.js';\nimport { pubsub, DROP_BOMB, DROP_SHIP, GAME_OVER } from '../pubsub/index.js';\nimport { getKey, isInTheMiddle } from './utils/index.js';\nimport { messageBox } from '../messageBox/index.js';\nimport { bombCooldown } from '../config.js';\n\nexport default sprite => {\n    let { nextDirection, direction, dropBomb, scale, bombCoolingDown, teleportToServer } = sprite;\n    const { dropping, map, gameOver, x, y } = sprite;\n    if (dropping) {\n        if (scale > 0) {\n            scale -= 0.01;\n        } else {\n            messageBox.show('You fell into the abyss<br>Game over');\n            pubsub.publish(GAME_OVER);\n        }\n        return { direction, nextDirection, dropBomb, scale, bombCoolingDown, teleportToServer };\n    }\n    if (!gameOver) {\n        ({ nextDirection, dropBomb, teleportToServer } = getKey(sprite));\n        if (bombCoolingDown) {\n            dropBomb = false;\n        }\n    }\n    if (!isInTheMiddle({ x: map.sx, y: map.sy })) {\n        return { direction, nextDirection, dropBomb, scale, bombCoolingDown, teleportToServer };\n    }\n    if (nextDirection && directionIsAllowed(map, { x, y }, nextDirection)) {\n        direction = nextDirection;\n        nextDirection = null;\n    } else {\n        try {\n            direction = switchDirection(map, { x, y }, direction);\n        } catch ({ message }) {\n            if (message === 'dropped') {\n                pubsub.publish(DROP_SHIP);\n            }\n        }\n    }\n    if (dropBomb) {\n        pubsub.publish(DROP_BOMB, map.getRowAndCol({ x, y }));\n        dropBomb = false;\n        bombCoolingDown = true;\n        setTimeout(() => {\n            // eslint-disable-next-line no-param-reassign\n            sprite.bombCoolingDown = false;\n        }, bombCooldown);\n    }\n    return { direction, nextDirection, dropBomb, scale, bombCoolingDown, teleportToServer };\n};\n","/* global kontra */\n\nimport { N, E, S, W } from '../../directions/index.js';\n\nexport default sprite => {\n    let { nextDirection, dropBomb, teleportToServer } = sprite;\n    if (kontra.keys.pressed('right')) {\n        nextDirection = E;\n    }\n    if (kontra.keys.pressed('left')) {\n        nextDirection = W;\n    }\n    if (kontra.keys.pressed('up')) {\n        nextDirection = N;\n    }\n    if (kontra.keys.pressed('down')) {\n        nextDirection = S;\n    }\n    if (kontra.keys.pressed('space')) {\n        dropBomb = true;\n    }\n    if (kontra.keys.pressed('enter')) {\n        teleportToServer = true;\n    }\n\n    return { nextDirection, dropBomb, teleportToServer };\n};\n","import { tileHeight, tileWidth } from '../../config.js';\n\nexport default ({ x, y }) => (x - tileWidth / 2) % tileWidth === 0 && (y - tileHeight / 2) % tileHeight === 0;\n","export default (predecessors, end) => {\n    const nodes = [];\n    let u = end;\n\n    while (u !== undefined) {\n        nodes.push(u);\n        u = predecessors.get(u);\n    }\n\n    nodes.reverse();\n    return nodes;\n};\n","import { findPaths, extractShortest } from './index.js';\n\nexport default (graph, nodes) => {\n    let start = nodes.shift();\n    const path = [];\n    let end, predecessors, shortest;\n\n    while (nodes.length) {\n        end = nodes.shift();\n        predecessors = findPaths(graph, start, end);\n\n        if (predecessors) {\n            shortest = extractShortest(predecessors, end);\n            if (nodes.length) {\n                path.push.apply(path, shortest.slice(0, -1));\n            } else {\n                return path.concat(shortest);\n            }\n        } else {\n            return null;\n        }\n\n        start = end;\n    }\n    return null;\n};\n","export default (data, start, end) => {\n    const costs = new Map([[start, 0]]);\n    const open = new Map([[0, [start]]]);\n    const predecessors = new Map();\n\n    function addToOpen(cost, vertex) {\n        let vertices = open.get(cost);\n        if (!vertices) {\n            vertices = [];\n            open.set(cost, vertices);\n        }\n        vertices.push(vertex);\n    }\n\n    while (open.size > 0) {\n        const currentCost = Array.from(open.keys()).sort((a, b) => a - b)[0];\n\n        const bucket = open.get(currentCost);\n        const node = bucket.shift();\n        const adjacentNodes = data.get(node) || new Map();\n\n        if (bucket.length === 0) {\n            open.delete(currentCost);\n        }\n\n        for (const [vertex, cost] of adjacentNodes) {\n            const totalCost = cost + currentCost;\n            const vertexCost = costs.get(vertex);\n\n            if (vertexCost === undefined || vertexCost > totalCost) {\n                costs.set(vertex, totalCost);\n                addToOpen(totalCost, vertex);\n                predecessors.set(vertex, node);\n            }\n        }\n    }\n\n    return costs.get(end) === undefined ? null : predecessors;\n};\n","import { getNodeByCoords, initGraphAndAllowed } from './index.js';\nimport { N, S, W, E } from '../../directions/index.js';\n\nexport default ({ width, layers }, layer) => {\n    const { graph, allowed } = initGraphAndAllowed(layers[layer].data, width);\n    for (const [node, adjacent] of graph) {\n        const currAllowed = allowed.get(node);\n        const { row, col } = node;\n        let target;\n        for (const dir of currAllowed) {\n            switch (dir) {\n                case N:\n                    target = getNodeByCoords(graph, { row: row - 1, col });\n                    if (target) {\n                        adjacent.set(target, 1);\n                    }\n                    break;\n                case E:\n                    target = getNodeByCoords(graph, { row, col: col + 1 });\n                    if (target) {\n                        adjacent.set(target, 1);\n                    }\n                    break;\n                case S:\n                    target = getNodeByCoords(graph, { row: row + 1, col });\n                    if (target) {\n                        adjacent.set(target, 1);\n                    }\n                    break;\n                case W:\n                    target = getNodeByCoords(graph, { row, col: col - 1 });\n                    if (target) {\n                        adjacent.set(target, 1);\n                    }\n                    break;\n                default:\n            }\n        }\n    }\n    return graph;\n};\n","export default (graph, { row, col }) => {\n    for (const [node] of graph) {\n        if (row === node.row && col === node.col) {\n            return node;\n        }\n    }\n    return null;\n};\n","import { directionSwitchMap } from '../../directions/index.js';\nimport { isValidTile } from '../../utils/index.js';\n\nexport default (layerData, width) => {\n    const graph = new Map();\n    const allowed = new Map();\n    let row = 0;\n    let col = 0;\n    let index = 0;\n    for (const tile of layerData) {\n        if (isValidTile(tile)) {\n            const node = { row, col };\n            allowed.set(node, directionSwitchMap[tile].allowed);\n            graph.set(node, new Map());\n        }\n        if (++index % width === 0) {\n            row++;\n            col = 0;\n        } else {\n            col++;\n        }\n    }\n    return { graph, allowed };\n};\n","import { findShortestPath, convertMapToGraph, getNodeByCoords } from './utils/index.js';\n\nexport class Pathfinder {\n    constructor(graph = null) {\n        this.graph = graph;\n    }\n\n    setDataFromMap(map, layer) {\n        this.graph = convertMapToGraph(map, layer);\n    }\n\n    getNodeByCoords(coords) {\n        return getNodeByCoords(this.graph, coords);\n    }\n\n    findShortestPath(...args) {\n        if (process.env.NODE_ENV === 'development' && !this.graph) {\n            throw new Error('You forgot to set a graph for the pathfinder before trying to use it to find a path');\n        }\n        return findShortestPath(this.graph, args);\n    }\n\n    isReachable(a, b) {\n        const shortestPath = this.findShortestPathByCoords(a, b);\n        return shortestPath !== null;\n    }\n\n    findShortestPathByCoords(...args) {\n        return this.findShortestPath(...args.map(coords => this.getNodeByCoords(coords)));\n    }\n}\n\nexport default new Pathfinder();\n","import { pathfinder } from './index.js';\nimport { pubsub, MAP_CHANGED } from '../pubsub/index.js';\n\nexport default () => pubsub.subscribe(MAP_CHANGED, changedMap => pathfinder.setDataFromMap(changedMap, 'main'));\n","export default () => {\n    const scoreBoard = document.createElement('div');\n    scoreBoard.setAttribute('id', 'scb');\n    const wrapper = document.getElementById('wrapper');\n    wrapper.appendChild(scoreBoard);\n    return scoreBoard;\n};\n","import createScoreBoard from './createScoreBoard.js';\nimport { pubsub, USERS_POSSIBLY_OFFLINE, INFECTED, GAME_OVER } from '../pubsub/index.js';\n\nexport default function initScoreBoard(props) {\n    const scoreBoard = createScoreBoard();\n    updateScoreBoard(scoreBoard, props.users);\n    pubsub.subscribe(USERS_POSSIBLY_OFFLINE, () => {\n        // using setTimeout here because users are updated too late :(\n        setTimeout(() => updateScoreBoard(scoreBoard, props.users), 0);\n    });\n    pubsub.subscribe(INFECTED, () => {\n        // using setTimeout here because users are updated too late :(\n        setTimeout(() => updateScoreBoard(scoreBoard, props.users), 0);\n    });\n    pubsub.subscribe(GAME_OVER, () => {\n        // using setTimeout here because users are updated too late :(\n        setTimeout(() => updateScoreBoard(scoreBoard, props.users), 0);\n    });\n}\n\nfunction updateScoreBoard(scoreBoard, users) {\n    const { gameOver } = users;\n    const { infected, online, offline } = users.getStats();\n\n    const score = calculateScore({ infected, online, offline });\n\n    let highScore = localStorage.getItem('CUT_EM_ALL__HIGHSCORE') || 0;\n\n    if (gameOver) {\n        highScore = Math.max(score, highScore);\n        localStorage.setItem('CUT_EM_ALL__HIGHSCORE', highScore);\n    }\n\n    scoreBoard.innerHTML = `\n        ${online} online |  \n        ${offline} offline | \n        ${infected} infected | \n        Score: ${score} | \n        Highscore: ${highScore}\n    `;\n}\n\nexport function calculateScore({ infected, online, offline }) {\n    return offline * 100 + (online === 0 && infected === 0 ? 300 : 0);\n}\n","import { ONLINE, OFFLINE } from './index.js';\nimport { createUser, INFECTED } from './index.js';\nimport { multiCollides } from '../utils/index.js';\nimport { pubsub, GAME_OVER } from '../pubsub/index.js';\nimport { messageBox } from '../messageBox/index.js';\nimport { pathfinder } from '../pathfinder/index.js';\nimport { calculateScore } from '../scoreBoard/index.js';\n\nexport default class {\n    constructor({ map, positions }) {\n        this.map = map;\n        this.users = [];\n        this.gameOver = false;\n        for (const { row, col } of positions) {\n            this.users.push(createUser({ map, row, col }));\n        }\n        pubsub.subscribe(GAME_OVER, () => (this.gameOver = true));\n    }\n\n    updateOnlineStatus(...viruses) {\n        const virusesWithRowAndCol = viruses.map(virus => ({\n            ...virus,\n            ...this.map.getRowAndCol({ x: virus.x, y: virus.y })\n        }));\n        let goneOffline = 0;\n        for (const user of this.users.filter(({ status }) => status === ONLINE)) {\n            for (const virus of virusesWithRowAndCol) {\n                const isReachable = pathfinder.isReachable(user, virus);\n                if (!isReachable) {\n                    goneOffline++;\n                    user.status = OFFLINE;\n                }\n            }\n        }\n        if (goneOffline > 0) {\n            const { online, offline, infected } = this.getStats();\n            if (online === 0) {\n                messageBox.show(`\n                  level completed<br>\n                  offline users: ${offline}<br>\n                  infected users: ${infected}<br>\n                  score: ${calculateScore({ online, offline, infected })}\n            `);\n                pubsub.publish(GAME_OVER);\n            } else {\n                messageBox.flash(`${offline} users went offline<br>good job!`);\n            }\n        }\n    }\n\n    getStats() {\n        return this.users.reduce(\n            (acc, { status }) => ({\n                online: acc.online + (status === ONLINE ? 1 : 0),\n                offline: acc.offline + (status === OFFLINE ? 1 : 0),\n                infected: acc.infected + (status === INFECTED ? 1 : 0)\n            }),\n            { online: 0, offline: 0, infected: 0 }\n        );\n    }\n\n    update() {\n        this.users.forEach(user => user.update());\n    }\n\n    render() {\n        this.users.forEach(user => user.render());\n    }\n\n    infect(...viruses) {\n        const { users, gameOver } = this;\n        const userVirusCollisions = multiCollides(users, viruses).filter(([user]) => user.status !== INFECTED);\n        if (userVirusCollisions.length === 0) {\n            return;\n        }\n        userVirusCollisions.forEach(([user]) => user.infect());\n        if (gameOver) {\n            return;\n        }\n        const { online, offline, infected } = this.getStats();\n        if (online === 0) {\n            messageBox.show(`\n              level completed<br>\n              offline users: ${offline}<br>\n              infected users: ${infected}<br>\n              score: ${calculateScore({ online, offline, infected })}\n            `);\n            pubsub.publish(GAME_OVER);\n            return;\n        }\n        messageBox.flash('user infected!');\n    }\n}\n","/* global kontra */\n\nimport { drawUser, INFECTED } from './index.js';\nimport { tileWidth, tileHeight, collisionRadius } from '../config.js';\nimport { ONLINE } from './index.js';\nimport { pubsub, INFECTED as INFECTED_EVENT } from '../pubsub/index.js';\n\nexport default ({ map, row, col }) => {\n    const { x, y } = map.getXAndY({ row, col });\n    return {\n        context: kontra.context,\n        x,\n        y,\n        collisionRadius,\n        infected: false,\n        map,\n        mapX: col * tileWidth,\n        mapY: row * tileHeight,\n        row,\n        col,\n        status: ONLINE,\n        update() {\n            ({ x: this.x, y: this.y } = map.getXAndY({ mapX: this.mapX, mapY: this.mapY }));\n        },\n        render() {\n            drawUser(this);\n        },\n        infect() {\n            this.status = INFECTED;\n            pubsub.publish(INFECTED_EVENT);\n        }\n    };\n};\n","export const ONLINE = 0;\nexport const OFFLINE = 1;\nexport const INFECTED = 2;\n","/* global kontra */\nimport { lightBlue, darkBlue, lightGreen, darkGreen, lightRed, darkRed } from '../config.js';\nimport { ONLINE, OFFLINE, INFECTED } from './constants.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\n\nconst spriteMapping = {\n    [ONLINE]: { fg: lightBlue, bg: darkBlue },\n    [OFFLINE]: { fg: lightGreen, bg: darkGreen },\n    [INFECTED]: { fg: lightRed, bg: darkRed }\n};\n\nexport default sprite => {\n    const { context: ctx, x, y, status } = sprite;\n    const { fg, bg } = spriteMapping[status];\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = fg;\n    ctx.fillStyle = bg;\n    ctx.beginPath();\n    ctx.moveTo(-40, 40);\n    ctx.lineTo(-40, 20);\n    ctx.arc(-20, 20, 20, deg2rad(180), deg2rad(270));\n    ctx.moveTo(-20, 0);\n    ctx.lineTo(20, 0);\n    ctx.arc(20, 20, 20, deg2rad(270), deg2rad(0));\n    ctx.lineTo(40, 40);\n    ctx.lineTo(-40, 40);\n    ctx.moveTo(-23, 20);\n    ctx.lineTo(-23, 40);\n    ctx.moveTo(23, 20);\n    ctx.lineTo(23, 40);\n    ctx.fill();\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.arc(0, -15, 25, deg2rad(0), deg2rad(360));\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n};\n","/* global kontra */\n\nimport { tileWidth, tileHeight, collisionRadius } from '../config.js';\nimport { drawVirus, updateVirus, Blips } from './index.js';\n\nexport default ({ map, col, row, direction, speed }) => {\n    const { x, y } = map.getXAndY({ row, col });\n    const blips = new Blips();\n    const virus = {\n        context: kontra.context,\n        x,\n        y,\n        speed,\n        collisionRadius,\n        map,\n        mapX: col * tileWidth,\n        mapY: row * tileHeight,\n        direction,\n        blips,\n        update() {\n            ({ x: this.x, y: this.y, mapX: this.mapX, mapY: this.mapY, direction: this.direction } = updateVirus(this));\n            this.blips.update();\n        },\n        render() {\n            drawVirus(this);\n            this.blips.render();\n        }\n    };\n    blips.start(virus);\n\n    return virus;\n};\n","import { virusBlipInterval } from '../config.js';\nimport { createBlip } from './index.js';\n\nexport default class {\n    constructor() {\n        this.blips = [];\n    }\n\n    start(virus) {\n        setInterval(() => {\n            this.blips.push(createBlip({ x: virus.x, y: virus.y }));\n        }, virusBlipInterval);\n    }\n    update() {\n        this.blips.forEach(blip => blip.update());\n        this.blips = this.blips.filter(blip => blip.ttl > 0);\n    }\n    render() {\n        this.blips.forEach(blip => blip.render());\n    }\n}\n","import {\n    switchDirection,\n    isIntersection,\n    directionSwitchMap,\n    getOppositeDirection,\n    directionIsAllowed\n} from '../directions/index.js';\nimport { getRandomInt } from '../utils/index.js';\nimport { isInTheMiddle, moveVirus, getBestDirection } from './utils/index.js';\n\nlet visits = null;\n\nexport default sprite => {\n    let { direction } = sprite;\n    const { map } = sprite;\n    const { mapX, mapY } = moveVirus(sprite);\n    const { x, y } = map.getXAndY({ mapX, mapY });\n    if (!visits) {\n        visits = Array(map.height)\n            .fill()\n            .map(() => Array(map.width).fill(0));\n    }\n    if (isInTheMiddle({ mapX, mapY })) {\n        const tile = map.tileAtLayer('main', { x, y });\n        const { col, row } = map.getRowAndCol({ x, y });\n        visits[row][col]++;\n        if (isIntersection(tile)) {\n            const { allowed } = directionSwitchMap[tile];\n            const viable = allowed.filter(\n                dir => dir !== getOppositeDirection(direction) && directionIsAllowed(map, { x, y }, dir)\n            );\n            const bestDirections = getBestDirection({ viable, visits, row, col });\n            direction = bestDirections[getRandomInt(0, bestDirections.length - 1)];\n        } else {\n            direction = switchDirection(map, { x, y }, direction);\n        }\n    }\n    return {\n        direction,\n        mapY,\n        mapX,\n        x,\n        y\n    };\n};\n","import { N, E, S, W } from '../../directions/index.js';\n\nexport default ({ mapX, mapY, direction, speed }) => {\n    switch (direction) {\n        case N:\n            return { mapX, mapY: mapY - speed };\n        case E:\n            return { mapX: mapX + speed, mapY };\n        case S:\n            return { mapX, mapY: mapY + speed };\n        case W:\n            return { mapX: mapX - speed, mapY };\n        default:\n            return { mapX, mapY };\n    }\n};\n","import { tileHeight, tileWidth } from '../../config.js';\n\nexport default ({ mapX, mapY }) => mapX % tileWidth === 0 && mapY % tileHeight === 0;\n","import { N, E, S, W } from '../../directions/index.js';\n\nexport default ({ viable, visits, row, col }) => {\n    let minVis = Number.MAX_SAFE_INTEGER;\n    return viable\n        .map(dir => {\n            let vis;\n            switch (dir) {\n                case N:\n                    vis = visits[row - 1][col];\n                    break;\n                case E:\n                    vis = visits[row][col + 1];\n                    break;\n                case S:\n                    vis = visits[row + 1][col];\n                    break;\n                case W:\n                    vis = visits[row][col - 1];\n                    break;\n                default:\n            }\n            minVis = vis < minVis ? vis : minVis;\n            return { dir, vis };\n        })\n        .filter(({ vis }) => vis === minVis)\n        .map(({ dir }) => dir);\n};\n","import { N, E, S, W } from './index.js';\n\nexport default direction => {\n    switch (direction) {\n        case N:\n            return S;\n        case E:\n            return W;\n        case S:\n            return N;\n        case W:\n            return W;\n        default:\n            return null;\n    }\n};\n","import { lightRed, darkRed } from '../config.js';\nimport { getRandomInt as ri } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightRed;\n    ctx.fillStyle = darkRed;\n    ctx.beginPath();\n    ctx.moveTo(ri(-5, 5), ri(-5, -25)); // 1\n    ctx.lineTo(ri(5, 50), ri(-5, -50)); // 2\n    ctx.lineTo(ri(5, 25), ri(-5, 5)); // 3\n    ctx.lineTo(ri(5, 50), ri(5, 50)); // 4\n    ctx.lineTo(ri(-5, 5), ri(5, 25)); // 5\n    ctx.lineTo(ri(-5, -50), ri(5, 50)); // 6\n    ctx.lineTo(ri(-5, -25), ri(-5, 5)); // 7\n    ctx.lineTo(ri(-5, -50), ri(-5, -50)); // 8\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.restore();\n};\n","/* global kontra */\n\nimport { tileHeight, virusBlipTtl } from '../config.js';\nimport { drawBlip } from './index.js';\n\nexport default ({ x, y }) => ({\n    context: kontra.context,\n    x,\n    y,\n    ttl: virusBlipTtl,\n    radius: tileHeight,\n    update() {\n        this.radius += 10;\n        this.ttl--;\n    },\n    render() {\n        drawBlip(this);\n    }\n});\n","import { lightRed } from '../config.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, radius } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = lightRed;\n    ctx.beginPath();\n    ctx.arc(0, 0, radius, deg2rad(0), deg2rad(360));\n    ctx.closePath();\n    ctx.stroke();\n\n    ctx.restore();\n};\n","import { canvasHeight, canvasWidth, lightBlue } from '../config.js';\n\nexport default () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = canvasWidth;\n    canvas.height = canvasHeight;\n    canvas.style.cssText = `\n        border: 4px solid ${lightBlue};\n    `;\n    const wrapper = document.getElementById('wrapper');\n    wrapper.appendChild(canvas);\n};\n","import { data } from './index.js';\n\nclass Levels {\n    getLevel(levelIndex) {\n        return data[levelIndex];\n    }\n}\n\nexport default new Levels();\n","import { N, W, S, E } from '../directions/index.js';\n\nexport default [\n    {\n        player: {\n            col: 8,\n            row: 9,\n            direction: S,\n            speed: 5\n        },\n        viruses: [\n            {\n                col: 8,\n                row: 7,\n                direction: E,\n                speed: 2.5\n            }\n        ],\n        users: [\n            { row: 4, col: 5 },\n            { row: 4, col: 9 },\n            { row: 4, col: 13 },\n            { row: 4, col: 17 },\n            { row: 4, col: 21 },\n            { row: 5, col: 4 },\n            { row: 8, col: 23 },\n            { row: 12, col: 23 },\n            { row: 14, col: 23 },\n            { row: 16, col: 23 },\n            { row: 17, col: 4 },\n            { row: 19, col: 23 },\n            { row: 21, col: 4 },\n            { row: 21, col: 23 },\n            { row: 23, col: 7 },\n            { row: 23, col: 9 },\n            { row: 23, col: 14 },\n            { row: 23, col: 17 },\n            { row: 23, col: 21 }\n        ],\n        servers: [{ row: 9, col: 8 }, { row: 9, col: 12 }, { row: 15, col: 15 }],\n        map: {\n            width: 20,\n            height: 20,\n            // prettier-ignore\n            data: [\n                 0, 17,  0,  0,  0, 17,  0,  0,  0, 17,  0,  0,  0, 17,  0,  0,  0, 17,  0,  0,\n                20,  4, 11,  2,  1,  4,  2,  0,  0,  5, 11,  6, 11, 13,  0,  1, 11, 12,  2,  0,\n                 0,  1, 11, 10,  9, 11, 13,  0,  0,  3,  0,  3,  0,  5, 11, 13,  0,  3,  3,  0,\n                 0,  3,  1, 11,  6, 11, 10,  0,  1,  4,  2,  9, 11, 13,  0,  9, 11, 10,  3,  0,\n                 0,  3,  3,  0,  3,  0,  0,  0,  3,  1, 13,  0,  0,  3,  0,  0,  0,  0,  5, 18,\n                 0,  3,  3,  0,  3,  0,  1, 11, 10,  3,  9, 11,  6,  4, 11,  6,  2,  0,  3,  0,\n                 0,  3,  3,  0,  3,  0,  3,  0,  0,  3,  0,  0,  3,  0,  0,  3,  3,  0,  3,  0,\n                 0,  9, 13,  0,  5, 11, 10,  0,  0,  3,  1, 11, 10,  0,  0,  3,  3,  0,  3,  0,\n                 0,  0,  3,  0,  3,  0,  0,  0,  1,  4, 10,  0,  0,  0,  0,  3,  5, 11,  4, 18,\n                 0,  1, 13,  0,  5, 11,  2,  0,  3,  0,  1, 11, 11, 11, 11, 12, 10,  0,  0,  0,\n                 0,  3,  3,  0,  3,  0,  5, 11, 13,  0,  9, 11,  2,  0,  0,  3,  0,  0,  1, 18,\n                 0,  9, 10,  0,  5, 11, 10,  0,  9, 11, 11, 11, 12, 11,  6, 10,  0,  0,  3,  0,\n                 0,  0,  0,  0,  3,  1, 11,  2,  1, 11, 11, 11, 10,  0,  3,  0,  1, 11,  4, 18,\n                20,  6,  6, 11, 10,  3,  0,  3,  3,  0,  0,  0,  1,  2,  9, 11, 12, 11,  2,  0,\n                 0,  3,  3,  0,  0,  3,  0,  3,  3,  1, 11,  2,  3,  3,  0,  0,  3,  0,  3,  0,\n                 0,  5,  4,  2,  0,  5, 11, 10,  3,  3,  0,  5, 12,  4, 11, 11, 13,  0,  5, 18,\n                 0,  3,  0,  5, 11, 12, 11,  6, 10,  9,  6, 10,  3,  0,  0,  0,  9, 11, 10,  0,\n                20,  4, 11, 13,  0,  3,  0,  9, 11, 11, 13,  0,  9, 11,  6, 11,  6,  6, 11, 18,\n                 0,  0,  0,  3,  0,  3,  0,  0,  0,  0,  5, 11, 11,  2,  3,  0,  3,  3,  0,  0,\n                 0,  0,  0, 19,  0, 19,  0,  0,  0,  0, 19,  0,  0, 19,  9, 11, 10, 19,  0,  0\n            ]\n        }\n    }\n];\n","/* global kontra */\n\nimport { initAudio } from '../audio/index.js';\nimport { Bombs } from '../bomb/index.js';\nimport { createLoop } from '../loop/index.js';\nimport { createMap } from '../map/index.js';\nimport { createPlayer } from '../player/index.js';\nimport { Users } from '../user/index.js';\nimport { createVirus } from '../virus/index.js';\nimport { createCanvas } from '../canvas/index.js';\nimport { initPathfinder, pathfinder } from '../pathfinder/index.js';\nimport { pubsub, USERS_POSSIBLY_OFFLINE } from '../pubsub/index.js';\nimport { messageBox } from '../messageBox/index.js';\nimport { servers } from '../server/index.js';\nimport { levels } from '../level/index.js';\nimport initScoreBoard from '../scoreBoard/index.js';\n\nclass GameManager {\n    constructor() {\n        createCanvas();\n        kontra.init();\n        initPathfinder();\n        initAudio();\n    }\n\n    async initLevel(levelIndex) {\n        const level = levels.getLevel(levelIndex);\n        const map = await createMap({ ...level.map, col: level.player.col, row: level.player.row });\n        this.player = createPlayer({ map, ...level.player });\n        const bombs = new Bombs(map);\n        const virus = createVirus({ map, ...level.viruses[0] });\n        pathfinder.setDataFromMap(map, 'main');\n        const users = new Users({ map, positions: level.users });\n        servers.init(map, level.servers);\n        initScoreBoard({ users, map });\n        this.loop = createLoop({ map, player: this.player, virus, users, bombs });\n        pubsub.reset(USERS_POSSIBLY_OFFLINE, () => users.updateOnlineStatus(virus));\n\n        map.render();\n        users.render();\n        servers.render();\n        bombs.render();\n        this.player.render();\n        virus.render();\n    }\n\n    showStartScreen() {\n        messageBox.show(\n            'welcome, <span class=\"grn\">captain katamov!</span><br><br>' +\n                'Your shift as chief network security officers is about to begin… all users are online and happy.' +\n                'in case of virus intrusion, <span class=\"grn\">cut them off</span> from the network ' +\n                \"to make sure they don't get infected!<br><br>\" +\n                '<table><tr><td class=\"grn\">arrow keys</td><td>…</td><td>change direction</td></tr>' +\n                '<tr><td class=\"grn\">space bar</td><td>…</td><td>drop bomb</td></tr>' +\n                '<tr><td class=\"grn\">return</td><td>…</td><td>teleport to server</td></tr>' +\n                '</table><br>press any key to begin!'\n        );\n        document.addEventListener(\n            'keydown',\n            () => {\n                messageBox.clear();\n                this.startLevel();\n                setTimeout(() => this.player.enableControls(), 500);\n            },\n            { once: true }\n        );\n    }\n\n    startLevel() {\n        this.loop.start();\n    }\n}\n\nexport default new GameManager();\n","import { gameManager } from './gameManager/index.js';\n\n// will be removed by tree shaking\nimport createDevbox from './devbox/createDevbox.js';\nif (process.env.NODE_ENV === 'development') {\n    createDevbox();\n}\n\n(async () => {\n    await gameManager.initLevel(0);\n    gameManager.showStartScreen();\n})();\n"]}
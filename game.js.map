{"version":3,"sources":["../src/pubsub/pubsub.js","../src/pubsub/constants.js","../vendor/sfxr.js","../src/audio/ArcadeAudio.js","../src/audio/sounds.js","../src/audio/index.js","../src/config.js","../src/bomb/createBomb.js","../src/bomb/constants.js","../src/bomb/drawBomb.js","../src/utils/calculateCameraCoordinates.js","../src/directions/constants.js","../src/directions/directionIsAllowed.js","../src/directions/switchDirection.js","../src/directions/directionSwitchMap.js","../src/directions/isIntersection.js","../src/directions/getNextTile.js","../src/utils/degreesToRadians.js","../src/utils/getRandomInt.js","../src/utils/multiCollides.js","../src/utils/collides.js","../src/utils/isValidTile.js","../src/bomb/drawBombWithFuse.js","../src/messageBox/messageBox.js","../src/virus/Viruses.js","../src/virus/createVirus.js","../src/virus/Blips.js","../src/virus/updateVirus.js","../src/virus/utils/moveVirus.js","../src/virus/utils/isInTheMiddle.js","../src/virus/utils/getBestDirections.js","../src/directions/getOppositeDirection.js","../src/virus/drawVirus.js","../src/virus/createBlip.js","../src/virus/drawBlip.js","../src/server/Servers.js","../src/server/createServer.js","../src/map/tilesheet/utils/krakel.js","../src/server/drawServer.js","../src/bomb/updateBomb.js","../src/bomb/createShrapnel.js","../src/bomb/drawShrapnel.js","../src/bomb/Bombs.js","../src/loop/utils/moveCamera.js","../src/pathfinder/utils/extractShortest.js","../src/pathfinder/utils/findShortestPath.js","../src/pathfinder/utils/findPaths.js","../src/pathfinder/utils/convertMapToGraph.js","../src/pathfinder/utils/getNodeByCoords.js","../src/pathfinder/utils/initGraphAndAllowed.js","../src/pathfinder/pathfinder.js","../src/pathfinder/initPathfinder.js","../src/scoreBoard/index.js","../src/user/Users.js","../src/user/createUser.js","../src/user/constants.js","../src/user/drawUser.js","../src/loop/createLoop.js","../src/map/tilesheet/drawCurve.js","../src/map/tilesheet/drawStraight.js","../src/map/tilesheet/drawTSection.js","../src/map/tilesheet/drawCrossing.js","../src/map/tilesheet/drawTerminus.js","../src/tileEngine/createTileEngine.js","../src/map/createMap.js","../src/map/utils/addPadding.js","../src/map/tilesheet/createTilesheet.js","../src/player/createPlayer.js","../src/player/drawPlayer.js","../src/utils/calculateRotation.js","../src/player/updatePlayer.js","../src/player/utils/getKey.js","../src/player/utils/isInTheMiddle.js","../src/canvas/createCanvas.js","../src/level/data.js","../src/level/mapHex2Arr.js","../src/level/getLevel.js","../src/scoreBoard/createScoreBoard.js","../src/gameManager/gameManager.js","../src/index.js"],"names":["pubsub","[object Object]","this","subscribers","message","callback","permanent","push","filter","incomingMessage","payload","forEach","GAME_OVER","DROP_BOMB","DROP_SHIP","USERS_POSSIBLY_OFFLINE","BOMB_EXPLODES","INFECTED","LEVEL_COMPLETED","synth","_envelopeLength0","_envelopeLength1","_envelopeLength2","_period","_maxPeriod","_slide","_deltaSlide","_changeAmount","_changeTime","_changeLimit","_squareDuty","_dutySweep","_params","setSettings","values","i","String","fromCharCode","c","totalTime","b","e","multiplier","reset","p","f","g","h","a","n","o","l","m","totalReset","synthWave","buffer","length","_filters","s","v","_hpFilterCutoff","_hpFilterDeltaCutoff","w","_lpFilterCutoff","_lpFilterDeltaCutoff","t","_lpFilterOn","_masterVolume","x","_minFreqency","_phaser","q","r","_phaserDeltaOffset","_phaserOffset","_repeatLimit","_sustainPunch","d","_vibratoAmplitude","j","_vibratoSpeed","k","_waveType","_envelopeLength","_envelopeOverLength0","_envelopeOverLength1","_envelopeOverLength2","_lpFilterDamping","u","_lpFilterOldPos","_periodTemp","_phaserInt","_pos","_finished","_envelopeStage","_envelopeTime","_envelopeVolume","_hpFilterPos","_lpFilterDeltaPos","_lpFilterPos","_phase","_phaserPos","_repeatTime","_sample","_superSample","_vibratoPhase","_phaserBuffer","Array","_noiseBuffer","Math","random","sin","abs","jsfxr","settings","envelopeFullLength","data","Uint8Array","used","Uint16Array","dv","Uint32Array","base64Characters","output","slice","ArcadeAudio","aa","sounds","add","prototype","key","count","elem","index","tick","pool","audio","Audio","src","play","sound","soundData","floor","virusBlipInterval","createBomb","map","row","col","y","getXAndY","context","kontra","collisionRadius","fuseLength","status","FUSE_BURNING","shrapnel","explosionDuration","mapX","mapY","updateBomb","drawBomb","EXPLODED","sprite","drawBombWithFuse","render","calculateCameraCoordinates","sx","canvasWidth","tileWidth","sy","canvasHeight","tileHeight","N","E","S","W","directionIsAllowed","direction","tile","tileAtLayer","isValidTile","directionSwitchMap","allowed","includes","nextTile","getNextTile","switchDirection","curr","Error","nextDirection","change","otherDirections","dir","getRandomInt","1","2","3","4","5","6","9","10","11","12","13","7","8","15","16","intersectionTiles","Object","entries","Number","deg2rad","degrees","PI","ri","min","max","multiCollides","arr1","arr2","collisions","i1","sprite1","i2","sprite2","collides","dx","dy","sqrt","ctx","save","translate","rotate","lineWidth","strokeStyle","fillStyle","beginPath","moveTo","lineTo","arc","fill","stroke","fuseDeg","sparkCX","cos","sparkCY","sparkX","sparkY","fillRect","restore","messageBox","timeoutHandler","div","document","createElement","setAttribute","getElementById","appendChild","clearTimeout","style","transition","innerHTML","opacity","setTimeout","viruses","gameInactive","cb","subscribe","virusConfig","virus","update","servers","getRandom","speed","createVirus","getRowAndCol","interval","id","setInterval","spawn","clearInterval","blips","createBlip","blip","ttl","updateVirus","drawVirus","start","visits","moveVirus","height","width","isInTheMiddle","isIntersection","bestDirections","viable","minVis","MAX_SAFE_INTEGER","vis","getBestDirection","getOppositeDirection","closePath","radius","drawBlip","serverCoordinates","nextServerPointer","createServer","server","find","broken","allViruses","getAll","availableServers","getAvailableServers","infected","flash","isNextPointerInRange","drawServer","krakel","draw","publish","createShrapnel","destroy","changeTile","rotation","rotationDir","drawShrapnel","Bombs","bombs","mapCoords","dropBomb","bomb","extractShortest","predecessors","end","nodes","undefined","get","reverse","findShortestPath","graph","shift","path","shortest","findPaths","concat","apply","costs","Map","open","addToOpen","cost","vertex","vertices","set","size","currentCost","from","keys","sort","bucket","node","adjacentNodes","delete","totalCost","vertexCost","convertMapToGraph","layers","layer","initGraphAndAllowed","adjacent","currAllowed","target","getNodeByCoords","layerData","pathfinder","coords","args","findShortestPathByCoords","initPathfinder","changedMap","setDataFromMap","updateScoreBoard","scoreBoard","gameOver","online","offline","users","getStats","score","calculateScore","highScore","localStorage","getItem","setItem","createUser","virusesWithRowAndCol","getAllWithRowAndCol","goneOffline","user","ONLINE","isReachable","OFFLINE","endLevelOrGame","show","reduce","acc","userVirusCollisions","infect","drawUser","INFECTED_EVENT","spriteMapping","fg","bg","createLoop","player","shipMoving","gameLoop","getInfectedServers","teleport","moveCamera","calculatePointOnArc","deg","drawCurve","drawStraight","drawTSection","drawCrossing","drawTerminus","createTileEngine","properties","mapWidth","mapHeight","canvas","offscreenCanvas","offscreenContext","getContext","sxMax","syMax","_sx","_sy","layerOrder","tileEngine","tilesets","addTilesets","tileset","tilesetImage","image","firstGrid","lastTileset","tiles","Infinity","lastIndexOf","substr","assets","images","numTiles","lastGrid","addLayers","value","isArray","name","zIndex","prop","hasOwnProperty","JSON","parse","layerIndex","dataIndex","len","renderTile","preRenderImage","layerId","position","getIndex","drawImage","renderLayer","getRow","getCol","startX","startY","viewWidth","ceil","tileOffset","getTileset","currTile","clear","clearRect","createMap","async","mapPadding","paddedMap","arr","pad","retVal","idx","addPadding","Image","toDataURL","Promise","resolve","createTilesheet","createPlayer","scale","dropping","bombCoolingDown","teleportToServer","teleportCoolingDown","updatePlayer","drawPlayer","virusesOrServers","nextServer","getNext","playerWithRowAndCol","playerCannotReachTheseVirusesByPath","playerCannotReachTheseVirusesAtAll","canReachVirus","degreesToRadians","calculateRotation","pressed","getKey","createCanvas","cssText","getLevel","levelIndex","level","hex","split","cc","charCodeAt","conv","mapHex2Arr","createScoreBoard","gameManager","init","loop","updateOnlineStatus","addEventListener","startLevel","enableControls","once","startSpawning","initLevel","showStartScreen"],"mappings":"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","sourcesContent":["// exported for testing\nexport class Pubsub {\n    constructor() {\n        this.subscribers = [];\n    }\n    subscribe(message, callback, permanent = false) {\n        this.subscribers.push({ message, callback, permanent });\n    }\n    reset() {\n        this.subscribers = this.subscribers.filter(({ permanent }) => permanent);\n    }\n    publish(incomingMessage, payload) {\n        this.subscribers.forEach(({ message, callback }) => message === incomingMessage && callback(payload));\n    }\n}\n\nexport default new Pubsub();\n","export const GAME_OVER = 0;\nexport const DROP_BOMB = 1;\nexport const DROP_SHIP = 2;\nexport const MAP_CHANGED = 3;\nexport const USERS_POSSIBLY_OFFLINE = 4;\nexport const BOMB_EXPLODES = 5;\nexport const INFECTED = 6;\nexport const LEVEL_COMPLETED = 7;\n","/**\n * SfxrParams\n *\n * Copyright 2010 Thomas Vian\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @author Thomas Vian\n */\nfunction SfxrParams() {\n    //--------------------------------------------------------------------------\n    //\n    //  Settings String Methods\n    //\n    //--------------------------------------------------------------------------\n\n    /**\n     * Parses a settings array into the parameters\n     * @param array Array of the settings values, where elements 0 - 23 are\n     *                a: waveType\n     *                b: attackTime\n     *                c: sustainTime\n     *                d: sustainPunch\n     *                e: decayTime\n     *                f: startFrequency\n     *                g: minFrequency\n     *                h: slide\n     *                i: deltaSlide\n     *                j: vibratoDepth\n     *                k: vibratoSpeed\n     *                l: changeAmount\n     *                m: changeSpeed\n     *                n: squareDuty\n     *                o: dutySweep\n     *                p: repeatSpeed\n     *                q: phaserOffset\n     *                r: phaserSweep\n     *                s: lpFilterCutoff\n     *                t: lpFilterCutoffSweep\n     *                u: lpFilterResonance\n     *                v: hpFilterCutoff\n     *                w: hpFilterCutoffSweep\n     *                x: masterVolume\n     * @return If the string successfully parsed\n     */\n    this.setSettings = function(values) {\n        for (let i = 0; i < 24; i++) {\n            this[String.fromCharCode(97 + i)] = values[i] || 0;\n        }\n\n        // I moved this here from the reset(true) function\n        if (this.c < 0.01) {\n            this.c = 0.01;\n        }\n\n        const totalTime = this.b + this.c + this.e;\n        if (totalTime < 0.18) {\n            const multiplier = 0.18 / totalTime;\n            this.b *= multiplier;\n            this.c *= multiplier;\n            this.e *= multiplier;\n        }\n    };\n}\n\n/**\n * SfxrSynth\n *\n * Copyright 2010 Thomas Vian\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @author Thomas Vian\n */\nfunction SfxrSynth() {\n    // All variables are kept alive through function closures\n\n    //--------------------------------------------------------------------------\n    //\n    //  Sound Parameters\n    //\n    //--------------------------------------------------------------------------\n\n    this._params = new SfxrParams(); // Params instance\n\n    //--------------------------------------------------------------------------\n    //\n    //  Synth Variables\n    //\n    //--------------------------------------------------------------------------\n\n    let _envelopeLength0, // Length of the attack stage\n        _envelopeLength1, // Length of the sustain stage\n        _envelopeLength2, // Length of the decay stage\n        _period, // Period of the wave\n        _maxPeriod, // Maximum period before sound stops (from minFrequency)\n        _slide, // Note slide\n        _deltaSlide, // Change in slide\n        _changeAmount, // Amount to change the note by\n        _changeTime, // Counter for the note change\n        _changeLimit, // Once the time reaches this limit, the note changes\n        _squareDuty, // Offset of center switching point in the square wave\n        _dutySweep; // Amount to change the duty by\n\n    //--------------------------------------------------------------------------\n    //\n    //  Synth Methods\n    //\n    //--------------------------------------------------------------------------\n\n    /**\n     * Resets the runing variables from the params\n     * Used once at the start (total reset) and for the repeat effect (partial reset)\n     */\n    this.reset = function() {\n        // Shorter reference\n        const p = this._params;\n\n        _period = 100 / (p.f * p.f + 0.001);\n        _maxPeriod = 100 / (p.g * p.g + 0.001);\n\n        _slide = 1 - p.h * p.h * p.h * 0.01;\n        _deltaSlide = -p.i * p.i * p.i * 0.000001;\n\n        if (!p.a) {\n            _squareDuty = 0.5 - p.n / 2;\n            _dutySweep = -p.o * 0.00005;\n        }\n\n        _changeAmount = p.l > 0 ? 1 - p.l * p.l * 0.9 : 1 + p.l * p.l * 10;\n        _changeTime = 0;\n        _changeLimit = p.m == 1 ? 0 : (1 - p.m) * (1 - p.m) * 20000 + 32;\n    };\n\n    // I split the reset() function into two functions for better readability\n    this.totalReset = function() {\n        this.reset();\n\n        // Shorter reference\n        const p = this._params;\n\n        // Calculating the length is all that remained here, everything else moved somewhere\n        _envelopeLength0 = p.b * p.b * 100000;\n        _envelopeLength1 = p.c * p.c * 100000;\n        _envelopeLength2 = p.e * p.e * 100000 + 10;\n        // Full length of the volume envelop (and therefore sound)\n        return (_envelopeLength0 + _envelopeLength1 + _envelopeLength2) | 0;\n    };\n\n    /**\n     * Writes the wave to the supplied buffer ByteArray\n     * @param buffer A ByteArray to write the wave to\n     * @return If the wave is finished\n     */\n    this.synthWave = function(buffer, length) {\n        // Shorter reference\n        const p = this._params;\n\n        // If the filters are active\n        const _filters = p.s != 1 || p.v;\n\n        // Cutoff multiplier which adjusts the amount the wave position can move\n\n        let _hpFilterCutoff = p.v * p.v * 0.1;\n\n        // Speed of the high-pass cutoff multiplier\n\n        const _hpFilterDeltaCutoff = 1 + p.w * 0.0003;\n\n        // Cutoff multiplier which adjusts the amount the wave position can move\n\n        let _lpFilterCutoff = p.s * p.s * p.s * 0.1;\n\n        // Speed of the low-pass cutoff multiplier\n\n        const _lpFilterDeltaCutoff = 1 + p.t * 0.0001;\n\n        // If the low pass filter is active\n\n        const _lpFilterOn = p.s != 1;\n\n        // masterVolume * masterVolume (for quick calculations)\n\n        const _masterVolume = p.x * p.x;\n\n        // Minimum frequency before stopping\n\n        const _minFreqency = p.g;\n\n        // If the phaser is active\n\n        const _phaser = p.q || p.r;\n\n        // Change in phase offset\n\n        const _phaserDeltaOffset = p.r * p.r * p.r * 0.2;\n\n        // Phase offset for phaser effect\n\n        let _phaserOffset = p.q * p.q * (p.q < 0 ? -1020 : 1020);\n\n        // Once the time reaches this limit, some of the    iables are reset\n\n        const _repeatLimit = p.p ? (((1 - p.p) * (1 - p.p) * 20000) | 0) + 32 : 0;\n\n        // The punch factor (louder at begining of sustain)\n\n        const _sustainPunch = p.d;\n\n        // Amount to change the period of the wave by at the peak of the vibrato wave\n\n        const _vibratoAmplitude = p.j / 2;\n\n        // Speed at which the vibrato phase moves\n\n        const _vibratoSpeed = p.k * p.k * 0.01;\n\n        // The type of wave to generate\n\n        const _waveType = p.a;\n\n        let _envelopeLength = _envelopeLength0;\n        // Length of the current envelope stage\n\n        const _envelopeOverLength0 = 1 / _envelopeLength0;\n        // (for quick calculations)\n\n        const _envelopeOverLength1 = 1 / _envelopeLength1;\n        // (for quick calculations)\n\n        const _envelopeOverLength2 = 1 / _envelopeLength2; // (for quick calculations)\n\n        // Damping muliplier which restricts how fast the wave position can move\n        let _lpFilterDamping = (5 / (1 + p.u * p.u * 20)) * (0.01 + _lpFilterCutoff);\n        if (_lpFilterDamping > 0.8) {\n            _lpFilterDamping = 0.8;\n        }\n        _lpFilterDamping = 1 - _lpFilterDamping;\n\n        let _finished = false;\n        // If the sound has finished\n\n        let _envelopeStage = 0;\n        // Current stage of the envelope (attack, sustain, decay, end)\n\n        let _envelopeTime = 0;\n        // Current time through current enelope stage\n\n        let _envelopeVolume = 0;\n        // Current volume of the envelope\n\n        let _hpFilterPos = 0;\n        // Adjusted wave position after high-pass filter\n\n        let _lpFilterDeltaPos = 0;\n        // Change in low-pass wave position, as allowed by the cutoff and damping\n\n        let _lpFilterOldPos,\n\n\n        // Previous low-pass wave position\n\n         \n _lpFilterPos = 0;\n\n\n\n        // Adjusted wave position after low-pass filter\n\n         \n \nlet _periodTemp,\n\n\n        // Period modified by vibrato\n\n         _phase = 0;\n\n\n        // Phase through the wave\n\n         \nlet _phaserInt;\n\n        // Integer phaser offset, for bit maths\n\n        let _phaserPos = 0;\n\n        // Position through the phaser buffer\n\n        let _pos,\n\n\n\n        // Phase expresed as a Number from 0-1, used for fast sin approx\n\n         \n \n \n _repeatTime = 0;\n\n\n\n\n // Counter for the repeats\n            \n \n \n \n \nvar _sample;\n\n\n\n\n // Sub-sample calculated 8 times per actual sample, averaged out to get the super sample\n            \n \n \n \n \nvar _superSample;\n        // Actual sample writen to the wave\n\n        let _vibratoPhase = 0; // Phase through the vibrato sine wave\n\n        // Buffer of wave values used to create the out of phase second wave\n        const _phaserBuffer = new Array(1024);\n\n        // Buffer of random values used to generate noise\n\n        const _noiseBuffer = new Array(32);\n        for (var i = _phaserBuffer.length; i--; ) {\n            _phaserBuffer[i] = 0;\n        }\n        for (var i = _noiseBuffer.length; i--; ) {\n            _noiseBuffer[i] = Math.random() * 2 - 1;\n        }\n\n        for (var i = 0; i < length; i++) {\n            if (_finished) {\n                return i;\n            }\n\n            // Repeats every _repeatLimit times, partially resetting the sound parameters\n            if (_repeatLimit) {\n                if (++_repeatTime >= _repeatLimit) {\n                    _repeatTime = 0;\n                    this.reset();\n                }\n            }\n\n            // If _changeLimit is reached, shifts the pitch\n            if (_changeLimit) {\n                if (++_changeTime >= _changeLimit) {\n                    _changeLimit = 0;\n                    _period *= _changeAmount;\n                }\n            }\n\n            // Acccelerate and apply slide\n            _slide += _deltaSlide;\n            _period *= _slide;\n\n            // Checks for frequency getting too low, and stops the sound if a minFrequency was set\n            if (_period > _maxPeriod) {\n                _period = _maxPeriod;\n                if (_minFreqency > 0) {\n                    _finished = true;\n                }\n            }\n\n            _periodTemp = _period;\n\n            // Applies the vibrato effect\n            if (_vibratoAmplitude > 0) {\n                _vibratoPhase += _vibratoSpeed;\n                _periodTemp *= 1 + Math.sin(_vibratoPhase) * _vibratoAmplitude;\n            }\n\n            _periodTemp |= 0;\n            if (_periodTemp < 8) {\n                _periodTemp = 8;\n            }\n\n            // Sweeps the square duty\n            if (!_waveType) {\n                _squareDuty += _dutySweep;\n                if (_squareDuty < 0) {\n                    _squareDuty = 0;\n                } else if (_squareDuty > 0.5) {\n                    _squareDuty = 0.5;\n                }\n            }\n\n            // Moves through the different stages of the volume envelope\n            if (++_envelopeTime > _envelopeLength) {\n                _envelopeTime = 0;\n\n                switch (++_envelopeStage) {\n                    case 1:\n                        _envelopeLength = _envelopeLength1;\n                        break;\n                    case 2:\n                        _envelopeLength = _envelopeLength2;\n                }\n            }\n\n            // Sets the volume based on the position in the envelope\n            switch (_envelopeStage) {\n                case 0:\n                    _envelopeVolume = _envelopeTime * _envelopeOverLength0;\n                    break;\n                case 1:\n                    _envelopeVolume = 1 + (1 - _envelopeTime * _envelopeOverLength1) * 2 * _sustainPunch;\n                    break;\n                case 2:\n                    _envelopeVolume = 1 - _envelopeTime * _envelopeOverLength2;\n                    break;\n                case 3:\n                    _envelopeVolume = 0;\n                    _finished = true;\n            }\n\n            // Moves the phaser offset\n            if (_phaser) {\n                _phaserOffset += _phaserDeltaOffset;\n                _phaserInt = _phaserOffset | 0;\n                if (_phaserInt < 0) {\n                    _phaserInt = -_phaserInt;\n                } else if (_phaserInt > 1023) {\n                    _phaserInt = 1023;\n                }\n            }\n\n            // Moves the high-pass filter cutoff\n            if (_filters && _hpFilterDeltaCutoff) {\n                _hpFilterCutoff *= _hpFilterDeltaCutoff;\n                if (_hpFilterCutoff < 0.00001) {\n                    _hpFilterCutoff = 0.00001;\n                } else if (_hpFilterCutoff > 0.1) {\n                    _hpFilterCutoff = 0.1;\n                }\n            }\n\n            _superSample = 0;\n            for (let j = 8; j--; ) {\n                // Cycles through the period\n                _phase++;\n                if (_phase >= _periodTemp) {\n                    _phase %= _periodTemp;\n\n                    // Generates new random noise for this period\n                    if (_waveType == 3) {\n                        for (let n = _noiseBuffer.length; n--; ) {\n                            _noiseBuffer[n] = Math.random() * 2 - 1;\n                        }\n                    }\n                }\n\n                // Gets the sample from the oscillator\n                switch (_waveType) {\n                    case 0: // Square wave\n                        _sample = _phase / _periodTemp < _squareDuty ? 0.5 : -0.5;\n                        break;\n                    case 1: // Saw wave\n                        _sample = 1 - (_phase / _periodTemp) * 2;\n                        break;\n                    case 2: // Sine wave (fast and accurate approx)\n                        _pos = _phase / _periodTemp;\n                        _pos = _pos > 0.5 ? (_pos - 1) * 6.28318531 : _pos * 6.28318531;\n                        _sample =\n                            _pos < 0\n                                ? 1.27323954 * _pos + 0.405284735 * _pos * _pos\n                                : 1.27323954 * _pos - 0.405284735 * _pos * _pos;\n                        _sample =\n                            _sample < 0\n                                ? 0.225 * (_sample * -_sample - _sample) + _sample\n                                : 0.225 * (_sample * _sample - _sample) + _sample;\n                        break;\n                    case 3: // Noise\n                        _sample = _noiseBuffer[Math.abs(((_phase * 32) / _periodTemp) | 0)];\n                }\n\n                // Applies the low and high pass filters\n                if (_filters) {\n                    _lpFilterOldPos = _lpFilterPos;\n                    _lpFilterCutoff *= _lpFilterDeltaCutoff;\n                    if (_lpFilterCutoff < 0) {\n                        _lpFilterCutoff = 0;\n                    } else if (_lpFilterCutoff > 0.1) {\n                        _lpFilterCutoff = 0.1;\n                    }\n\n                    if (_lpFilterOn) {\n                        _lpFilterDeltaPos += (_sample - _lpFilterPos) * _lpFilterCutoff;\n                        _lpFilterDeltaPos *= _lpFilterDamping;\n                    } else {\n                        _lpFilterPos = _sample;\n                        _lpFilterDeltaPos = 0;\n                    }\n\n                    _lpFilterPos += _lpFilterDeltaPos;\n\n                    _hpFilterPos += _lpFilterPos - _lpFilterOldPos;\n                    _hpFilterPos *= 1 - _hpFilterCutoff;\n                    _sample = _hpFilterPos;\n                }\n\n                // Applies the phaser effect\n                if (_phaser) {\n                    _phaserBuffer[_phaserPos % 1024] = _sample;\n                    _sample += _phaserBuffer[(_phaserPos - _phaserInt + 1024) % 1024];\n                    _phaserPos++;\n                }\n\n                _superSample += _sample;\n            }\n\n            // Averages out the super samples and applies volumes\n            _superSample *= 0.125 * _envelopeVolume * _masterVolume;\n\n            // Clipping if too loud\n            buffer[i] = _superSample >= 1 ? 32767 : _superSample <= -1 ? -32768 : (_superSample * 32767) | 0;\n        }\n\n        return length;\n    };\n}\n\n// Adapted from http://codebase.es/riffwave/\nconst synth = new SfxrSynth();\n// Export for the Closure Compiler\nexport default function(settings) {\n    // Initialize SfxrParams\n    synth._params.setSettings(settings);\n    // Synthesize Wave\n    const envelopeFullLength = synth.totalReset();\n    const data = new Uint8Array((((envelopeFullLength + 1) / 2) | 0) * 4 + 44);\n    let used = synth.synthWave(new Uint16Array(data.buffer, 44), envelopeFullLength) * 2;\n    const dv = new Uint32Array(data.buffer, 0, 44);\n    // Initialize header\n    dv[0] = 0x46464952; // \"RIFF\"\n    dv[1] = used + 36; // put total size here\n    dv[2] = 0x45564157; // \"WAVE\"\n    dv[3] = 0x20746d66; // \"fmt \"\n    dv[4] = 0x00000010; // size of the following\n    dv[5] = 0x00010001; // Mono: 1 channel, PCM format\n    dv[6] = 0x0000ac44; // 44,100 samples per second\n    dv[7] = 0x00015888; // byte rate: two bytes per sample\n    dv[8] = 0x00100002; // 16 bits per sample, aligned on every two bytes\n    dv[9] = 0x61746164; // \"data\"\n    dv[10] = used; // put number of samples here\n\n    // Base64 encoding written by me, @maettig\n    used += 44;\n    let i = 0;\n\n    const base64Characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n    let output = 'data:audio/wav;base64,';\n    for (; i < used; i += 3) {\n        const a = (data[i] << 16) | (data[i + 1] << 8) | data[i + 2];\n        output +=\n            base64Characters[a >> 18] +\n            base64Characters[(a >> 12) & 63] +\n            base64Characters[(a >> 6) & 63] +\n            base64Characters[a & 63];\n    }\n    i -= used;\n    return output.slice(0, output.length - i) + '=='.slice(0, i);\n}\n","import jsfxr from '../../vendor/sfxr.js';\nimport generateSounds from './sounds.js';\n\nexport default function ArcadeAudio() {\n    this.sounds = {};\n    generateSounds(this);\n}\n\nArcadeAudio.prototype.add = function(key, count, settings) {\n    this.sounds[key] = [];\n    settings.forEach(function(elem, index) {\n        this.sounds[key].push({\n            tick: 0,\n            count,\n            pool: []\n        });\n        for (let i = 0; i < count; i++) {\n            const audio = new Audio();\n            audio.src = jsfxr(elem);\n            this.sounds[key][index].pool.push(audio);\n        }\n    }, this);\n};\n\nArcadeAudio.prototype.play = function(key) {\n    const sound = this.sounds[key];\n    const soundData = sound.length > 1 ? sound[Math.floor(Math.random() * sound.length)] : sound[0];\n    soundData.pool[soundData.tick].play();\n    if (soundData.tick < soundData.count - 1) {\n        soundData.tick++;\n    } else {\n        soundData.tick = 0;\n    }\n};\n","/* eslint-disable no-sparse-arrays */\nexport default function generateSounds(aa) {\n    aa.add('infected', 3, [\n        [2, , 0.2916, , 0.2587, 0.9356, 0.3909, -0.2493, , , , , , 0.3583, 0.1617, , , , 1, , , 0.1217, , 0.5]\n    ]);\n\n    aa.add('drop-bomb', 3, [[0, , 0.0641, 0.5296, 0.1228, 0.4195, , , , , , 0.3029, 0.6261, , , , , , 1, , , , , 0.5]]);\n\n    aa.add('drop-ship', 1, [\n        [0, , 0.57, , 0.1398, 0.61, , -0.26, 0.1, , , 0.02, , 0.3325, , , , , 0.9793, , , , , 0.5]\n    ]);\n\n    aa.add('explode', 3, [[3, , 0.4, 0.91, 0.25, 0.21, , -0.38, , , , , , , , , -0.0403, -0.186, 1, , , , , 0.5]]);\n}\n/* eslint-enable no-alert, no-console */\n","import { pubsub, DROP_BOMB, BOMB_EXPLODES, INFECTED, DROP_SHIP } from '../pubsub/index.js';\nimport ArcadeAudio from './ArcadeAudio.js';\n\nconst aa = new ArcadeAudio();\n\nexport function initAudio() {\n    /* permanent subscribing OK here */\n    pubsub.subscribe(DROP_BOMB, () => aa.play('drop-bomb'), true);\n    pubsub.subscribe(BOMB_EXPLODES, () => aa.play('explode'), true);\n    pubsub.subscribe(INFECTED, () => aa.play('infected'), true);\n    pubsub.subscribe(DROP_SHIP, () => aa.play('drop-ship'), true);\n\n    /*\n   * GENERATE NEW SOUNDS ON http://www.superflashbros.net/as3sfxr/\n   * CMD + C copies the values\n   *\n   * */\n}\n","export const canvasWidth = 800;\nexport const canvasHeight = 600;\n\n/* map */\nexport const tileWidth = 100;\nexport const tileHeight = 100;\nexport const mapPadding = 4;\n\n/* virus */\nexport const virusBlipInterval = 1000;\nexport const virusBlipTtl = 180;\n\n/* colors */\nexport const lightGreen = '#75a042';\nexport const darkGreen = '#365b1d';\nexport const lightBlue = '#52638a';\nexport const darkBlue = '#2b3653';\nexport const lightRed = '#cd3926';\nexport const darkRed = '#7a2431';\n\nexport const collisionRadius = 30;\nexport const bombCooldown = 100;\nexport const teleportCooldownTimeout = 600;\n","/* global kontra */\n\nimport { collisionRadius, tileHeight, tileWidth } from '../config.js';\nimport { drawBomb, updateBomb } from './index.js';\nimport { FUSE_BURNING } from './index.js';\n\nexport default (map, { row, col }) => {\n    const { x, y } = map.getXAndY({ row, col });\n    return {\n        context: kontra.context,\n        x,\n        y,\n        collisionRadius,\n        fuseLength: 100,\n        status: FUSE_BURNING,\n        shrapnel: [],\n        explosionDuration: 0,\n        map,\n        mapX: col * tileWidth,\n        mapY: row * tileHeight,\n        row,\n        col,\n        update() {\n            ({\n                status: this.status,\n                fuseLength: this.fuseLength,\n                explosionDuration: this.explosionDuration,\n                x: this.x,\n                y: this.y\n            } = updateBomb(this));\n        },\n        render() {\n            drawBomb(this);\n        }\n    };\n};\n","export const FUSE_BURNING = 0;\nexport const EXPLODING = 1;\nexport const EXPLODED = 2;\n","import { EXPLODING, FUSE_BURNING } from './constants.js';\nimport { drawBombWithFuse } from './index.js';\n\nexport default sprite => {\n    const { status, shrapnel } = sprite;\n    switch (status) {\n        case FUSE_BURNING:\n            drawBombWithFuse(sprite);\n            break;\n        case EXPLODING:\n            shrapnel.forEach(s => s.render());\n            break;\n        default:\n    }\n};\n","import { tileHeight, tileWidth, canvasWidth, canvasHeight } from '../config.js';\n\nexport default ({ col, row }) => ({\n    sx: col * tileWidth - canvasWidth / 2 + tileWidth / 2,\n    sy: row * tileHeight - canvasHeight / 2 + tileHeight / 2\n});\n","export const N = 'N';\nexport const E = 'E';\nexport const S = 'S';\nexport const W = 'W';\n","import { directionSwitchMap, getNextTile } from './index.js';\nimport { isValidTile } from '../utils/index.js';\n\nexport default (map, { x, y }, direction) => {\n    const tile = map.tileAtLayer('main', { x, y });\n    if (!isValidTile(tile) || !directionSwitchMap[tile].allowed.includes(direction)) {\n        return false;\n    }\n    const nextTile = getNextTile(map, { x, y }, direction);\n    return isValidTile(nextTile);\n};\n","import { directionSwitchMap, directionIsAllowed } from './index.js';\nimport { isValidTile, getRandomInt } from '../utils/index.js';\n\nexport default (map, { x, y }, curr) => {\n    const tile = map.tileAtLayer('main', { x, y });\n    /* player accidentally stepped onto a broken conduit tile */\n    if (!isValidTile(tile)) {\n        throw new Error('dropped');\n    }\n    const nextDirection = directionSwitchMap[tile].change[curr] || curr;\n    if (directionIsAllowed(map, { x, y }, nextDirection)) {\n        return nextDirection;\n    }\n    const otherDirections = directionSwitchMap[tile].allowed.filter(dir => directionIsAllowed(map, { x, y }, dir));\n    switch (otherDirections.length) {\n        case 0:\n            /* oh no, player locked themselves in! */\n            throw new Error('locked in');\n        case 1:\n            return otherDirections[0];\n        default:\n            return otherDirections[getRandomInt(0, otherDirections.length - 1)];\n    }\n};\n","import { N, E, S, W } from './index.js';\n\nexport default {\n    // curve from S to E\n    1: {\n        allowed: [S, E],\n        change: {\n            [N]: E,\n            [W]: S\n        }\n    },\n    // curve from W to S\n    2: {\n        allowed: [W, S],\n        change: {\n            [N]: W,\n            [E]: S\n        }\n    },\n    // straight from N to S\n    3: {\n        allowed: [N, S],\n        change: {}\n    },\n    // T section W, N, E\n    4: {\n        allowed: [W, N, E],\n        change: {\n            [S]: N\n        }\n    },\n    // T section N, E, S\n    5: {\n        allowed: [N, E, S],\n        change: {\n            [W]: E\n        }\n    },\n    // T section W, E, S\n    6: {\n        allowed: [W, E, S],\n        change: {\n            [N]: S\n        }\n    },\n    // curve from N to E\n    9: {\n        allowed: [N, E],\n        change: {\n            [S]: E,\n            [W]: N\n        }\n    },\n    // curve from W to N\n    10: {\n        allowed: [W, N],\n        change: {\n            [E]: N,\n            [S]: W\n        }\n    },\n    // straight from W to E\n    11: {\n        allowed: [W, E],\n        change: {}\n    },\n    // crossing\n    12: {\n        allowed: [N, E, S, W],\n        change: {}\n    },\n    // T section N, S, W\n    13: {\n        allowed: [N, S, W],\n        change: {\n            [E]: W\n        }\n    },\n    // terminus S\n    7: {\n        allowed: [S],\n        change: {\n            [N]: S\n        }\n    },\n    // terminus W\n    8: {\n        allowed: [W],\n        change: {\n            [E]: W\n        }\n    },\n    // terminus N\n    15: {\n        allowed: [N],\n        change: {\n            [S]: N\n        }\n    },\n    // terminus E\n    16: {\n        allowed: [E],\n        change: {\n            [W]: E\n        }\n    }\n};\n","import { directionSwitchMap } from './index.js';\n\nconst intersectionTiles = [];\nfor (const [tile, { allowed }] of Object.entries(directionSwitchMap)) {\n    if (allowed.length > 2) {\n        intersectionTiles.push(Number(tile));\n    }\n}\n\nexport default tile => intersectionTiles.includes(tile);\n","import { N, E, S, W } from './index.js';\nimport { tileHeight, tileWidth } from '../config.js';\n\nexport default (map, { x, y }, direction) =>\n    map.tileAtLayer('main', {\n        x: direction === E ? x + tileWidth : direction === W ? x - tileWidth : x,\n        y: direction === N ? y - tileHeight : direction === S ? y + tileHeight : y\n    });\n","export default degrees => (degrees * Math.PI) / 180;\n","export default (a, b) => {\n    const min = Math.min(a, b);\n    const max = Math.max(a, b);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n","import { collides } from './index.js';\n\nexport default (arr1, arr2) => {\n    const collisions = [];\n    for (let i1 = 0; i1 < arr1.length; i1++) {\n        const sprite1 = arr1[i1];\n        for (let i2 = 0; i2 < arr2.length; i2++) {\n            const sprite2 = arr2[i2];\n            if (collides(sprite1, sprite2)) {\n                collisions.push([sprite1, sprite2]);\n            }\n        }\n    }\n    return collisions;\n};\n","export default (sprite1, sprite2) => {\n    const dx = sprite1.x - sprite2.x;\n    const dy = sprite1.y - sprite2.y;\n    return Math.sqrt(dx * dx + dy * dy) < sprite1.collisionRadius + sprite2.collisionRadius;\n};\n","export default tile => tile >= 1 && tile <= 16;\n","import { lightRed, lightBlue, darkBlue } from '../config.js';\nimport { getRandomInt as ri } from '../utils/index.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, fuseLength } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(deg2rad(-45));\n\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.fillStyle = darkBlue;\n\n    /* bomb */\n    ctx.beginPath();\n    ctx.moveTo(23, -10);\n    ctx.lineTo(40, -10);\n    ctx.lineTo(40, 10);\n    ctx.lineTo(23, 10);\n    ctx.arc(0, 0, 25, deg2rad(19), deg2rad(341));\n    ctx.fill();\n    ctx.stroke();\n\n    /* fuse */\n    const fuseRad = 25; // radius of the fuse arc\n    const fuseDeg = (fuseLength / 100) * 90; // length of the fuse arc in degrees\n    ctx.beginPath();\n    ctx.moveTo(40, 0);\n    ctx.arc(40, 25, fuseRad, deg2rad(270), deg2rad(270 + fuseDeg));\n    ctx.stroke();\n\n    /* sparks */\n    const sparkCX = Math.cos(deg2rad(fuseDeg - 90)) * fuseRad + 40; // X-coord of sparks center\n    const sparkCY = Math.sin(deg2rad(fuseDeg - 90)) * fuseRad + 25; // Y-coord of sparks centers\n    const sparkRad = 15; // radius of the sparks circle\n    ctx.fillStyle = lightRed;\n    for (let i = 0; i < 10; i++) {\n        const sparkX = Math.cos(deg2rad(ri(0, 360))) * ri(0, sparkRad) + sparkCX;\n        const sparkY = Math.sin(deg2rad(ri(0, 360))) * ri(0, sparkRad) + sparkCY;\n        ctx.fillRect(sparkX - 1, sparkY - 1, 3, 3);\n    }\n\n    ctx.restore();\n};\n","class MessageBox {\n    constructor() {\n        this.timeoutHandler = null;\n        this.div = document.createElement('div');\n        this.div.setAttribute('id', 'mbx');\n        const wrapper = document.getElementById('wrapper');\n        wrapper.appendChild(this.div);\n    }\n\n    show(message) {\n        clearTimeout(this.timeoutHandler);\n        this.div.style.transition = '3s';\n        this.div.innerHTML = `<div>${message}</div>`;\n        this.div.style.opacity = 1;\n    }\n\n    flash(message) {\n        clearTimeout(this.timeoutHandler);\n        this.div.style.transition = '0.5s';\n        this.div.innerHTML = `<div>${message}</div>`;\n        this.div.style.opacity = 1;\n        this.timeoutHandler = setTimeout(() => (this.div.style.opacity = 0), 500);\n    }\n\n    clear() {\n        clearTimeout(this.timeoutHandler);\n        this.div.style.transition = '0.5s';\n        this.div.style.opacity = 0;\n    }\n}\nexport default new MessageBox();\n","import { createVirus } from './index.js';\nimport { servers } from '../server/index.js';\nimport { GAME_OVER, LEVEL_COMPLETED, pubsub } from '../pubsub/index.js';\n\nclass Viruses {\n    constructor() {\n        this.viruses = [];\n        this.gameInactive = false;\n        const cb = () => (this.gameInactive = true);\n        pubsub.subscribe(GAME_OVER, cb, true);\n        pubsub.subscribe(LEVEL_COMPLETED, cb, true);\n    }\n    init(map, virusConfig) {\n        this.map = map;\n        this.virusConfig = virusConfig;\n    }\n    update() {\n        this.viruses.forEach(virus => virus.update());\n    }\n    render() {\n        this.viruses.forEach(virus => virus.render());\n    }\n    spawn() {\n        const { row, col } = servers.getRandom();\n        const { speed } = this.virusConfig;\n        this.viruses.push(createVirus({ map: this.map, row, col, speed }));\n    }\n    getAll() {\n        return this.viruses;\n    }\n    getAllWithRowAndCol() {\n        return this.viruses.map(virus => ({\n            ...virus,\n            ...this.map.getRowAndCol({ x: virus.x, y: virus.y })\n        }));\n    }\n    startSpawning() {\n        const { interval, max } = this.virusConfig;\n\n        const id = setInterval(() => {\n            if (this.viruses.length < max) {\n                this.spawn();\n            } else {\n                clearInterval(id);\n            }\n        }, interval);\n    }\n}\n\nexport default new Viruses();\n","/* global kontra */\n\nimport { tileWidth, tileHeight, collisionRadius } from '../config.js';\nimport { drawVirus, updateVirus, Blips } from './index.js';\nimport { switchDirection } from '../directions/index.js';\n\nexport default ({ map, col, row, speed }) => {\n    const { x, y } = map.getXAndY({ row, col });\n    const blips = new Blips();\n    const virus = {\n        context: kontra.context,\n        x,\n        y,\n        speed,\n        collisionRadius,\n        map,\n        mapX: col * tileWidth,\n        mapY: row * tileHeight,\n        direction: switchDirection(map, { x, y }, 'S'),\n        blips,\n        update() {\n            ({ x: this.x, y: this.y, mapX: this.mapX, mapY: this.mapY, direction: this.direction } = updateVirus(this));\n            this.blips.update();\n        },\n        render() {\n            drawVirus(this);\n            this.blips.render();\n        }\n    };\n    blips.start(virus);\n\n    return virus;\n};\n","import { virusBlipInterval } from '../config.js';\nimport { createBlip } from './index.js';\n\nexport default class {\n    constructor() {\n        this.blips = [];\n    }\n\n    start(virus) {\n        setInterval(() => {\n            this.blips.push(createBlip({ x: virus.x, y: virus.y }));\n        }, virusBlipInterval);\n    }\n    update() {\n        this.blips.forEach(blip => blip.update());\n        this.blips = this.blips.filter(blip => blip.ttl > 0);\n    }\n    render() {\n        this.blips.forEach(blip => blip.render());\n    }\n}\n","import {\n    switchDirection,\n    isIntersection,\n    directionSwitchMap,\n    getOppositeDirection,\n    directionIsAllowed\n} from '../directions/index.js';\nimport { getRandomInt } from '../utils/index.js';\nimport { isInTheMiddle, moveVirus, getBestDirection } from './utils/index.js';\n\nlet visits = null;\n\nexport default sprite => {\n    let { direction } = sprite;\n    const { map } = sprite;\n    const { mapX, mapY } = moveVirus(sprite);\n    const { x, y } = map.getXAndY({ mapX, mapY });\n    if (!visits) {\n        visits = Array(map.height)\n            .fill()\n            .map(() => Array(map.width).fill(0));\n    }\n    if (isInTheMiddle({ mapX, mapY })) {\n        const tile = map.tileAtLayer('main', { x, y });\n        const { col, row } = map.getRowAndCol({ x, y });\n        visits[row][col]++;\n        if (isIntersection(tile)) {\n            const { allowed } = directionSwitchMap[tile];\n            const viable = allowed.filter(\n                dir => dir !== getOppositeDirection(direction) && directionIsAllowed(map, { x, y }, dir)\n            );\n            const bestDirections = getBestDirection({ viable, visits, row, col });\n            direction = bestDirections[getRandomInt(0, bestDirections.length - 1)];\n        } else {\n            direction = switchDirection(map, { x, y }, direction);\n        }\n    }\n    return {\n        direction,\n        mapY,\n        mapX,\n        x,\n        y\n    };\n};\n","import { N, E, S, W } from '../../directions/index.js';\n\nexport default ({ mapX, mapY, direction, speed }) => {\n    switch (direction) {\n        case N:\n            return { mapX, mapY: mapY - speed };\n        case E:\n            return { mapX: mapX + speed, mapY };\n        case S:\n            return { mapX, mapY: mapY + speed };\n        case W:\n            return { mapX: mapX - speed, mapY };\n        default:\n            return { mapX, mapY };\n    }\n};\n","import { tileHeight, tileWidth } from '../../config.js';\n\nexport default ({ mapX, mapY }) => mapX % tileWidth === 0 && mapY % tileHeight === 0;\n","import { N, E, S, W } from '../../directions/index.js';\n\nexport default ({ viable, visits, row, col }) => {\n    let minVis = Number.MAX_SAFE_INTEGER;\n    return viable\n        .map(dir => {\n            let vis;\n            switch (dir) {\n                case N:\n                    vis = visits[row - 1][col];\n                    break;\n                case E:\n                    vis = visits[row][col + 1];\n                    break;\n                case S:\n                    vis = visits[row + 1][col];\n                    break;\n                case W:\n                    vis = visits[row][col - 1];\n                    break;\n                default:\n            }\n            minVis = vis < minVis ? vis : minVis;\n            return { dir, vis };\n        })\n        .filter(({ vis }) => vis === minVis)\n        .map(({ dir }) => dir);\n};\n","import { N, E, S, W } from './index.js';\n\nexport default direction => {\n    switch (direction) {\n        case N:\n            return S;\n        case E:\n            return W;\n        case S:\n            return N;\n        case W:\n            return W;\n        default:\n            return null;\n    }\n};\n","import { lightRed, darkRed } from '../config.js';\nimport { getRandomInt as ri } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightRed;\n    ctx.fillStyle = darkRed;\n    ctx.beginPath();\n    ctx.moveTo(ri(-5, 5), ri(-5, -25)); // 1\n    ctx.lineTo(ri(5, 50), ri(-5, -50)); // 2\n    ctx.lineTo(ri(5, 25), ri(-5, 5)); // 3\n    ctx.lineTo(ri(5, 50), ri(5, 50)); // 4\n    ctx.lineTo(ri(-5, 5), ri(5, 25)); // 5\n    ctx.lineTo(ri(-5, -50), ri(5, 50)); // 6\n    ctx.lineTo(ri(-5, -25), ri(-5, 5)); // 7\n    ctx.lineTo(ri(-5, -50), ri(-5, -50)); // 8\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.restore();\n};\n","/* global kontra */\n\nimport { tileHeight, virusBlipTtl } from '../config.js';\nimport { drawBlip } from './index.js';\n\nexport default ({ x, y }) => ({\n    context: kontra.context,\n    x,\n    y,\n    ttl: virusBlipTtl,\n    radius: tileHeight,\n    update() {\n        this.radius += 10;\n        this.ttl--;\n    },\n    render() {\n        drawBlip(this);\n    }\n});\n","import { lightRed } from '../config.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, radius } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = lightRed;\n    ctx.beginPath();\n    ctx.arc(0, 0, radius, deg2rad(0), deg2rad(360));\n    ctx.closePath();\n    ctx.stroke();\n\n    ctx.restore();\n};\n","import { createServer } from './index.js';\nimport { multiCollides } from '../utils/index.js';\nimport { messageBox } from '../messageBox/index.js';\nimport { GAME_OVER, LEVEL_COMPLETED, pubsub } from '../pubsub/index.js';\nimport { viruses } from '../virus/index.js';\n\nclass Servers {\n    constructor() {\n        this.servers = [];\n        const cb = () => (this.gameInactive = true);\n        pubsub.subscribe(GAME_OVER, cb, true);\n        pubsub.subscribe(LEVEL_COMPLETED, cb, true);\n    }\n    /* called at the beginning of every level */\n    init(map, serverCoordinates = []) {\n        this.map = map;\n        this.gameInactive = false;\n        this.nextServerPointer = 0;\n        serverCoordinates.forEach(({ col, row }) => this.servers.push(createServer({ map, row, col })));\n    }\n    update() {\n        this.servers.forEach(server => server.update());\n    }\n    render() {\n        this.servers.forEach(server => server.render());\n    }\n    destroy({ col, row }) {\n        const server = this.find({ col, row });\n        if (server) {\n            server.broken = true;\n        }\n    }\n    infect() {\n        const allViruses = viruses.getAll();\n        const availableServers = this.getAvailableServers();\n        const collisions = multiCollides(availableServers, allViruses);\n\n        if (collisions.length === 0) {\n            return;\n        }\n\n        collisions.forEach(([server]) => {\n            /* eslint-disable no-param-reassign */\n            server.infected = true;\n        });\n\n        if (this.gameInactive) {\n            return;\n        }\n\n        if (this.getAvailableServers().length === 0) {\n            messageBox.flash('all servers destroyed or infected – be careful');\n            return;\n        }\n\n        messageBox.flash('server infected!');\n    }\n    find({ col, row }) {\n        return this.servers.find(server => server.col === col && server.row === row);\n    }\n    getAvailableServers() {\n        return this.servers.filter(server => !(server.broken || server.infected));\n    }\n    getRandom() {\n        const availableServers = this.getAvailableServers();\n        return availableServers[Math.floor(Math.random() * availableServers.length)];\n    }\n    getNext() {\n        const availableServers = this.getAvailableServers();\n        const isNextPointerInRange = this.nextServerPointer + 1 < availableServers.length;\n        this.nextServerPointer = isNextPointerInRange ? this.nextServerPointer + 1 : 0;\n        return availableServers[this.nextServerPointer];\n    }\n    getInfectedServers() {\n        return this.servers.filter(server => server.infected);\n    }\n}\n\nexport default new Servers();\n","/* global kontra */\n\nimport { drawServer } from './index.js';\nimport { tileWidth, tileHeight, collisionRadius } from '../config.js';\n\nexport default ({ map, row, col }) => {\n    const { x, y } = map.getXAndY({ row, col });\n    return {\n        context: kontra.context,\n        x,\n        y,\n        row,\n        col,\n        map,\n        mapX: col * tileWidth,\n        mapY: row * tileHeight,\n        broken: false,\n        infected: false,\n        collisionRadius,\n        update() {\n            ({ x: this.x, y: this.y } = map.getXAndY({ mapX: this.mapX, mapY: this.mapY }));\n        },\n        render() {\n            drawServer(this);\n        }\n    };\n};\n","/* creates canvas moveTo and lineTo commands from arrays; doing this mostly to save a couple of bytes */\nexport default (ctx, data) => data.forEach(([draw, x, y]) => ctx[draw ? 'lineTo' : 'moveTo'](x, y));\n","/* eslint-disable no-param-reassign */\nimport { darkBlue, lightBlue, darkRed, lightRed } from '../config.js';\nimport { krakel } from '../map/tilesheet/utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, broken, infected } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = infected ? lightRed : lightBlue;\n    ctx.fillStyle = infected ? darkRed : darkBlue;\n    ctx.beginPath();\n    krakel(ctx, [\n        [0, 30, -48],\n        [1, 48, -30],\n        [1, 48, 30],\n        [1, 30, 48],\n        [1, -30, 48],\n        [1, -48, 30],\n        [1, -48, -30],\n        [1, -30, -48],\n        [1, 30, -48]\n    ]);\n    ctx.fill();\n    ctx.stroke();\n    if (broken) {\n        ctx.lineWidth = 2;\n        krakel(ctx, [\n            [0, 10, -48],\n            [1, 0, -40],\n            [0, 24, -48],\n            [1, 20, -30],\n            [0, 48, -27],\n            [1, 20, -20],\n            [0, -10, -30],\n            [1, 10, -30],\n            [1, 30, -10],\n            [1, 20, 0],\n            [1, 10, 0],\n            [0, 48, 7],\n            [1, 30, 10],\n            [0, 20, 0],\n            [1, 30, 10],\n            [1, 10, 20],\n            [0, 30, 48],\n            [1, 30, 30],\n            [1, 10, 30],\n            [0, 20, 20],\n            [1, 20, 30],\n            [0, -10, 48],\n            [1, -10, 20],\n            [1, 0, 10],\n            [0, -20, 0],\n            [1, -20, 20],\n            [1, -10, 30],\n            [0, -30, 48],\n            [1, -20, 40],\n            [1, -20, 30],\n            [0, -30, 30],\n            [1, -20, 40],\n            [0, -48, 20],\n            [1, -30, 20],\n            [0, -40, 20],\n            [1, -40, 10],\n            [0, -48, 0],\n            [1, -30, 0],\n            [1, -20, -10],\n            [0, -40, 0],\n            [1, -30, 10],\n            [0, -48, -17],\n            [1, -40, -30],\n            [1, -30, -20],\n            [0, -30, -48],\n            [1, -10, -20],\n            [1, -10, -10],\n            [0, -20, -30],\n            [1, -20, -20],\n            [1, -30, -10]\n        ]);\n        ctx.stroke();\n    }\n    ctx.restore();\n};\n","/* global kontra */\n\nimport { FUSE_BURNING, EXPLODING, EXPLODED } from './index.js';\nimport { createShrapnel } from './index.js';\nimport { pubsub, MAP_CHANGED, USERS_POSSIBLY_OFFLINE, BOMB_EXPLODES } from '../pubsub/index.js';\nimport { servers } from '../server/index.js';\n\nexport default sprite => {\n    let { status, fuseLength, explosionDuration, x, y } = sprite;\n    const { shrapnel, map, mapX, mapY, row, col } = sprite;\n\n    ({ x, y } = map.getXAndY({ mapX, mapY }));\n    switch (status) {\n        case FUSE_BURNING:\n            fuseLength -= 1;\n            if (fuseLength < 0) {\n                status = EXPLODING;\n                pubsub.publish(BOMB_EXPLODES);\n                for (let i = 0; i < 50; i++) {\n                    shrapnel.push(createShrapnel({ x, y }));\n                }\n                if (servers.find({ row, col })) {\n                    servers.destroy({ row, col });\n                } else {\n                    const tile = map.tileAtLayer('main', { row, col });\n                    map.changeTile('main', { row, col }, tile + 16);\n                    pubsub.publish(MAP_CHANGED, map);\n                    pubsub.publish(USERS_POSSIBLY_OFFLINE);\n                }\n            }\n            break;\n        case EXPLODING:\n            shrapnel.forEach(s => s.update());\n            explosionDuration++;\n            if (explosionDuration === 200) {\n                status = EXPLODED;\n            }\n            break;\n        default:\n    }\n    return {\n        status,\n        fuseLength,\n        explosionDuration,\n        x,\n        y\n    };\n};\n","/* global kontra */\nimport { getRandomInt as ri } from '../utils/index.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\nimport { drawShrapnel } from './index.js';\n\nexport default ({ x, y }) => {\n    const dir = ri(0, 360);\n    const speed = ri(5, 15);\n    return {\n        context: kontra.context,\n        x,\n        y,\n        dx: Math.cos(deg2rad(dir)) * speed,\n        dy: Math.sin(deg2rad(dir)) * speed,\n        rotation: ri(0, 360),\n        rotationDir: [ri(-10, -1), ri(1, 10)][ri(0, 1)],\n        update() {\n            this.x += this.dx;\n            this.y += this.dy;\n            this.rotation += this.rotationDir;\n        },\n        render() {\n            drawShrapnel(this);\n        }\n    };\n};\n","import { lightBlue, darkBlue } from '../config.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, rotation } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(deg2rad(rotation));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.fillStyle = darkBlue;\n    ctx.beginPath();\n    ctx.moveTo(0, -10);\n    ctx.lineTo(10, 5);\n    ctx.lineTo(-10, 5);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n};\n","import { pubsub, DROP_BOMB } from '../pubsub/index.js';\nimport { EXPLODED } from './constants.js';\nimport { createBomb } from './index.js';\n\nexport default class {\n    constructor(map) {\n        this.map = map;\n        this.bombs = [];\n        pubsub.subscribe(DROP_BOMB, mapCoords => this.dropBomb(mapCoords));\n    }\n    dropBomb(mapCoords) {\n        if (\n            this.bombs.length > 0 &&\n            this.bombs.find(({ col, row }) => col === mapCoords.col && row === mapCoords.row)\n        ) {\n            // don't drop a bomb where there already is one waiting to explode\n            return;\n        }\n        this.bombs.push(createBomb(this.map, mapCoords));\n    }\n    update() {\n        this.bombs = this.bombs.filter(bomb => {\n            bomb.update();\n            return bomb.status !== EXPLODED;\n        });\n    }\n    render() {\n        this.bombs.forEach(bomb => bomb.render());\n    }\n}\n","import { N, E, S, W } from '../../directions/index.js';\n\nexport default ({ map, direction, speed }) => {\n    switch (direction) {\n        case N:\n            // eslint-disable-next-line no-param-reassign\n            map.sy -= speed;\n            break;\n        case E:\n            // eslint-disable-next-line no-param-reassign\n            map.sx += speed;\n            break;\n        case S:\n            // eslint-disable-next-line no-param-reassign\n            map.sy += speed;\n            break;\n        case W:\n            // eslint-disable-next-line no-param-reassign\n            map.sx -= speed;\n            break;\n        default:\n    }\n};\n","export default (predecessors, end) => {\n    const nodes = [];\n    let u = end;\n\n    while (u !== undefined) {\n        nodes.push(u);\n        u = predecessors.get(u);\n    }\n\n    nodes.reverse();\n    return nodes;\n};\n","import { findPaths, extractShortest } from './index.js';\n\nexport default (graph, nodes) => {\n    let start = nodes.shift();\n    const path = [];\n    let end, predecessors, shortest;\n\n    while (nodes.length) {\n        end = nodes.shift();\n        predecessors = findPaths(graph, start, end);\n\n        if (predecessors) {\n            shortest = extractShortest(predecessors, end);\n            if (nodes.length) {\n                path.push.apply(path, shortest.slice(0, -1));\n            } else {\n                return path.concat(shortest);\n            }\n        } else {\n            return null;\n        }\n\n        start = end;\n    }\n    return null;\n};\n","export default (data, start, end) => {\n    const costs = new Map([[start, 0]]);\n    const open = new Map([[0, [start]]]);\n    const predecessors = new Map();\n\n    function addToOpen(cost, vertex) {\n        let vertices = open.get(cost);\n        if (!vertices) {\n            vertices = [];\n            open.set(cost, vertices);\n        }\n        vertices.push(vertex);\n    }\n\n    while (open.size > 0) {\n        const currentCost = Array.from(open.keys()).sort((a, b) => a - b)[0];\n\n        const bucket = open.get(currentCost);\n        const node = bucket.shift();\n        const adjacentNodes = data.get(node) || new Map();\n\n        if (bucket.length === 0) {\n            open.delete(currentCost);\n        }\n\n        for (const [vertex, cost] of adjacentNodes) {\n            const totalCost = cost + currentCost;\n            const vertexCost = costs.get(vertex);\n\n            if (vertexCost === undefined || vertexCost > totalCost) {\n                costs.set(vertex, totalCost);\n                addToOpen(totalCost, vertex);\n                predecessors.set(vertex, node);\n            }\n        }\n    }\n\n    return costs.get(end) === undefined ? null : predecessors;\n};\n","import { getNodeByCoords, initGraphAndAllowed } from './index.js';\nimport { N, S, W, E } from '../../directions/index.js';\n\nexport default ({ width, layers }, layer) => {\n    const { graph, allowed } = initGraphAndAllowed(layers[layer].data, width);\n    for (const [node, adjacent] of graph) {\n        const currAllowed = allowed.get(node);\n        const { row, col } = node;\n        let target;\n        for (const dir of currAllowed) {\n            switch (dir) {\n                case N:\n                    target = getNodeByCoords(graph, { row: row - 1, col });\n                    if (target) {\n                        adjacent.set(target, 1);\n                    }\n                    break;\n                case E:\n                    target = getNodeByCoords(graph, { row, col: col + 1 });\n                    if (target) {\n                        adjacent.set(target, 1);\n                    }\n                    break;\n                case S:\n                    target = getNodeByCoords(graph, { row: row + 1, col });\n                    if (target) {\n                        adjacent.set(target, 1);\n                    }\n                    break;\n                case W:\n                    target = getNodeByCoords(graph, { row, col: col - 1 });\n                    if (target) {\n                        adjacent.set(target, 1);\n                    }\n                    break;\n                default:\n            }\n        }\n    }\n    return graph;\n};\n","export default (graph, { row, col }) => {\n    for (const [node] of graph) {\n        if (row === node.row && col === node.col) {\n            return node;\n        }\n    }\n    return null;\n};\n","import { directionSwitchMap } from '../../directions/index.js';\nimport { isValidTile } from '../../utils/index.js';\n\nexport default (layerData, width) => {\n    const graph = new Map();\n    const allowed = new Map();\n    let row = 0;\n    let col = 0;\n    let index = 0;\n    for (const tile of layerData) {\n        if (isValidTile(tile)) {\n            const node = { row, col };\n            allowed.set(node, directionSwitchMap[tile].allowed);\n            graph.set(node, new Map());\n        }\n        if (++index % width === 0) {\n            row++;\n            col = 0;\n        } else {\n            col++;\n        }\n    }\n    return { graph, allowed };\n};\n","import { findShortestPath, convertMapToGraph, getNodeByCoords } from './utils/index.js';\n\nexport class Pathfinder {\n    constructor(graph = null) {\n        this.graph = graph;\n    }\n\n    setDataFromMap(map, layer) {\n        this.graph = convertMapToGraph(map, layer);\n    }\n\n    getNodeByCoords(coords) {\n        return getNodeByCoords(this.graph, coords);\n    }\n\n    findShortestPath(...args) {\n        if (process.env.NODE_ENV === 'development' && !this.graph) {\n            throw new Error('You forgot to set a graph for the pathfinder before trying to use it to find a path');\n        }\n        return findShortestPath(this.graph, args);\n    }\n\n    isReachable(a, b) {\n        const shortestPath = this.findShortestPathByCoords(a, b);\n        return shortestPath !== null;\n    }\n\n    findShortestPathByCoords(...args) {\n        return this.findShortestPath(...args.map(coords => this.getNodeByCoords(coords)));\n    }\n}\n\nexport default new Pathfinder();\n","import { pathfinder } from './index.js';\nimport { pubsub, MAP_CHANGED } from '../pubsub/index.js';\n\n// permanent subscription OK here\nexport default () => pubsub.subscribe(MAP_CHANGED, changedMap => pathfinder.setDataFromMap(changedMap, 'main'), true);\n","import { pubsub, USERS_POSSIBLY_OFFLINE, INFECTED, GAME_OVER, LEVEL_COMPLETED } from '../pubsub/index.js';\nimport { users } from '../user/index.js';\n\nexport default function initScoreBoard(scoreBoard) {\n    updateScoreBoard(scoreBoard);\n    // permanent subscriptions OK here\n    pubsub.subscribe(USERS_POSSIBLY_OFFLINE, () => updateScoreBoard(scoreBoard), true);\n    pubsub.subscribe(INFECTED, () => updateScoreBoard(scoreBoard), true);\n    pubsub.subscribe(GAME_OVER, () => updateScoreBoard(scoreBoard, true), true);\n    pubsub.subscribe(LEVEL_COMPLETED, () => updateScoreBoard(scoreBoard), true);\n}\n\nfunction updateScoreBoard(scoreBoard, gameOver = false) {\n    const { infected, online, offline } = users.getStats();\n\n    const score = calculateScore({ infected, online, offline });\n\n    let highScore = localStorage.getItem('CUT_EM_ALL__HIGHSCORE') || 0;\n\n    if (gameOver) {\n        highScore = Math.max(score, highScore);\n        localStorage.setItem('CUT_EM_ALL__HIGHSCORE', highScore);\n    }\n\n    // eslint-disable-next-line no-param-reassign\n    scoreBoard.innerHTML = `\n        ${online} online |  \n        ${offline} offline | \n        ${infected} infected | \n        Score: ${score} | \n        Highscore: ${highScore}\n    `;\n}\n\nexport function calculateScore({ infected, online, offline }) {\n    return offline * 100 + (online === 0 && infected === 0 ? 300 : 0);\n}\n","import { ONLINE, OFFLINE } from './index.js';\nimport { createUser, INFECTED } from './index.js';\nimport { multiCollides } from '../utils/index.js';\nimport { pubsub, GAME_OVER, LEVEL_COMPLETED } from '../pubsub/index.js';\nimport { messageBox } from '../messageBox/index.js';\nimport { pathfinder } from '../pathfinder/index.js';\nimport { calculateScore } from '../scoreBoard/index.js';\nimport { viruses } from '../virus/index.js';\n\nclass Users {\n    constructor() {\n        this.users = [];\n        this.gameInactive = false;\n    }\n\n    init(map) {\n        this.map = map;\n        for (let row = 0; row < map.height; row++) {\n            for (let col = 0; col < map.width; col++) {\n                const tile = map.tileAtLayer('main', { row, col });\n                if (tile === 7 || tile === 8 || tile === 15 || tile === 16) {\n                    this.users.push(createUser({ map, row, col }));\n                }\n            }\n        }\n        pubsub.subscribe(GAME_OVER, () => (this.gameInactive = true));\n        pubsub.subscribe(LEVEL_COMPLETED, () => (this.gameInactive = true));\n    }\n\n    updateOnlineStatus() {\n        const virusesWithRowAndCol = viruses.getAllWithRowAndCol();\n        if (virusesWithRowAndCol.length === 0) {\n            return;\n        }\n\n        let goneOffline = 0;\n        for (const user of this.users.filter(({ status }) => status === ONLINE)) {\n            if (virusesWithRowAndCol.filter(virus => pathfinder.isReachable(user, virus)).length === 0) {\n                goneOffline++;\n                user.status = OFFLINE;\n            }\n        }\n        if (goneOffline > 0) {\n            const ended = this.endLevelOrGame();\n            if (!ended) {\n                messageBox.flash(`${goneOffline} users went offline<br>good job!`);\n            }\n        }\n    }\n\n    endLevelOrGame() {\n        const { online, offline, infected } = this.getStats();\n        if (online > 0) {\n            return false;\n        }\n        const score = calculateScore({ online, offline, infected });\n        if (infected < offline) {\n            messageBox.show(\n                'level completed<br>' +\n                    `offline users: ${offline}<br>` +\n                    `infected users: ${infected}<br>` +\n                    `score: ${score}`\n            );\n            pubsub.publish(LEVEL_COMPLETED);\n            return true;\n        }\n        messageBox.show(\n            'game over – too many infected users!<br>' +\n                `offline users: ${offline}<br>` +\n                `infected users: ${infected}<br>` +\n                `score: ${score}`\n        );\n        pubsub.publish(GAME_OVER);\n        return true;\n    }\n\n    getStats() {\n        return this.users.reduce(\n            (acc, { status }) => ({\n                online: acc.online + (status === ONLINE ? 1 : 0),\n                offline: acc.offline + (status === OFFLINE ? 1 : 0),\n                infected: acc.infected + (status === INFECTED ? 1 : 0)\n            }),\n            { online: 0, offline: 0, infected: 0 }\n        );\n    }\n\n    update() {\n        this.users.forEach(user => user.update());\n    }\n\n    render() {\n        this.users.forEach(user => user.render());\n    }\n\n    infect() {\n        const allViruses = viruses.getAll();\n        const { users, gameInactive } = this;\n        const userVirusCollisions = multiCollides(users, allViruses).filter(([user]) => user.status !== INFECTED);\n        if (userVirusCollisions.length === 0) {\n            return;\n        }\n        userVirusCollisions.forEach(([user]) => user.infect());\n        if (gameInactive) {\n            return;\n        }\n        const ended = this.endLevelOrGame();\n        if (!ended) {\n            messageBox.flash('user infected!');\n        }\n    }\n}\n\nexport default new Users();\n","/* global kontra */\n\nimport { drawUser, INFECTED } from './index.js';\nimport { tileWidth, tileHeight, collisionRadius } from '../config.js';\nimport { ONLINE } from './index.js';\nimport { pubsub, INFECTED as INFECTED_EVENT } from '../pubsub/index.js';\n\nexport default ({ map, row, col }) => {\n    const { x, y } = map.getXAndY({ row, col });\n    return {\n        context: kontra.context,\n        x,\n        y,\n        collisionRadius,\n        infected: false,\n        map,\n        mapX: col * tileWidth,\n        mapY: row * tileHeight,\n        row,\n        col,\n        status: ONLINE,\n        update() {\n            ({ x: this.x, y: this.y } = map.getXAndY({ mapX: this.mapX, mapY: this.mapY }));\n        },\n        render() {\n            drawUser(this);\n        },\n        infect() {\n            this.status = INFECTED;\n            pubsub.publish(INFECTED_EVENT);\n        }\n    };\n};\n","export const ONLINE = 0;\nexport const OFFLINE = 1;\nexport const INFECTED = 2;\n","/* global kontra */\nimport { lightBlue, darkBlue, lightGreen, darkGreen, lightRed, darkRed } from '../config.js';\nimport { ONLINE, OFFLINE, INFECTED } from './constants.js';\nimport { degreesToRadians as deg2rad } from '../utils/index.js';\n\nconst spriteMapping = {\n    [ONLINE]: { fg: lightBlue, bg: darkBlue },\n    [OFFLINE]: { fg: lightGreen, bg: darkGreen },\n    [INFECTED]: { fg: lightRed, bg: darkRed }\n};\n\nexport default sprite => {\n    const { context: ctx, x, y, status } = sprite;\n    const { fg, bg } = spriteMapping[status];\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = fg;\n    ctx.fillStyle = bg;\n    ctx.beginPath();\n    ctx.moveTo(-40, 40);\n    ctx.lineTo(-40, 20);\n    ctx.arc(-20, 20, 20, deg2rad(180), deg2rad(270));\n    ctx.moveTo(-20, 0);\n    ctx.lineTo(20, 0);\n    ctx.arc(20, 20, 20, deg2rad(270), deg2rad(0));\n    ctx.lineTo(40, 40);\n    ctx.lineTo(-40, 40);\n    ctx.moveTo(-23, 20);\n    ctx.lineTo(-23, 40);\n    ctx.moveTo(23, 20);\n    ctx.lineTo(23, 40);\n    ctx.fill();\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.arc(0, -15, 25, deg2rad(0), deg2rad(360));\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n};\n","/* global kontra */\n\nimport { moveCamera } from './utils/index.js';\nimport { pubsub, DROP_SHIP } from '../pubsub/index.js';\nimport { servers } from '../server/index.js';\nimport { viruses } from '../virus/index.js';\nimport { users } from '../user/index.js';\n\nexport default ({ map, player, bombs }) => {\n    const times = [];\n    let fps;\n    let shipMoving = true;\n    pubsub.subscribe(DROP_SHIP, () => (shipMoving = false));\n\n    return kontra.gameLoop({\n        update() {\n            viruses.update();\n            player.update();\n            player.infect([...servers.getInfectedServers(), ...viruses.getAll()]); // TODO\n            player.teleport();\n            if (shipMoving) {\n                moveCamera({ map, ...player });\n            }\n            users.update();\n            users.infect();\n            bombs.update();\n            servers.update();\n            servers.infect();\n        },\n        render() {\n            map.render();\n            users.render();\n            servers.render();\n            bombs.render();\n            player.render();\n            viruses.render();\n            if (process.env.NODE_ENV === 'development') {\n                const now = performance.now();\n                while (times.length > 0 && times[0] <= now - 1000) {\n                    times.shift();\n                }\n                times.push(now);\n                fps = times.length;\n                const { row, col } = map.getRowAndCol({ x: 400, y: 300 });\n\n                // eslint-disable-next-line no-param-reassign\n                window.devbox.innerHTML = `${fps} fps – sx=${map.sx}, sy=${map.sy}, row=${row}, col=${col}`;\n            }\n        }\n    });\n};\n","/* eslint-disable no-param-reassign */\nimport { degreesToRadians as deg2rad } from '../../utils/index.js';\nimport { tileHeight, tileWidth, lightBlue } from '../../config.js';\n\nfunction calculatePointOnArc(deg, r) {\n    return [Math.cos(deg2rad(deg)) * r + 50, Math.sin(deg2rad(deg)) * r + 50];\n}\n\nexport default ({ ctx, row, col, deg, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.rotate(deg2rad(deg));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        ctx.moveTo(20, 50);\n        ctx.arc(50, 50, 30, deg2rad(180), deg2rad(190));\n        ctx.moveTo(...calculatePointOnArc(190, 30));\n        ctx.lineTo(10, 45);\n        ctx.lineTo(10, 35);\n        ctx.lineTo(-10, 40);\n        ctx.lineTo(...calculatePointOnArc(190, 70));\n        ctx.arc(50, 50, 70, deg2rad(190), deg2rad(180), true);\n        ctx.moveTo(50, 20);\n        ctx.arc(50, 50, 30, deg2rad(270), deg2rad(260), true);\n        ctx.moveTo(...calculatePointOnArc(260, 30));\n        ctx.lineTo(40, 10);\n        ctx.lineTo(45, 0);\n        ctx.lineTo(35, 0);\n        ctx.lineTo(...calculatePointOnArc(260, 70));\n        ctx.arc(50, 50, 70, deg2rad(260), deg2rad(270));\n    } else {\n        ctx.moveTo(20, 50);\n        ctx.arc(50, 50, 30, deg2rad(180), deg2rad(270));\n        ctx.moveTo(-20, 50);\n        ctx.arc(50, 50, 70, deg2rad(180), deg2rad(270));\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* eslint-disable no-param-reassign */\nimport { tileWidth, tileHeight, lightBlue } from '../../config.js';\nimport { degreesToRadians as deg2rad } from '../../utils/index.js';\nimport { krakel } from './utils/index.js';\n\nexport default ({ ctx, row, col, deg, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.rotate(deg2rad(deg));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        krakel(ctx, [\n            [0, -20, 50],\n            [1, -20, 30],\n            [1, -10, 40],\n            [1, 0, 25],\n            [1, 10, 35],\n            [1, 20, 30],\n            [1, 20, 50],\n            [0, -20, -50],\n            [1, -20, -40],\n            [1, -10, -25],\n            [1, 0, -35],\n            [1, 10, -30],\n            [1, 20, -40],\n            [1, 20, -50]\n        ]);\n    } else {\n        krakel(ctx, [[0, -20, -50], [1, -20, 50], [0, 20, -50], [1, 20, 50]]);\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* eslint-disable no-param-reassign */\nimport { tileWidth, tileHeight, lightBlue } from '../../config.js';\nimport { degreesToRadians as deg2rad } from '../../utils/index.js';\nimport { krakel } from './utils/index.js';\n\nexport default ({ ctx, row, col, deg, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.rotate(deg2rad(deg));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        krakel(ctx, [\n            [0, 50, 20],\n            [1, 40, 20],\n            [1, 45, 10],\n            [1, 40, -10],\n            [1, 45, -20],\n            [1, 50, -20],\n            [0, 20, -50],\n            [1, 20, -35],\n            [1, 10, -40],\n            [1, 0, -30],\n            [1, -10, -40],\n            [1, -20, -35],\n            [1, -20, -50],\n            [0, -50, -20],\n            [1, -40, -20],\n            [1, -35, -10],\n            [1, -45, 0],\n            [1, -30, 10],\n            [1, -35, 20],\n            [1, -50, 20]\n        ]);\n    } else {\n        krakel(ctx, [\n            [0, -20, -50],\n            [1, -20, -20],\n            [1, -50, -20],\n            [0, 20, -50],\n            [1, 20, -20],\n            [1, 50, -20],\n            [0, -50, 20],\n            [1, 50, 20]\n        ]);\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* eslint-disable no-param-reassign */\nimport { tileWidth, tileHeight, lightBlue } from '../../config.js';\nimport { krakel } from './utils/index.js';\n\nexport default ({ ctx, row, col, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        krakel(ctx, [\n            [0, -20, 50],\n            [1, -20, 45],\n            [1, -10, 40],\n            [1, 0, 45],\n            [1, 10, 35],\n            [1, 20, 40],\n            [1, 20, 50],\n            [0, 50, 20],\n            [1, 40, 20],\n            [1, 45, 10],\n            [1, 40, -10],\n            [1, 45, -20],\n            [1, 50, -20],\n            [0, 20, -50],\n            [1, 20, -35],\n            [1, 10, -40],\n            [1, 0, -30],\n            [1, -10, -40],\n            [1, -20, -35],\n            [1, -20, -50],\n            [0, -50, -20],\n            [1, -40, -20],\n            [1, -35, -10],\n            [1, -45, 0],\n            [1, -30, 10],\n            [1, -35, 20],\n            [1, -50, 20]\n        ]);\n    } else {\n        krakel(ctx, [\n            [0, -20, -50],\n            [1, -20, -20],\n            [1, -50, -20],\n            [0, 20, -50],\n            [1, 20, -20],\n            [1, 50, -20],\n            [0, -50, 20],\n            [1, -20, 20],\n            [1, -20, 50],\n            [0, 50, 20],\n            [1, 20, 20],\n            [1, 20, 50]\n        ]);\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* eslint-disable no-param-reassign */\nimport { tileWidth, tileHeight, lightBlue } from '../../config.js';\nimport { degreesToRadians as deg2rad } from '../../utils/index.js';\nimport { krakel } from './utils/index.js';\n\nexport default ({ ctx, row, col, deg, broken = false }) => {\n    ctx.save();\n    ctx.translate((col - 1) * tileWidth + tileWidth / 2, (row - 1) * tileHeight + tileHeight / 2);\n    ctx.rotate(deg2rad(deg));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = lightBlue;\n    ctx.beginPath();\n    if (broken) {\n        krakel(ctx, [[0, -20, 50], [1, -20, 40], [1, -10, 45], [1, 0, 35], [1, 10, 45], [1, 20, 40], [1, 20, 50]]);\n    } else {\n        krakel(ctx, [[0, -20, 50], [1, -20, 0], [1, 20, 0], [1, 20, 50]]);\n    }\n    ctx.stroke();\n    ctx.restore();\n};\n","/* global kontra */\n\n/**\n * A tile engine for rendering tilesets. Works well with the tile engine program Tiled.\n * @memberof kontra\n *\n * @param {object} properties - Properties of the tile engine.\n * @param {number} [properties.tileWidth=32] - Width of a tile.\n * @param {number} [properties.tileHeight=32] - Height of a tile.\n * @param {number} properties.width - Width of the map (in tiles).\n * @param {number} properties.height - Height of the map (in tiles).\n * @param {number} [properties.x=0] - X position to draw.\n * @param {number} [properties.y=0] - Y position to draw.\n * @param {number} [properties.sx=0] - X position to clip the tileset.\n * @param {number} [properties.sy=0] - Y position to clip the tileset.\n * @param {Context} [properties.context=kontra.context] - Provide a context for the tile engine to draw on.\n */\nexport default (properties = {}) => {\n    if (process.env.NODE_ENV === 'development' && (!properties.width || !properties.height)) {\n        throw Error('You must provide width and height properties');\n    }\n\n    const width = properties.width;\n    const height = properties.height;\n\n    // size of the tiles. Most common tile size on opengameart.org seems to be 32x32,\n    // followed by 16x16\n    // Tiled names the property tilewidth and tileheight\n    const tileWidth = properties.tileWidth || 32;\n    const tileHeight = properties.tileHeight || 32;\n\n    const mapWidth = width * tileWidth;\n    const mapHeight = height * tileHeight;\n\n    const context = properties.context || kontra.context;\n    const canvasWidth = context.canvas.width;\n    const canvasHeight = context.canvas.height;\n\n    // create an off-screen canvas for pre-rendering the map\n    // @see http://jsperf.com/render-vs-prerender\n    const offscreenCanvas = document.createElement('canvas');\n    const offscreenContext = offscreenCanvas.getContext('2d');\n\n    // when clipping an image, sx and sy must within the image region, otherwise\n    // Firefox and Safari won't draw it.\n    // @see http://stackoverflow.com/questions/19338032/canvas-indexsizeerror-index-or-size-is-negative-or-greater-than-the-allowed-a\n    const sxMax = Math.max(0, mapWidth - canvasWidth);\n    const syMax = Math.max(0, mapHeight - canvasHeight);\n\n    let _sx, _sy;\n\n    // draw order of layers (by name)\n    const layerOrder = [];\n\n    const tileEngine = {\n        width,\n        height,\n\n        tileWidth,\n        tileHeight,\n\n        mapWidth,\n        mapHeight,\n\n        context,\n\n        x: properties.x || 0,\n        y: properties.y || 0,\n\n        tilesets: [],\n        layers: {},\n\n        /**\n         * Add an tileset for the tile engine to use.\n         * @memberof kontra.tileEngine\n         */\n        addTilesets: function addTilesets(tilesets) {\n            [].concat(tilesets).forEach(tileset => {\n                const tilesetImage = tileset.image;\n                let image, firstGrid, lastTileset, tiles;\n\n                // @see https://github.com/jed/140bytes/wiki/Byte-saving-techniques#coercion-to-test-for-types\n                if (`${tilesetImage}` === tilesetImage) {\n                    let i = Infinity;\n\n                    while (i >= 0) {\n                        i = tilesetImage.lastIndexOf('/', i);\n                        const path = i < 0 ? tilesetImage : tilesetImage.substr(i);\n\n                        if (kontra.assets.images[path]) {\n                            image = kontra.assets.images[path];\n                            break;\n                        }\n\n                        i--;\n                    }\n                } else {\n                    image = tilesetImage;\n                }\n\n                firstGrid = tileset.firstGrid;\n\n                // if the width or height of the provided image is smaller than the tile size,\n                // default calculation to 1\n                const numTiles = ((image.width / tileWidth) | 0 || 1) * ((image.height / tileHeight) | 0 || 1);\n\n                if (!firstGrid) {\n                    // only calculate the first grid if the tile map has a tileset already\n                    if (tileEngine.tilesets.length > 0) {\n                        lastTileset = tileEngine.tilesets[tileEngine.tilesets.length - 1];\n                        tiles =\n                            ((lastTileset.image.width / tileWidth) | 0) * ((lastTileset.image.height / tileHeight) | 0);\n\n                        firstGrid = lastTileset.firstGrid + tiles;\n                    }\n                    // otherwise this is the first tile added to the tile map\n                    else {\n                        firstGrid = 1;\n                    }\n                }\n\n                tileEngine.tilesets.push({\n                    firstGrid,\n                    lastGrid: firstGrid + numTiles - 1,\n                    image\n                });\n\n                // sort the tile map so we can perform a binary search when drawing\n                tileEngine.tilesets.sort((a, b) => a.firstGrid - b.firstGrid);\n            });\n        },\n\n        /**\n         * Add a layer to the tile engine.\n         * @memberof kontra.tileEngine\n         */\n        addLayers: function addLayers(layers) {\n            [].concat(layers).forEach(layer => {\n                // eslint-disable-next-line no-param-reassign\n                layer.render = layer.render === undefined ? true : layer.render;\n\n                let data, row, c, value;\n\n                // flatten a 2D array into a single array\n                if (Array.isArray(layer.data[0])) {\n                    data = [];\n\n                    // eslint-disable-next-line no-cond-assign\n                    for (let r = 0; (row = layer.data[r]); r++) {\n                        for (c = 0; c < width; c++) {\n                            data.push(row[c] || 0);\n                        }\n                    }\n                } else {\n                    data = layer.data;\n                }\n\n                tileEngine.layers[layer.name] = {\n                    data,\n                    zIndex: layer.zIndex || 0,\n                    render: layer.render\n                };\n\n                // merge properties of layer onto layer object\n                for (const prop in layer.properties) {\n                    if (layer.properties.hasOwnProperty(prop)) {\n                        value = layer.properties[prop];\n\n                        try {\n                            value = JSON.parse(value);\n                        } catch (e) {\n                            /* intentionally empty */\n                        }\n\n                        tileEngine.layers[layer.name][prop] = value;\n                    }\n                }\n\n                // only add the layer to the layer order if it should be drawn\n                if (tileEngine.layers[layer.name].render) {\n                    layerOrder.push(layer.name);\n\n                    layerOrder.sort((a, b) => tileEngine.layers[a].zIndex - tileEngine.layers[b].zIndex);\n                }\n            });\n\n            preRenderImage();\n        },\n\n        changeTile(layerId, position, tile) {\n            const dataIndex = getIndex(position);\n            const layer = tileEngine.layers[layerId];\n            layer.data[dataIndex] = tile;\n            renderTile(layer, dataIndex, true);\n        },\n\n        /**\n         * Get the tile from the specified layer at x, y or row, col.\n         * @memberof kontra.tileEngine\n         *\n         * @param {string} name - Name of the layer.\n         * @param {object} position - Position of the tile in either x, y or row, col.\n         * @param {number} position.x - X coordinate of the tile.\n         * @param {number} position.y - Y coordinate of the tile.\n         * @param {number} position.row - Row of the tile.\n         * @param {number} position.col - Col of the tile.\n         *\n         * @returns {number}\n         */\n        tileAtLayer(name, position) {\n            const index = getIndex(position);\n\n            if (index >= 0) {\n                return tileEngine.layers[name].data[index];\n            }\n            return undefined;\n        },\n\n        /**\n         * Render the pre-rendered canvas.\n         * @memberof kontra.tileEngine\n         */\n        render() {\n            tileEngine.context.drawImage(\n                offscreenCanvas,\n                tileEngine.sx,\n                tileEngine.sy,\n                canvasWidth,\n                canvasHeight,\n                tileEngine.x,\n                tileEngine.y,\n                canvasWidth,\n                canvasHeight\n            );\n        },\n\n        /**\n         * Render a specific layer.\n         * @memberof kontra.tileEngine\n         *\n         * @param {string} name - Name of the layer to render.\n         */\n        renderLayer: function renderLayer(name) {\n            const layer = tileEngine.layers[name];\n\n            // calculate the starting tile\n            let row = tileEngine.getRow();\n            const col = tileEngine.getCol();\n            let index = getIndex({ row, col });\n\n            // calculate where to start drawing the tile relative to the drawing canvas\n            const startX = col * tileWidth - tileEngine.sx;\n            const startY = row * tileHeight - tileEngine.sy;\n\n            // calculate how many tiles the drawing canvas can hold\n            const viewWidth = Math.min(Math.ceil(canvasWidth / tileWidth) + 1, width);\n            const viewHeight = Math.min(Math.ceil(canvasHeight / tileHeight) + 1, height);\n            const numTiles = viewWidth * viewHeight;\n\n            let count = 0;\n            let x, y, tile, tileset, image, tileOffset, w, sx, sy;\n\n            // draw just enough of the layer to fit inside the drawing canvas\n            while (count < numTiles) {\n                tile = layer.data[index];\n\n                if (tile) {\n                    tileset = getTileset(tile);\n                    image = tileset.image;\n\n                    x = startX + (count % viewWidth) * tileWidth;\n                    y = startY + ((count / viewWidth) | 0) * tileHeight;\n\n                    tileOffset = tile - tileset.firstGrid;\n                    w = image.width / tileWidth;\n\n                    sx = (tileOffset % w) * tileWidth;\n                    sy = ((tileOffset / w) | 0) * tileHeight;\n\n                    tileEngine.context.drawImage(image, sx, sy, tileWidth, tileHeight, x, y, tileWidth, tileHeight);\n                }\n\n                if (++count % viewWidth === 0) {\n                    index = col + ++row * width;\n                } else {\n                    index++;\n                }\n            }\n        },\n\n        getRowAndCol({ x, y }) {\n            return {\n                row: this.getRow(y),\n                col: this.getCol(x)\n            };\n        },\n\n        getXAndY({ row, col, mapX, mapY }) {\n            return {\n                x: (col ? col * tileWidth : mapX) - tileEngine.sx + tileWidth / 2,\n                y: (row ? row * tileHeight : mapY) - tileEngine.sy + tileHeight / 2\n            };\n        },\n\n        /**\n         * Get the row from the y coordinate.\n         * @memberof kontra.tileEngine\n         *\n         * @param {number} y - Y coordinate.\n         *\n         * @return {number}\n         */\n        getRow(y = 0) {\n            return ((tileEngine.sy + y) / tileHeight) | 0;\n        },\n\n        /**\n         * Get the col from the x coordinate.\n         * @memberof kontra.tileEngine\n         *\n         * @param {number} x - X coordinate.\n         *\n         * @return {number}\n         */\n        getCol(x = 0) {\n            return ((tileEngine.sx + x) / tileWidth) | 0;\n        },\n\n        get sx() {\n            return _sx;\n        },\n\n        get sy() {\n            return _sy;\n        },\n\n        // ensure sx and sy are within the image region\n        set sx(value) {\n            _sx = Math.min(Math.max(0, value), sxMax);\n        },\n\n        set sy(value) {\n            _sy = Math.min(Math.max(0, value), syMax);\n        }\n    };\n\n    // set here so we use setter function\n    tileEngine.sx = properties.sx || 0;\n    tileEngine.sy = properties.sy || 0;\n\n    // make the off-screen canvas the full size of the map\n    offscreenCanvas.width = mapWidth;\n    offscreenCanvas.height = mapHeight;\n\n    // merge properties of the tile engine onto the tile engine itself\n    for (const prop in properties.properties) {\n        if (properties.properties.hasOwnProperty(prop)) {\n            let value = properties.properties[prop];\n\n            try {\n                value = JSON.parse(value);\n            } catch (e) {\n                /* intentionally empty */\n            }\n\n            // passed in properties override properties.properties\n            tileEngine[prop] = tileEngine[prop] || value;\n        }\n    }\n\n    if (properties.tilesets) {\n        tileEngine.addTilesets(properties.tilesets);\n    }\n\n    if (properties.layers) {\n        tileEngine.addLayers(properties.layers);\n    }\n\n    /**\n     * Get the index of the x, y or row, col.\n     * @memberof kontra.tileEngine\n     * @private\n     *\n     * @param {number} position.x - X coordinate of the tile.\n     * @param {number} position.y - Y coordinate of the tile.\n     * @param {number} position.row - Row of the tile.\n     * @param {number} position.col - Col of the tile.\n     *\n     * @return {number} Returns the tile index or -1 if the x, y or row,\n     *         col is outside the dimensions of the tile engine.\n     */\n    function getIndex(position) {\n        let row, col;\n\n        if (typeof position.x !== 'undefined' && typeof position.y !== 'undefined') {\n            row = tileEngine.getRow(position.y);\n            col = tileEngine.getCol(position.x);\n        } else {\n            row = position.row;\n            col = position.col;\n        }\n\n        // don't calculate out of bound numbers\n        if (row < 0 || col < 0 || row >= height || col >= width) {\n            return -1;\n        }\n\n        return col + row * width;\n    }\n\n    /**\n     * Modified binary search that will return the tileset associated with the tile\n     * @memberof kontra.tileEngine\n     * @private\n     *\n     * @param {number} tile - Tile grid.\n     *\n     * @return {object}\n     */\n    function getTileset(tile) {\n        let min = 0;\n        let max = tileEngine.tilesets.length - 1;\n        let index, currTile;\n\n        while (min <= max) {\n            index = ((min + max) / 2) | 0;\n            currTile = tileEngine.tilesets[index];\n\n            if (tile >= currTile.firstGrid && tile <= currTile.lastGrid) {\n                return currTile;\n            } else if (currTile.lastGrid < tile) {\n                min = index + 1;\n            } else {\n                max = index - 1;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Pre-render the tiles to make drawing fast.\n     * @memberof kontra.tileEngine\n     * @private\n     */\n    function preRenderImage() {\n        // draw each layer in order\n        // eslint-disable-next-line no-cond-assign\n        for (let layerIndex = 0, layer; (layer = tileEngine.layers[layerOrder[layerIndex]]); layerIndex++) {\n            for (let dataIndex = 0, len = layer.data.length; dataIndex < len; dataIndex++) {\n                renderTile(layer, dataIndex);\n            }\n        }\n    }\n\n    function renderTile(layer, dataIndex, clear = false) {\n        const tile = layer.data[dataIndex];\n\n        // skip empty tiles (0)\n        if (!tile) {\n            return;\n        }\n\n        const tileset = getTileset(tile);\n        const image = tileset.image;\n\n        const x = (dataIndex % width) * tileWidth;\n        const y = ((dataIndex / width) | 0) * tileHeight;\n\n        const tileOffset = tile - tileset.firstGrid;\n        const w = image.width / tileWidth;\n\n        const sx = (tileOffset % w) * tileWidth;\n        const sy = ((tileOffset / w) | 0) * tileHeight;\n\n        if (clear) {\n            offscreenContext.clearRect(x, y, tileWidth, tileHeight);\n        }\n        offscreenContext.drawImage(image, sx, sy, tileWidth, tileHeight, x, y, tileWidth, tileHeight);\n    }\n\n    return tileEngine;\n};\n","/* global kontra */\n\nimport { tileHeight, tileWidth, mapPadding } from '../config.js';\nimport { calculateCameraCoordinates } from '../utils/index.js';\nimport { addPadding } from './utils/index.js';\nimport { createTilesheet } from './tilesheet/index.js';\nimport { createTileEngine } from '../tileEngine/index.js';\n\nexport default async ({ data, width, height, col, row }) => {\n    const { sx, sy } = calculateCameraCoordinates({ col, row });\n    const map = createTileEngine({\n        // tile size\n        tileWidth,\n        tileHeight,\n\n        // map size in tiles\n        width: width + mapPadding * 2,\n        height: height + mapPadding * 2,\n\n        sx,\n        sy\n    });\n\n    const paddedMap = addPadding(data, width, height, mapPadding);\n    const image = await createTilesheet();\n    map.addTilesets({ image });\n    map.addLayers([\n        {\n            name: 'main',\n            data: paddedMap\n        }\n    ]);\n    return map;\n};\n","export default (arr, w, h, pad) => {\n    const retVal = [];\n    let idx = 0;\n    for (let row = 0; row < h + pad * 2; row++) {\n        for (let col = 0; col < w + pad * 2; col++) {\n            if (row < pad || row >= pad + h || col < pad || col >= pad + w) {\n                retVal.push(0);\n                continue;\n            }\n            retVal.push(arr[idx++]);\n        }\n    }\n    return retVal;\n};\n","import { tileHeight, tileWidth } from '../../config.js';\nimport { drawCurve, drawStraight, drawTSection, drawCrossing, drawTerminus } from './index.js';\n\nexport default () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 8 * tileWidth;\n    canvas.height = 8 * tileHeight;\n    const ctx = canvas.getContext('2d');\n    drawCurve({ ctx, row: 1, col: 1, deg: 0 });\n    drawCurve({ ctx, row: 1, col: 2, deg: 90 });\n    drawCurve({ ctx, row: 2, col: 1, deg: 270 });\n    drawCurve({ ctx, row: 2, col: 2, deg: 180 });\n    drawStraight({ ctx, row: 1, col: 3, deg: 0 });\n    drawStraight({ ctx, row: 2, col: 3, deg: 90 });\n    drawTSection({ ctx, row: 1, col: 4, deg: 0 });\n    drawTSection({ ctx, row: 1, col: 5, deg: 90 });\n    drawTSection({ ctx, row: 1, col: 6, deg: 180 });\n    drawTSection({ ctx, row: 2, col: 5, deg: 270 });\n    drawCrossing({ ctx, row: 2, col: 4 });\n    drawTerminus({ ctx, row: 1, col: 7, deg: 0 });\n    drawTerminus({ ctx, row: 1, col: 8, deg: 90 });\n    drawTerminus({ ctx, row: 2, col: 7, deg: 180 });\n    drawTerminus({ ctx, row: 2, col: 8, deg: 270 });\n    drawCurve({ ctx, row: 3, col: 1, deg: 0, broken: true });\n    drawCurve({ ctx, row: 3, col: 2, deg: 90, broken: true });\n    drawCurve({ ctx, row: 4, col: 1, deg: 270, broken: true });\n    drawCurve({ ctx, row: 4, col: 2, deg: 180, broken: true });\n    drawStraight({ ctx, row: 3, col: 3, deg: 0, broken: true });\n    drawStraight({ ctx, row: 4, col: 3, deg: 90, broken: true });\n    drawTSection({ ctx, row: 3, col: 4, deg: 0, broken: true });\n    drawTSection({ ctx, row: 3, col: 5, deg: 90, broken: true });\n    drawTSection({ ctx, row: 3, col: 6, deg: 180, broken: true });\n    drawTSection({ ctx, row: 4, col: 5, deg: 270, broken: true });\n    drawCrossing({ ctx, row: 4, col: 4, broken: true });\n    drawTerminus({ ctx, row: 3, col: 7, deg: 0, broken: true });\n    drawTerminus({ ctx, row: 3, col: 8, deg: 90, broken: true });\n    drawTerminus({ ctx, row: 4, col: 7, deg: 180, broken: true });\n    drawTerminus({ ctx, row: 4, col: 8, deg: 270, broken: true });\n\n    const image = new Image();\n    image.src = canvas.toDataURL('image/png');\n    return new Promise(resolve => setTimeout(() => resolve(image), 100));\n};\n","/* global kontra */\n\nimport { drawPlayer, updatePlayer } from './index.js';\nimport { canvasHeight, canvasWidth, collisionRadius, teleportCooldownTimeout } from '../config.js';\nimport { pubsub, GAME_OVER, LEVEL_COMPLETED, DROP_SHIP, MAP_CHANGED } from '../pubsub/index.js';\nimport { multiCollides } from '../utils/index.js';\nimport { messageBox } from '../messageBox/index.js';\nimport { calculateCameraCoordinates } from '../utils/index.js';\nimport { directionIsAllowed, switchDirection } from '../directions/index.js';\nimport { servers } from '../server/index.js';\nimport { pathfinder } from '../pathfinder/index.js';\nimport { viruses } from '../virus/index.js';\n\nexport default ({ map, direction, speed }) => {\n    const player = {\n        context: kontra.context,\n        x: canvasWidth / 2,\n        y: canvasHeight / 2,\n        collisionRadius,\n        map,\n        speed,\n        infected: false,\n        gameInactive: true,\n        direction,\n        nextDirection: null,\n        dropBomb: false,\n        scale: 1,\n        dropping: false,\n        bombCoolingDown: false,\n        teleportToServer: false,\n        teleportCoolingDown: false,\n\n        update() {\n            ({\n                nextDirection: this.nextDirection,\n                direction: this.direction,\n                dropBomb: this.dropBomb,\n                scale: this.scale,\n                bombCoolingDown: this.bombCoolingDown,\n                teleportToServer: this.teleportToServer\n            } = updatePlayer(this, pubsub, messageBox));\n        },\n\n        render() {\n            drawPlayer(this);\n        },\n\n        infect(virusesOrServers) {\n            const collisions = multiCollides(virusesOrServers, [this]);\n\n            if (collisions.length > 0) {\n                // eslint-disable-next-line no-param-reassign\n                this.infected = true;\n                if (!this.gameInactive) {\n                    messageBox.show('player infected<br>game over');\n                    pubsub.publish(GAME_OVER);\n                }\n            }\n        },\n\n        teleport() {\n            if (this.teleportToServer && !this.teleportCoolingDown) {\n                this.teleportCoolingDown = true;\n\n                const nextServer = servers.getNext();\n                if (nextServer) {\n                    ({ sx: this.map.sx, sy: this.map.sy } = calculateCameraCoordinates(nextServer));\n                    if (!directionIsAllowed(this.map, { x: this.x, y: this.y }, this.direction)) {\n                        this.direction = switchDirection(this.map, { x: this.x, y: this.y }, this.direction);\n                    }\n                } else {\n                    messageBox.flash('all servers are destroyed or infected');\n                }\n\n                setTimeout(() => {\n                    this.teleportCoolingDown = false;\n                }, teleportCooldownTimeout);\n            }\n            this.teleportToServer = false;\n        },\n\n        enableControls() {\n            this.gameInactive = false;\n        },\n\n        canReachVirus() {\n            // check if player can reach all viruses by path\n            const playerWithRowAndCol = {\n                ...this,\n                ...this.map.getRowAndCol(this)\n            };\n            const virusesWithRowAndCol = viruses.getAllWithRowAndCol();\n            const playerCannotReachTheseVirusesByPath = virusesWithRowAndCol.filter(\n                virus => !pathfinder.isReachable(playerWithRowAndCol, virus)\n            );\n\n            if (playerCannotReachTheseVirusesByPath.length === 0) {\n                return;\n            }\n\n            // check if viruses can be reached from servers\n            const availableServers = servers.getAvailableServers();\n            const playerCannotReachTheseVirusesAtAll = [];\n\n            availableServers.forEach(server => {\n                playerCannotReachTheseVirusesByPath.forEach(virus => {\n                    if (!pathfinder.isReachable(server, virus)) {\n                        playerCannotReachTheseVirusesAtAll.push(virus);\n                    }\n                });\n            });\n\n            if (playerCannotReachTheseVirusesAtAll.length === 0) {\n                return;\n            }\n\n            // if there are any viruses not reachable, then infect all users the virus can reach\n        }\n    };\n\n    pubsub.subscribe(GAME_OVER, () => (player.gameInactive = true));\n    pubsub.subscribe(LEVEL_COMPLETED, () => (player.gameInactive = true));\n    pubsub.subscribe(DROP_SHIP, () => (player.dropping = true));\n    pubsub.subscribe(MAP_CHANGED, () => player.canReachVirus());\n\n    return player;\n};\n","import { lightGreen, darkGreen, lightRed, darkRed } from '../config.js';\nimport { calculateRotation } from '../utils/index.js';\n\nexport default sprite => {\n    const { context: ctx, x, y, direction, infected, scale } = sprite;\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.scale(scale, scale);\n    ctx.rotate(calculateRotation(direction));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = infected ? lightRed : lightGreen;\n    ctx.fillStyle = infected ? darkRed : darkGreen;\n    ctx.beginPath();\n    ctx.moveTo(-15, 25);\n    ctx.lineTo(0, -25);\n    ctx.lineTo(15, 25);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n};\n","import { degreesToRadians } from './index.js';\nimport { N, E, S, W } from '../directions/index.js';\n\nexport default direction => {\n    switch (direction) {\n        case N:\n            return degreesToRadians(0);\n        case E:\n            return degreesToRadians(90);\n        case S:\n            return degreesToRadians(180);\n        case W:\n            return degreesToRadians(270);\n        default:\n            return null;\n    }\n};\n","import { directionIsAllowed, switchDirection } from '../directions/index.js';\nimport { pubsub, DROP_BOMB, DROP_SHIP, GAME_OVER } from '../pubsub/index.js';\nimport { getKey, isInTheMiddle } from './utils/index.js';\nimport { messageBox } from '../messageBox/index.js';\nimport { bombCooldown } from '../config.js';\n\nexport default sprite => {\n    let { nextDirection, direction, dropBomb, scale, bombCoolingDown, teleportToServer } = sprite;\n    const { dropping, map, gameInactive, x, y } = sprite;\n    if (dropping) {\n        if (scale > 0) {\n            scale -= 0.01;\n        } else {\n            messageBox.show('You fell into the abyss<br>Game over');\n            pubsub.publish(GAME_OVER);\n        }\n        return { direction, nextDirection, dropBomb, scale, bombCoolingDown, teleportToServer };\n    }\n    if (!gameInactive) {\n        ({ nextDirection, dropBomb, teleportToServer } = getKey(sprite));\n        if (bombCoolingDown) {\n            dropBomb = false;\n        }\n    }\n    if (!isInTheMiddle({ x: map.sx, y: map.sy })) {\n        return { direction, nextDirection, dropBomb, scale, bombCoolingDown, teleportToServer };\n    }\n    if (nextDirection && directionIsAllowed(map, { x, y }, nextDirection)) {\n        direction = nextDirection;\n        nextDirection = null;\n    } else {\n        try {\n            direction = switchDirection(map, { x, y }, direction);\n        } catch ({ message }) {\n            if (message === 'dropped') {\n                pubsub.publish(DROP_SHIP);\n            }\n        }\n    }\n    if (dropBomb) {\n        pubsub.publish(DROP_BOMB, map.getRowAndCol({ x, y }));\n        dropBomb = false;\n        bombCoolingDown = true;\n        setTimeout(() => {\n            // eslint-disable-next-line no-param-reassign\n            sprite.bombCoolingDown = false;\n        }, bombCooldown);\n    }\n    return { direction, nextDirection, dropBomb, scale, bombCoolingDown, teleportToServer };\n};\n","/* global kontra */\n\nimport { N, E, S, W } from '../../directions/index.js';\n\nexport default sprite => {\n    let { nextDirection, dropBomb, teleportToServer } = sprite;\n    if (kontra.keys.pressed('right')) {\n        nextDirection = E;\n    }\n    if (kontra.keys.pressed('left')) {\n        nextDirection = W;\n    }\n    if (kontra.keys.pressed('up')) {\n        nextDirection = N;\n    }\n    if (kontra.keys.pressed('down')) {\n        nextDirection = S;\n    }\n    if (kontra.keys.pressed('space')) {\n        dropBomb = true;\n    }\n    if (kontra.keys.pressed('enter')) {\n        teleportToServer = true;\n    }\n\n    return { nextDirection, dropBomb, teleportToServer };\n};\n","import { tileHeight, tileWidth } from '../../config.js';\n\nexport default ({ x, y }) => (x - tileWidth / 2) % tileWidth === 0 && (y - tileHeight / 2) % tileHeight === 0;\n","import { canvasHeight, canvasWidth, lightBlue } from '../config.js';\n\nexport default () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = canvasWidth;\n    canvas.height = canvasHeight;\n    canvas.style.cssText = `\n        border: 4px solid ${lightBlue};\n    `;\n    const wrapper = document.getElementById('wrapper');\n    wrapper.appendChild(canvas);\n};\n","import { N, S } from '../directions/index.js';\n\nexport default [\n    {\n        player: {\n            col: 7,\n            row: 7,\n            direction: N,\n            speed: 5\n        },\n        virus: {\n            speed: 2.5,\n            max: 1,\n            interval: 3000\n        },\n        servers: [{ row: 7, col: 4 }, { row: 7, col: 10 }],\n        map: {\n            width: 7,\n            height: 7,\n            // prettier-ignore\n            data:\n                '   6   ' +\n                '   2 01' +\n                '0aac03c' +\n                '2 0b9 2' +\n                '4594aa9' +\n                '89 2   ' +\n                '   e   '\n        }\n    },\n    {\n        player: {\n            col: 8,\n            row: 9,\n            direction: S,\n            speed: 5\n        },\n        virus: {\n            speed: 2.5,\n            max: 2,\n            interval: 10000\n        },\n        servers: [{ row: 9, col: 8 }, { row: 9, col: 12 }, { row: 15, col: 15 }],\n        map: {\n            width: 20,\n            height: 20,\n            // prettier-ignore\n            data:\n                ' 6   6   6   6   6  ' +\n                'f3a1031  4a5ac 0ab1 ' +\n                ' 0a98ac  2 2 4ac 22 ' +\n                ' 20a5a9 0318ac 8a92 ' +\n                ' 22 2   20c  2    47' +\n                ' 22 2 0a928a53a51 2 ' +\n                ' 22 2 2  2  2  22 2 ' +\n                ' 8c 4a9  20a9  22 2 ' +\n                '  2 2   039    24a37' +\n                ' 0c 4a1 2 0aaaab9   ' +\n                ' 22 2 4ac 8a1  2  07' +\n                ' 89 4a9 8aaaba59  2 ' +\n                '    20a10aaa9 2 0a37' +\n                'f55a92 22   018aba1 ' +\n                ' 22  2 220a122  2 2 ' +\n                ' 431 4a922 4b3aac 47' +\n                ' 2 4aba598592   8a9 ' +\n                'f3ac 2 8aac 8a5a55a7' +\n                '   2 2    4aa12 22  ' +\n                '   e e    e  e8a9e  '\n        }\n    }\n];\n","function conv(c) {\n    const cc = c.charCodeAt(0);\n    return cc === 32 ? 0 : cc >= 97 ? cc - 86 : cc - 47;\n}\n\nexport default hex => hex.split('').map(c => conv(c));\n","import data from './data.js';\nimport mapHex2Arr from './mapHex2Arr.js';\n\nexport default levelIndex => {\n    const level = data[levelIndex];\n    return {\n        ...level,\n        map: {\n            ...level.map,\n            data: mapHex2Arr(level.map.data)\n        }\n    };\n};\n","export default () => {\n    const scoreBoard = document.createElement('div');\n    scoreBoard.setAttribute('id', 'scb');\n    const wrapper = document.getElementById('wrapper');\n    wrapper.appendChild(scoreBoard);\n    return scoreBoard;\n};\n","/* global kontra */\n\nimport { initAudio } from '../audio/index.js';\nimport { Bombs } from '../bomb/index.js';\nimport { createLoop } from '../loop/index.js';\nimport { createMap } from '../map/index.js';\nimport { createPlayer } from '../player/index.js';\nimport { users } from '../user/index.js';\nimport { viruses } from '../virus/index.js';\nimport { createCanvas } from '../canvas/index.js';\nimport { initPathfinder, pathfinder } from '../pathfinder/index.js';\nimport { pubsub, USERS_POSSIBLY_OFFLINE, GAME_OVER } from '../pubsub/index.js';\nimport { messageBox } from '../messageBox/index.js';\nimport { servers } from '../server/index.js';\nimport getLevel from '../level/getLevel.js';\nimport createScoreBoard from '../scoreBoard/createScoreBoard.js';\nimport initScoreBoard from '../scoreBoard/index.js';\n\nclass GameManager {\n    constructor() {\n        createCanvas();\n        kontra.init();\n        initPathfinder();\n        initAudio();\n        this.scoreBoard = createScoreBoard();\n        pubsub.subscribe(GAME_OVER, () => pubsub.reset(), true);\n    }\n\n    async initLevel(levelIndex) {\n        const level = getLevel(levelIndex);\n        const map = await createMap({ ...level.map, col: level.player.col, row: level.player.row });\n        this.player = createPlayer({ map, ...level.player });\n        const bombs = new Bombs(map);\n        viruses.init(map, level.virus);\n        pathfinder.setDataFromMap(map, 'main');\n        users.init(map);\n        servers.init(map, level.servers);\n        this.loop = createLoop({ map, player: this.player, bombs });\n        pubsub.subscribe(USERS_POSSIBLY_OFFLINE, () => users.updateOnlineStatus());\n        initScoreBoard(this.scoreBoard);\n\n        map.render();\n        users.render();\n        servers.render();\n        bombs.render();\n        this.player.render();\n    }\n\n    showStartScreen() {\n        messageBox.show(\n            'welcome, <span class=\"grn\">captain katamov!</span><br><br>' +\n                'Your shift as chief network security officers is about to begin… all users are online and happy. ' +\n                'in case of virus intrusion, <span class=\"grn\">cut them off</span> from the network ' +\n                \"to make sure they don't get infected!<br><br>\" +\n                '<table><tr><td class=\"grn\">arrow keys</td><td>…</td><td>change direction</td></tr>' +\n                '<tr><td class=\"grn\">space bar</td><td>…</td><td>drop bomb</td></tr>' +\n                '<tr><td class=\"grn\">return</td><td>…</td><td>teleport to server</td></tr>' +\n                '</table><br>press any key to begin!'\n        );\n        document.addEventListener(\n            'keydown',\n            () => {\n                messageBox.clear();\n                this.startLevel();\n                setTimeout(() => this.player.enableControls(), 500);\n            },\n            { once: true }\n        );\n    }\n\n    startLevel() {\n        this.loop.start();\n        viruses.startSpawning();\n    }\n}\n\nexport default new GameManager();\n","import { gameManager } from './gameManager/index.js';\n\n// will be removed by tree shaking\nimport createDevbox from './devbox/createDevbox.js';\nif (process.env.NODE_ENV === 'development') {\n    createDevbox();\n}\n\n(async () => {\n    await gameManager.initLevel(0);\n    gameManager.showStartScreen();\n})();\n"]}